%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: kinetic.dvi
%%Pages: 28
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSCommandLine: dvips kinetic.dvi -o kinetic.ps
%DVIPSParameters: dpi=600, compressed, comments removed
%DVIPSSource:  TeX output 1998.09.18:1549
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 600 600 (kinetic.dvi)
@start /Fa 2 111 df<ED07FC92387FFFC0913901F807F091390FE001F891391F80007E
027EC77E4AEC1F80EB03F04948EC0FC04948EC07E0495A013F16F049C8FC01FE15034916
F81201485AA2485AA2120F5B001F16075B123FA34848ED0FF0A3EF1FE0A290C9FC48EE3F
C0A21880177F6C17005F5F4C5A4C5A6C7E4C5A001F4B5A6D4A5A000F4B5A6D027EC7FC00
075D6C6C495A6C6CEB07E0D800FEEB1F8090263F80FEC8FC90380FFFF80101138035377D
B43A>79 D<D801E013FE3A07F803FF803A0E3E0F07E0001C90383C03F039181F70010038
13E026303FC07F12700060138014001503D8E07F5CEA407E1200150701FE5C5B150F5E12
0149131FEE8080EE81C00003023F13804914011603037F13000007147E495CED3E0E5E00
0FEC1E3849EB0FF0D80380EB03C02A227EA02E>110 D E /Fb 5
121 df<D97FF0913801FFC0800103923803F8004D5AA20107150FEF1DE0143C1739010F
157360010E15E3A2011EEC01C79338038780EB1C1EEE0707013CEC0E0F95C7FC0138141C
163801785D6EEB701E137016E001F0903801C03E173C01E0EB0380ED07000001D9078713
7C038E137801C0139CA2000302B813F85F018013F000076D5AD80FC01401D8FFFC9039C0
3FFF8015803A287AA73D>77 D<131FEB7FC03801E0EE3803C0FE3807807EEA0F0048133E
121E003E5B123C127CA2485BA448485A15E0A3903803E1C01307127039781DE380D83C39
1300381FF0FE3807C03C1B1B789923>97 D<130E131E133EA2131C1300A8EA03C0EA07F0
EA0C78121812381230EA70F8A212E0EAE1F01201EA03E0A3EA07C0A2EA0F801387A2EA1F
07130EA2EA1E0C131CEA0E38EA0FF0EA03C010287BA615>105 D<3B07801F800FC03B0F
E07FE03FF03B18F1E0F0F0783B38F380F9C07C3B30FF007B803CD870FEEB7F0049137E49
137C00E102FC137C495B1201A2484848485BA34C5A3907C003E018E0EE03E0A23C0F8007
C007C1C0A2EFC38004031300271F000F8013C7EE01FC000E6DC75A331B7B9938>109
D<90387C07C03901FF1FF0390787B878390E03F038000C1478001CEBE0F8123815703970
07C000A21200A2495AA449C7FC1570A2003014E0EA783E00F8EB01C0A239F07F03803970
EF0F00383FC3FC381F01F81D1B7C9920>120 D E /Fc 2 51 df<1506150EA2151E151C
153C1538157815F0EC03E0EC07C0EC3F80903801FE00EB3FFCB512E091C7FC14E038003F
FCEB01FE9038003F80EC07C0EC03E0EC00F015781538153C151C151E150EA31F1F7A982D
>30 D<90381FFF80137F48B5FCD803F0C7FCEA07C048C8FC121E5A123812781270A212F0
5AB61280A300E0C8FC7E1270A212781238123C7E7EEA07C0EA03F06CB512806C7E131F19
1F7A9927>50 D E /Fd 3 114 df<903807F02090381FFC609038780EE09038E003C038
01C001EA0380A2D807001380A26DC7FCA27FEA03FC3801FFC06C13F0EB3FF8EB01FCEB00
3E141E140EA21230A200705BA25C00785B38FE01E038C7FF80D881FEC7FC1B1E7B9C24>
83 D<3803C0F8380FE3FE380CFF0F3918FC07803830F80313F01200A23801E007A3EC0F
00EA03C0141E6D5A6D5A3807BFE0EB8F800180C7FCA248C8FCA4EA7FE012FF191A7F911F
>112 D<EBFC103803FE70380787F0EA0E01001C13E012381278A238F003C0A4EB0780A2
EA700FEA383F381FFF00EA0FCFEA000FA2131EA43801FFC05A141A7C911B>I
E /Fe 1 92 df<007C1A1FA200FEF23F80B3B3B3B3A76C1A7FA26C1B00A26D61A2003F62
6D1801A2001F626D1803A26C6C4E5A6D180F0007626C6C4E5A6D183F6C6C4E5A6C6D4D5A
6E5E6D6C4C90C7FCD93FF8EE0FFE6D6C4C5A6DB4EE7FF86D01C04A485A6D01F002075B6D
01FC021F5B9028007FFFE003B5C8FC6E90B65A020F16F8020316E002001680033F4AC9FC
030714F09226003FFECAFC51747B7F5C>91 D E /Ff 1 51 df<003FB712FEB9FCA300F0
C9120FB3B3A4B9FCA4303079B43E>50 D E /Fg 5 55 df<137F3801FFC0000713F0380F
C1F8381F007C003C131E0038130E0078130F00707F00F01480481303A56C130700701400
00785B0038130E003C131E001F137C380FC1F86CB45A000113C06C6CC7FC19197C9A22>
14 D<13E0EA01F0EA03F8A3EA07F0A313E0A2120F13C0A3EA1F80A21300A25A123EA35A
A3127812F8A25A12100D1E7D9F13>48 D<017F157F2601FFE0903803FFC0000701F89038
0FF1F0260F83FC90381F0038261E00FF013C7F001890263F8078130C4890261FC0E07F00
7090260FE1C07F0060EB07E3913803F780486DB4C7EA01806E5A157E157F81824B7E0060
DAF7E0EB0300913801E3F0DBC3F85B6C90260381FC13066C90260F00FE5B001C011E9038
7F803C6C017C90381FE0F82607C7F86DB45A2601FFE0010313C06C6CC86CC7FC391B7C99
42>I<49B5FC130F133F01FFC7FCEA01F8EA03E0EA078048C8FC121E121C123C12381278
1270A212F05AA2B7FCA300E0C8FCA27E1270A212781238123C121C121E7E6C7EEA03E0EA
01F86CB4FC013FB5FC130F130120277AA12D>I<150EA2151E151C153C1578157015F015
E0140115C0140315801407EC0F00140E141E141C143C14381478147014F0495A5C13035C
130791C7FC5B131E131C133C13381378137013F05B1201485A5B120790C8FC5A120E121E
121C123C5A127012F05A12601F3576A800>54 D E /Fh 32 119
df<EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F800D0D798C1B>46
D<141E143E14FE1307133FB5FCA313CFEA000FB3B3A6007FB61280A4213779B630>49
D<EB0FFC90387FFFC048B512F0000714FC390FF03FFF261F800F1380263F000313C05AD9
C00113E0486C6C13F07FA2ED7FF8A46C5A6C5A000FC7FCC8FCEDFFF0A216E05C16C04A13
8016004A5A5D4A5A4A5A4A5AEC7F8092C7FC14FEEB01F849481378495A495A495A013EC7
12F84914F05B4848130148B6FCA25A5A5A5A4815E0B7FCA425377BB630>I<EB03FF011F
13F0017F13FC3901FC07FF2603F003138048486C13C0496C13E0EA0FF001FC14F0121F7F
A56C4814E0A23803F001C714C04A138016004A5A4A5AEC3FF090380FFFC092C7FC15F090
380007FE913801FF806E13C016E0ED7FF016F816FC153FA216FEEA1FC0487E487E487EA4
16FCA249EB7FF8127F01C0EBFFF06C4814E06C6C4813C0260FFC0713806CB61200000114
FC6C6C13F0010790C7FC27387CB630>I<ED07C0150FA2151F153F157F15FFA25C5C5C5C
A2141E5C147C5C5C495A495A1307495A5C131E5B137C5B5B485A485A1207485A90C7FC12
1E5A127C5AB81280A4C70001EBC000AA0103B61280A429377DB630>I<001C15C0D81F80
130701F8137F90B61280A216005D5D15F05D15804AC7FC14F090C9FCA8EB07FE90383FFF
E090B512F89038FC07FC9038E003FFD98001138090C713C0120EC813E0157F16F0A216F8
A21206EA3F80EA7FE012FF7FA44914F0A26C4813FF90C713E0007C15C06C5B6C491380D9
C0071300390FF01FFE6CB512F8000114E06C6C1380D90FF8C7FC25387BB630>I<EC0FF8
ECFFFE0103EBFF8090390FF80FC090393FE003E090397FC001F09038FF000F48EC1FF848
48133F485A120F5B121FA2003FEC1FF0ED0FE04990C7FC127FA21408EC7FF039FFF1FFFC
01F313FFD9F78013809039FF007FC049EB3FE04914F0ED1FF85B16FCA34914FEA5127FA5
123F16FCA26C7E16F8000F143F6C6C14F0ED7FE06C6C14C03A01FF81FF806C90B5120001
3F13FC010F13F00101138027387CB630>I<EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2
EA3FE0EA0F80C7FCABEA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F800D2579
A41B>58 D<DB3FFCEB01C00203B5EAC003021FECF00791B6EAFC0F01039039FC00FF3F49
01C0EB1FFFD91FFEC77E49481403D97FF080494880485B48177F4849153F4890C9FC181F
485A180F123F5B1807127FA24993C7FC12FFAD127F7FF003C0123FA27F001F1707A26C6C
1780180F6C6D16006C6D5D6C173E6C6D157ED97FF85D6D6C4A5A6DB44A5A010701C0EB0F
E06D01FCEBFF80010090B548C7FC021F14F8020314E09126003FFEC8FC3A3B7BB945>67
D<B87E17F817FF18C028007FF8000713F09338007FF8EF1FFE717E050313807113C0A271
13E0F07FF0A2F03FF8A219FC181FA219FEA419FFAC19FEA419FC183FA219F8187F19F0F0
FFE0A24D13C04D13804D1300EF1FFEEF7FFC933807FFF0B912C095C7FC17FC178040397D
B849>I<B912F0A426007FF8C7FCEF1FF8170717031701A21700A21878A3043C137C183C
A41800167CA216FC150391B5FCA4ECF8031500167CA2163C180FA3181EA293C7FCA2183E
A2183C187CA218FCA2EF01F81703170F173FEE01FFB9FC18F0A338397DB83F>I<B7FCA4
26007FF8C9FCB3ACEF0780A5170F1800A35FA25FA25F5F5E5EEE0FFE167FB8FCA431397D
B839>76 D<B8FC17F017FEEFFF8028007FF8000F13C0040113E07013F0EF7FF8EF3FFCA2
EF1FFEA218FFA818FEA2EF3FFCA2EF7FF8EFFFF04C13E0040F13C091B7120017FC17E002
F8C9FCB3A4B612FCA438397DB841>80 D<003FB91280A4D9F800EBF003D87FC09238007F
C049161F007EC7150FA2007C1707A200781703A400F818E0481701A4C892C7FCB3AE010F
B7FCA43B387DB742>84 D<B600FC011FB512C0A426007FF8C8381FC000725AB3B3181F01
3F94C7FC8060011F163E6D6C157E187C6D6C15FC6D6D495A6D6DEB07F06D01F0EB1FE0DA
7FFEEBFFC0021FB6C8FC02075C020014F0030F1380423A7DB849>I<EB3FFE0003B512E0
000F14F8391FF00FFE003FEB03FF6D6C7F6E7FA26F7EA26C5A6C5AEA0380C8FCA2EC3FFF
010FB5FC137F3901FFF87F00071380380FFE00EA3FF85B485A12FF5BA415FF6D5A127F26
3FF00713F83B1FFC1FBFFFC0390FFFFE1F0003EBF80F39003FE0032A257DA42E>97
D<13FFB5FCA412077EAF4AB47E020F13F0023F13FC9138FE03FFDAF00013804AEB7FC002
80EB3FE091C713F0EE1FF8A217FC160FA217FEAA17FCA3EE1FF8A217F06E133F6EEB7FE0
6E14C0903AFDF001FF80903AF8FC07FE009039F03FFFF8D9E00F13E0D9C00390C7FC2F3A
7EB935>I<EE7F80ED7FFFA4150381AF903801FF81010F13F1013F13FD9038FFC07F0003
EB001FD807FC1307000F8048487F5B123FA2485AA312FFAA127FA27F123FA26C6C5B000F
5C6C6C5B6C6C4913C02701FF80FD13FE39007FFFF9011F13E1010313012F3A7DB935>
100 D<903803FF80011F13F0017F13FC3901FF83FE3A03FE007F804848133F484814C000
1FEC1FE05B003FEC0FF0A2485A16F8150712FFA290B6FCA301E0C8FCA4127FA36C7E1678
121F6C6C14F86D14F000071403D801FFEB0FE06C9038C07FC06DB51200010F13FC010113
E025257DA42C>I<EC1FF0903801FFFC010713FF90391FF87F8090383FE0FFD9FFC113C0
A2481381A24813016E1380A2ED3E0092C7FCA8B6FCA4000390C8FCB3ABB512FEA4223A7D
B91D>I<161FD907FEEBFFC090387FFFE348B6EAEFE02607FE07138F260FF801131F4848
6C138F003F15CF4990387FC7C0EEC000007F81A6003F5DA26D13FF001F5D6C6C4890C7FC
3907FE07FE48B512F86D13E0261E07FEC8FC90CAFCA2123E123F7F6C7E90B512F8EDFF80
16E06C15F86C816C815A001F81393FC0000F48C8138048157F5A163FA36C157F6C16006D
5C6C6C495AD81FF0EB07FCD807FEEB3FF00001B612C06C6C91C7FC010713F02B377DA530
>I<13FFB5FCA412077EAFED7FC0913803FFF8020F13FE91381F03FFDA3C01138014784A
7E4A14C05CA25CA291C7FCB3A3B5D8FC3F13FFA4303A7DB935>I<EA01F0EA07FC487EA2
487EA56C5AA26C5AEA01F0C8FCA913FF127FA412077EB3A9B512F8A4153B7DBA1B>I<13
FFB5FCA412077EB3B3ACB512FCA4163A7DB91B>108 D<01FED97FE0EB0FFC00FF902601
FFFC90383FFF80020701FF90B512E0DA1F81903983F03FF0DA3C00903887801F000749DA
CF007F00034914DE6D48D97FFC6D7E4A5CA24A5CA291C75BB3A3B5D8FC1FB50083B512F0
A44C257DA451>I<01FEEB7FC000FF903803FFF8020F13FE91381F03FFDA3C0113800007
13780003497E6D4814C05CA25CA291C7FCB3A3B5D8FC3F13FFA430257DA435>I<903801
FFC0010F13F8017F13FFD9FF807F3A03FE003FE048486D7E48486D7E48486D7EA2003F81
491303007F81A300FF1680A9007F1600A3003F5D6D1307001F5DA26C6C495A6C6C495A6C
6C495A6C6C6CB45A6C6CB5C7FC011F13FC010113C029257DA430>I<9039FF01FF80B500
0F13F0023F13FC9138FE07FFDAF00113800003496C13C00280EB7FE091C713F0EE3FF8A2
EE1FFCA3EE0FFEAA17FC161FA217F8163F17F06E137F6E14E06EEBFFC0DAF00313809139
FC07FE0091383FFFF8020F13E0020390C7FC91C9FCACB512FCA42F357EA435>I<9038FE
03F000FFEB0FFEEC3FFF91387C7F809138F8FFC000075B6C6C5A5CA29138807F80ED3F00
150C92C7FC91C8FCB3A2B512FEA422257EA427>114 D<90383FF0383903FFFEF8000F13
FF381FC00F383F0003007E1301007C130012FC15787E7E6D130013FCEBFFE06C13FCECFF
806C14C06C14F06C14F81203C614FC131F9038007FFE140700F0130114007E157E7E157C
6C14FC6C14F8EB80019038F007F090B512C000F8140038E01FF81F257DA426>I<130FA5
5BA45BA25B5BA25A1207001FEBFFE0B6FCA3000390C7FCB21578A815F86CEB80F014816C
EBC3E090383FFFC06D1380903803FE001D357EB425>I<B539F001FFF8A4000390C7EA3F
00161E6E133E6C153C6E137C6C15786E13F8017F5CECF001013F5C14F8011F495AA2ECFC
07010F5CECFE0F010791C7FC6E5A6D131E15BE6D13BC15FC6D5BA36E5AA26E5AA26E5AA2
6E5AA22D257EA432>118 D E /Fi 21 107 df<007FB81280B912C0A26C178032047996
41>0 D<121C127FEAFF80A5EA7F00121C0909799917>I<15301578B3A6007FB812F8B912
FCA26C17F8C80078C8FCB3A3007FB812F8B912FCA26C17F836367BB641>6
D<EF0180EF07C0171FEF7F80933801FF00EE07FCEE1FF0EE7FC04B48C7FCED07FCED1FF0
ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0EB7FC04848CAFCEA07FC
EA3FF0EA7FC048CBFC5AEA7F80EA3FE0EA0FF8EA03FEC66C7EEB3FE0EB0FF8EB03FE9038
00FF80EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED0FF8ED03FE923800FF80EE3FE0EE0F
F8EE03FE933800FF80EF3FC0170FEF038094C7FCAE007FB81280B912C0A26C1780324479
B441>20 D<126012F812FEEA7F80EA3FE0EA0FF8EA03FEC66C7EEB3FE0EB0FF8EB03FE90
3800FF80EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED0FF8ED03FE923800FF80EE3FE0EE
0FF8EE03FE933800FF80EF3FC0171FEF7F80933801FF00EE07FCEE1FF0EE7FC04B48C7FC
ED07FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0EB7FC048
48CAFCEA07FCEA1FF0EA7FC048CBFC12FC1270CCFCAE007FB81280B912C0A26C17803244
79B441>I<EF0180EF03C0A31707A21880170FA2EF1F00A2173E177E5F4C5A4C5AEE0FE0
EE3FC004FFC7FCED07FEED7FF8913807FFE00107B51280007FB500FCC8FCB612C0A26C14
FCD80007EBFF80D9000713E09138007FF8ED07FEED00FFEE3FC0EE0FE0EE03F0707E707E
177E173E83A2EF0F80A2170718C0A21703A3EF0180323279AC41>30
D<1478A414F85CA213015C1303495AA2495A49CCFC5B137E5B485A485AEA0FE0003FBA12
FEBCFCA2003F19FED80FE0CCFCEA03F06C7E6C7E137E7F7F6D7E6D7EA26D7E1301801300
A2801478A4482C7BAA53>32 D<181EA4181F84A285180785727EA2727E727E85197E85F1
1F80F10FC0F107F0007FBA12FCBCFCA26C19FCCCEA07F0F10FC0F11F80F13F00197E6161
4E5A4E5AA24E5A61180F96C7FCA260181EA4482C7BAA53>I<D90FF0ED07F0D93FFEED3F
FE90B56C91B5FC00036E903903F807C02707F07FF0903907C001E0270F801FF890390F80
00F090260007FC013EC71270001E6D6C491438486D6C0178141C00386D6D5A48DA7FC115
0E92383FE3E0006091261FF3C01406EEF78000E0DA0FFF1507486E90C812036F5AA26F7E
6F7F707EA24C7E6C4A6D14070060DBEFF81406ED03CF0070912607C7FC140E92380F83FE
6CDB01FF141CDB1E006D133C6C023E6D6C13786C4A6D6C13F0000FD901F090381FF8016C
6C484890390FFE0FE02703E01FC00103B512C0C6B5C76C1400D97FFC9138007FFCD90FE0
ED0FF048267BA453>49 D<91381FFFFE91B6FC1303010F14FED91FF0C7FCEB7F8001FEC8
FCEA01F8485A485A485A5B48C9FCA2123EA25AA2127812F8A25AA2B712FE16FFA216FE00
F0C9FCA27EA21278127CA27EA27EA26C7E7F6C7E6C7E6C7EEA00FEEB7F80EB1FF06DB512
FE010314FF1300021F13FE283279AD37>I<4B7E4B7E4B7EA24B7EA24B7EA2ED3E7CED7E
7EED7C3E4B7EA24A486C7EA24A486C7EA24A486C7EA24A486C7EA24AC77E4A80023E147C
4A80A24A80A249486E7EA249486E7EA249486E7EA249486E7EA249C97E4982013E167C49
82A24982A24848EE0F80A24848EE07C0A24848EE03E0A24848EE01F0001F18F890CBFC00
3E187CA248183EA2BBFCA36C18FE403C7BBB4B>52 D<EE0180EE03C01607A2EE0F80A2EE
1F00A2163EA25EA25EA24B5AA24B5AA24B5A150F5E4BC7FCA2153EA25DA25DA24A5AA24A
5AA24A5AA24A5AA24AC8FCA2143EA25CA25CA2495AA2495AA2495AA2495AA249C9FCA213
3EA25B13FC5B485AA2485AA2485AA2485AA248CAFCA2123EA25AA25AA25A12602A4E75BB
00>54 D<007FB612F0B712F8A27EC91278B3A5003FB612F85AA27EC91278B3A5007FB612
F8B7FCA26C15F0253A7CB92E>57 D<156015F0A21401EB07F190383FFFE0EB7C1FEBF007
48486C5AD803C07F4848487ED80F007FA248497E001E14BC153C003E143E141FA248EB1E
1F143EA2143CA2147C00FC1580147814F8A214F0A21301A214E01303A214C0A21307A214
80A2130FA214005B007C1500131EA2D87E3E5BA2D83E3C133E137CA21378001F5C13F800
0F14784913F800075C0003495AEBE0033901F007802603FC1FC7FCEBFFFEEBC7F0D807C0
C8FCA25BA26CC9FC21477CBF2A>59 D<ED03FE92381FFF80037F13C00203B5FCEC07C091
381E003F4A131F14F049481480495A495A49C7EA3F005B133E49147EA249147C000115FC
495C0003EC01E0495C000791C8FC5B120FA2485AA3123F90CAFCA35AA2127EA312FEA87E
161E5E6D14F8127F6D495A4B5A6C6C5C6D495A6C6C49C7FC01FE133C390FFF80F86CEBFF
E06C1480C649C8FCEB3FF02A3D7FBA2C>67 D<EE01FCEE0FFEEE7FFF4BB5FC4B1480ED0F
03ED1E014B7E157C4B137F4A5A020315004B137E0207147C4A48137017C04A4890C7FCA2
4AC9FCA25C147E14FEA25C1301A25C1303A3495AA4495AA4495AA35C133F91CAFCA2137E
182049ED01E017034848ED0FC0D9F7F8141F48B56C148003F014004802FF133E48EDF03C
0107ECFFF8261E007F14E048010F5C0070010049C7FC00C0EC0FF0333D7EBA39>76
D<0060161800F0163CB3B26C167CA2007C16F8A26CED01F0003F15036C6CEC07E06C6CEC
0FC0D807F0EC3F80D803FE903801FF003A00FFC00FFC6DB55A011F14E0010391C7FC9038
007FF82E347CB137>91 D<EC7FF80103B5FC011F14E0017F14F89039FFC00FFC3A03FE00
01FFD807F09038003F80D80FC0EC0FC04848EC07E048C8EA03F0003E150148ED00F8A248
167CA248163CB3B2006016182E347CB137>I<EC01F8140FEC3F80ECFC00495A495A495A
A2130F5CB3A7131F5C133F49C7FC13FEEA03F8EA7FE048C8FCEA7FE0EA03F8EA00FE137F
6D7E131F80130FB3A7801307A26D7E6D7E6D7EEC3F80EC0FF814011D537ABD2A>102
D<12FCEAFFC0EA07F0EA01FCEA007E7F80131F80130FB3A7801307806D7E6D7EEB007EEC
1FF0EC07F8EC1FF0EC7E00495A495A495A5C130F5CB3A7131F5C133F91C7FC137E485AEA
07F0EAFFC000FCC8FC1D537ABD2A>I<126012F0B3B3B3B3A91260045377BD17>106
D E /Fj 12 122 df<903803FFE0011F13F8017F13FE48B5FC48804848C6FCEA0FF0485A
49137E4848131890C9FC5A127EA25AA8127EA2127F6C140F6DEB1F806C7E6D133F6C6CEB
7F003907FE03FF6CB55A6C5C6C6C5B011F13E0010390C7FC21247AA32C>99
D<EB03FE90381FFFC0017F13F048B57E48803907FE03FE390FF800FFD81FE0EB3F805B48
48EB1FC090C7120F5A007E15E015075AB7FCA416C000FCC9FC7E127EA2127F6CEC03C06D
EB07E06C7ED80FF0130F6C6CEB3FC001FF13FF000190B512806C1500013F13FC010F13F0
0101138023247CA32C>101 D<1307EB1FC0A2497EA36D5AA20107C7FC90C8FCA7387FFF
C080B5FC7EA2EA0007B3A8007FB512FCB612FEA36C14FC1F3479B32C>105
D<387FFFE0B57EA37EEA0003B3B3A5007FB61280B712C0A36C158022337BB22C>108
D<397FF01FE039FFF87FFC9038F9FFFE01FB7F6CB6FC00019038F03F80ECC01F02807FEC
000F5B5BA25BB3267FFFE0B5FCB500F11480A36C01E0140029247FA32C>110
D<397FF01FE039FFF8FFF801FB13FE90B6FC6C158000019038F07FC09138801FE0913800
07F049EB03F85BED01FC491300A216FE167EA816FE6D14FCA2ED01F86D13036DEB07F015
0F9138801FE09138E07FC091B51280160001FB5B01F813F8EC3FC091C8FCAD387FFFE0B5
7EA36C5B27367FA32C>112 D<D87FFEEB3FC0B53801FFF0020713F8021F13FC6C5B3900
3F7FE1ECFF019138FC00F84A13704A13005CA25C5CA391C8FCAF007FB512E0B67EA36C5C
26247EA32C>114 D<90387FF8700003B512F8120F5A5A387FC00F387E00034813015AA3
6CEB00F0007F140013F0383FFFC06C13FE6CEBFF80000314E0C66C13F8010113FCEB0007
EC00FE0078147F00FC143F151F7EA26C143F6D133E6D13FE9038F007FC90B5FC15F815E0
00F8148039701FFC0020247AA32C>I<131E133FA9007FB6FCB71280A36C1500D8003FC8
FCB1ED03C0ED07E0A5EC800F011FEB1FC0ECE07F6DB51280160001035B6D13F89038003F
E0232E7EAD2C>I<3A7FFF01FFFCB514FE148314016C15FC3A03E0000F80A26D131F0001
1500A26D5B0000143EA26D137E017C137CA2017E13FC013E5BA2EB3F01011F5BA2148301
0F5BA214C701075BA214EF01035BA214FF6D90C7FCA26D5A147C27247EA32C>118
D<3A3FFF03FFF048018713F8A36C010313F03A00FC007E005D90387E01F8013F5BEB1F83
EC87E090380FCFC0903807EF80EB03FF6D90C7FC5C6D5A147C14FE130180903803EF8090
3807CFC0EB0FC7EC83E090381F01F0013F7FEB7E00017C137C49137E0001803A7FFF01FF
FC1483B514FE6C15FC140127247EA32C>120 D<3A7FFF01FFFCB5008113FE148314816C
010113FC3A03E0000F806C7E151F6D140012005D6D133E137C017E137E013E137CA2013F
13FC6D5BA2EB0F815DA2EB07C1ECC3E0A2EB03E3ECE7C0130114F75DEB00FFA292C7FC80
A2143EA2147E147CA214FC5CA2EA0C01003F5BEA7F83EB87E0EA7E0F495A387FFF806C90
C8FC6C5A6C5AEA07E027367EA32C>I E /Fk 34 123 df<EA07C0EA1FF0EA3FF8EA7FFC
EAFFFEA7EA7FFCEA3FF8EA1FF0EA07C00F0F788E1F>46 D<EC03C01407141F147FEB03FF
133FB6FCA413C3EA0003B3B3ADB712FCA5264177C038>49 D<ECFFE0010F13FE013F6D7E
90B612E0000315F82607FC0313FE3A0FE0007FFFD81F806D138048C7000F13C0488001C0
15E001F07F00FF6E13F07F17F881A46C5A6C5A6C5AC9FC17F05DA217E05D17C04B13804B
1300A2ED1FFC4B5A5E4B5A4B5A4A90C7FC4A5A4A5AEC0FF04A5AEC3F804AC7127814FE49
5A494814F8D907E014F0495A495A49C8FC017C140149140348B7FC4816E05A5A5A5A5AB8
FC17C0A42D417BC038>I<ECFFF0010713FF011F14C0017F14F049C66C7ED803F8EB3FFE
D807E06D7E81D80FF86D138013FE001F16C07FA66C5A6C4815806C485BC814005D5E4B5A
4B5A4B5A4A5B020F1380902607FFFEC7FC15F815FF16C090C713F0ED3FFCED0FFEEEFF80
816F13C017E0A26F13F0A217F8A3EA0FC0EA3FF0487EA2487EA217F0A25D17E06C5A4949
13C05BD83F80491380D81FF0491300D80FFEEBFFFE6CB612F800015D6C6C14C0011F49C7
FC010113E02D427BC038>I<EE1F80A24C7EA24C7EA34C7EA24B7FA34B7FA24B7FA34B7F
169F031F80161F82033F80ED3E07037E80157C8203FC804B7E02018115F0820203814B13
7F0207815D173F020F814B7F021F8292C77EA24A82023E80027E82027FB7FCA291B87EA2
498302F0C8FCA20103834A157F0107834A153FA249488284011F8491C97E4984133E017E
82B6020FB612F0A54C457CC455>65 D<B9FC18F018FE727E19E026003FFEC7001F13F805
017F9438003FFF060F7F727F727F727F84737E737EA2737EA2737EA21B80A2851BC0A51B
E0AD1BC0A51B8061A21B006162193F624F5A19FF624E5B06075B4E5B063F90C7FC4DB45A
050F13F8BA5A19C04EC8FC18F095C9FC4B447CC356>68 D<B76C0103B512F8A526003FFE
C93807E0004F5A4F5A077EC7FC614E5A4E5A4E5AF01F804EC8FC187E604D5AEF07F0EF0F
C04D5A4DC9FC177E4C5AEE03F04C5A4C5A4C7EEE7FF04C7E5D4B7F4B7F4B7FED3F3FDB7E
1F7F03FC806E486C7F4B7E4B6C7F0380804B6C7F4A7F717E84717F83717F85717F83717F
85717F187F727E86727F84727F86727F84B76C90B612FCA54E447CC358>75
D<B9FC18F018FE727E19E0D8001F90C7000F7F05017F716C7E727E727E721380A21AC084
A21AE0A91AC0A24E1380A21A00604E5A4E5A4D485A050F5B92B712C096C7FC18FC18C092
CBFCB3A7B712E0A543447DC34D>80 D<003FBA12E0A59026FE000FEB8003D87FE0933800
3FF049171F90C71607A2007E1803007C1801A300781800A400F819F8481978A5C81700B3
B3A20107B8FCA545437CC24E>84 D<B76C010FB512F8A526003FFEC93803E000B3B3A901
1F17076280190F6D606F151F6D95C7FC6D6D5D197E6D6D5D6D6D1403DA7FFC4A5A6EB4EC
3FF0020F9039F003FFE06E90B61280020193C8FC6E6C14FC030F14E09226007FFEC9FC4D
457CC356>I<903801FFE0011F13FE017F6D7E48B612E03A03FE007FF84848EB1FFC6D6D
7E486C6D7EA26F7FA36F7F6C5A6C5AEA00F090C7FCA40203B5FC91B6FC1307013F13F190
38FFFC01000313E0000F1380381FFE00485A5B127F5B12FF5BA35DA26D5B6C6C5B4B13F0
D83FFE013EEBFFC03A1FFF80FC7F0007EBFFF86CECE01FC66CEB8007D90FFCC9FC322F7D
AD36>97 D<EC3FFC49B512C0010F14F0013F14FC90397FF003FE9039FFC001FF0003495A
48494813805B120F485AA2485A6F1300007F6E5AED00784991C7FCA212FFAC6C7EA3123F
6DEC03C0A26C6C1407000F16806D140F6C6DEB1F006C6D133E6C01F05B3A007FFC03F86D
B55A010F14C0010391C7FC9038003FF82A2F7CAD32>99 D<EE03FEED07FFA5ED001F160F
B1EC3FE0903803FFFC010FEBFF8F013F14CF9039FFF807FF48EBC00148903880007F4890
C7123F4848141F49140F121F485AA3127F5BA212FFAC127FA37F123FA26C6C141FA26C6C
143F0007157F6C6C91B5FC6CD9C00314FC6C9038F01FEF6DB5128F011FEBFE0F010713F8
9026007FC0EBF80036467CC43E>I<EC3FF80103B57E010F14E0013F8090397FF83FF890
39FFC007FC48496C7E48496C7E48486D1380485A001FED7FC05B003FED3FE0A2127F5B17
F0161F12FFA290B7FCA401F0C9FCA5127FA27FA2123F17F06C7E16016C6C15E06C6C1403
6C6DEB07C06C6DEB0F806C01F0EB3F0090397FFE01FE011FB55A010714F0010114C09026
001FFEC7FC2C2F7DAD33>I<EDFF80020F13E0027F13F049B512F849EB8FFC90390FFE0F
FE90381FFC1F14F8133FEB7FF0A2ED0FFCEBFFE0ED03F0ED00C01600ABB612F8A5C601E0
C7FCB3B0007FEBFFE0A527467DC522>I<DAFFE0137E010F9039FE03FF80013FEBFF8F90
B812C048D9C07F133F489038001FF84848EB0FFC4848903907FE1F80001F9238FF0F0049
6D90C7FCA2003F82A8001F93C7FCA26D5B000F5D6C6C495A6C6C495A6C9038C07FF04890
B55A1680D8078F49C8FC018013E0000F90CAFCA47F7F7F90B612C016FC6CEDFF8017E06C
826C16FC7E000382000F82D81FF0C77ED83FC014074848020113808248C9FC177FA46D15
FF007F17006D5C6C6C4A5A6C6C4A5AD80FFEEC3FF83B07FFC001FFF0000190B612C06C6C
92C7FC010F14F8D9007F90C8FC32427DAC38>I<EB7FC0B5FCA512037EB1ED07FE92383F
FF8092B512E002C114F89139C7F03FFC9138CF801F9139DF000FFE14DE14FC4A6D7E5CA2
5CA35CB3A7B60083B512FEA537457CC43E>I<137C48B4FC4813804813C0A24813E0A56C
13C0A26C13806C1300EA007C90C7FCAAEB7FC0EA7FFFA512037EB3AFB6FCA518467CC520
>I<EB7FC0B5FCA512037EB293387FFFE0A593380FE0004C5A4CC7FC167E5EED03F8ED07
E04B5A4B5A037FC8FC15FEECC1FCECC3FE14C7ECDFFF91B57E82A202F97F02E17F02C07F
EC807F6F7E826F7E816F7F836F7F816F7F83707E163FB60003B512F8A535457DC43B>
107 D<EB7FC0B5FCA512037EB3B3B3A3B61280A519457CC420>I<90277F8007FEEC0FFC
B590263FFFC090387FFF8092B5D8F001B512E002816E4880913D87F01FFC0FE03FF8913D
8FC00FFE1F801FFC0003D99F009026FF3E007F6C019E6D013C130F02BC5D02F86D496D7E
A24A5D4A5DA34A5DB3A7B60081B60003B512FEA5572D7CAC5E>I<90397F8007FEB59038
3FFF8092B512E0028114F8913987F03FFC91388F801F000390399F000FFE6C139E14BC02
F86D7E5CA25CA35CB3A7B60083B512FEA5372D7CAC3E>I<EC1FFC49B512C0010714F001
1F14FC90397FF80FFF9026FFC0017F48496C7F4848C7EA3FE000078248486E7E49140F00
1F82A2003F82491407007F82A400FF1780AA007F1700A46C6C4A5AA2001F5E6D141F000F
5E6C6C4A5AA26C6C6CEBFFE06C6D485B27007FF80F90C7FC6DB55A010F14F8010114C090
26001FFCC8FC312F7DAD38>I<90397FC00FF8B590B57E02C314E002CF14F89139DFC03F
FC9139FF001FFE000301FCEB07FF6C496D13804A15C04A6D13E05C7013F0A2EF7FF8A4EF
3FFCACEF7FF8A318F017FFA24C13E06E15C06E5B6E4913806E4913006E495A9139DFC07F
FC02CFB512F002C314C002C091C7FCED1FF092C9FCADB67EA536407DAC3E>I<DA3FE013
1E902603FFFC133E010F01FF137E013F1480903AFFF80FE0FE489038E003F148EBC00148
90388000FB4890C7127F49143F001F151F485A160F5B127FA3485AAC6C7EA46C7EA26C6C
141F163F6C6C147F6C15FF6C6D5A6C9038E003EF6C9038F01FCF6DB5128F011FEBFE0F01
0313F89038007FC091C7FCAD0307B512FCA536407CAC3B>I<90387F807FB53881FFE002
8313F0028F13F8ED8FFC91389F1FFE000313BE6C13BC14F8A214F0ED0FFC9138E007F8ED
01E092C7FCA35CB3A5B612E0A5272D7DAC2E>I<90391FFC038090B51287000314FF120F
381FF003383FC00049133F48C7121F127E00FE140FA215077EA27F01E090C7FC13FE387F
FFF014FF6C14C015F06C14FC6C800003806C15806C7E010F14C0EB003F020313E0140000
F0143FA26C141F150FA27EA26C15C06C141FA26DEB3F8001E0EB7F009038F803FE90B55A
00FC5CD8F03F13E026E007FEC7FC232F7CAD2C>I<EB01E0A51303A41307A2130FA2131F
A2133F137F13FF1203000F90B51280B7FCA4C601E0C7FCB3A3ED01E0A9150302F013C013
7F150790393FF80F8090391FFC1F006DB5FC6D13FC01015B9038003FE023407EBE2C>I<
D97FC049B4FCB50103B5FCA50003EC000F6C81B3A85EA25EA25E7E6E491380017FD901F7
13FE9138F807E76DB512C7010F1407010313FE9026007FF0EBFC00372E7CAC3E>I<B690
3803FFFCA5000101E09038003E006C163C80017F5D8017F8013F5D6E1301011F5D6E1303
010F5D6E13076D5DED800F6D92C7FC15C05E6DEBE01E163E6D143CEDF07C027F1378EDF8
F8023F5B15FD021F5B15FF6E5BA36E5BA26E90C8FCA26E5AA26E5AA21578362C7EAB3B>
I<B5D8FE1FB539801FFFF0A500019027C0003FE0C7EA7C007114786E17F86C6F6C5C6E16
01017F6E6C5CA26E011F1403013F6F5C6E013F1407011F6F5CA26E0179140F010F048090
C7FC6E01F95C6D02F0EBC01E15806D902681E07F5B18E003C3157C6D9139C03FF07815E7
6DDA801F5B18F803FF14F96E9039000FFDE018FF6E486D5BA36E486D5BA26E486D90C8FC
A24B7F02075DA26E48147C4B143C4C2C7EAB51>I<B500FE90383FFFF0A5C601F0903803
E0006D6C495A013F4A5A6D6C49C7FC6E5B6D6C137E6DEB807C6D6D5A6DEBC1F0EDE3E06D
EBF7C06EB45A806E90C8FC5D6E7E6E7F6E7FA24A7F4A7F8291381F3FFCEC3E1F027C7F4A
6C7E49486C7F01036D7F49487E02C08049486C7F49C76C7E013E6E7E017E141FB500E090
B512FCA5362C7EAB3B>I<B6903803FFFCA5000101E09038003E006C163C80017F5D8017
F8013F5D6E1301011F5D6E1303010F5D6E13076D5DED800F6D92C7FC15C05E6DEBE01E16
3E6D143CEDF07C027F1378EDF8F8023F5B15FD021F5B15FF6E5BA36E5BA26E90C8FCA26E
5AA26E5AA21578A215F85D14015D001F1303D83F805B387FC007D8FFE05B140F92C9FC5C
143E495A387FC1F8EB07F06CB45A6C5B000790CAFCEA01FC36407EAB3B>I<001FB71280
A49026FC001F130001E0495A5B49495A90C7485A48495B123E4A5B4A5B003C495BA24A90
C7FC4A5A4A5AC7FC4A5A495B495BA2495B499038800780491300A2495A4948130F494814
00A2485B48495B485BA248495B4890C75A48485C15034848EB1FFEB7FCA4292C7DAB32>
I E /Fl 10 122 df<EB0FE0137F3801F000EA03C0485A48C7FC121E123E5AA2387FFF80
B5FC00F8C7FCA61278A37E6C13C0EA0F033807FF00EA01FC131A7C981C>15
D<90383FFFF8A2D901FCC7FC5CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133F
A291C8FCA249141C1618137E163801FE1430167049146016E000011401ED03C0491307ED
0F800003147FB7FC160026287DA72E>76 D<013FB512E016FC903901FC007F4AEB0F80EE
07C0010315E016035C17F01307EE07E05CA2010FEC0FC017804AEB1F00163E011F14F8ED
07F091B51280A290393F800FE0ED03F002007F15015BA2137EA201FE1303A2495CA20001
160817184914E017380003EDF070B5D8C00113E0923800FFC0C9EA3F002D297DA732>82
D<EB1F80EB7FC0EBF0E73803C03FEA078048487EA2121E003E133E123C127CA2485BA448
5B1530A3903801F060A2EA7803010E13C0393C1CF980381FF07F3907C01E001C1B7C9924
>97 D<EA01F0123FA2EA03E0A21207A25BA2120FA25BA2121F139FEB3FC0EBE0E0383FC0
F0EB0078A2123E007E137CA2127CA212FC14F85AA338F001F0A214E0130314C0EB078038
700F00EA781E6C5AEA1FF0EA07C016297CA71D>I<9038F007C03901FC1FF039031E7878
0006EBE03C90381FC01C000CEB801E14005B0018141F133E1200137E153E137CA213FC15
7C5B1578000114F0A2EC01E0EC03C03903FC07809038FE1F00EBE7FCEBE1F0D807E0C7FC
A25BA2120FA25B121FEAFFF8A22025809922>112 D<EB1F03EB7F873801E0CF3803C07F
EA0780380F003E5A121E003E137E003C137C127CA24813FC14F8A3EAF00114F0A3130314
E0EA7007EA780FEA3C3F381FF7C0EA07C7EA0007130F1480A3131F14005B3803FFF0A218
257C991E>I<EB0FE0EB7FF8EBF03C3801C00E0003131E3807803EA2143C000F1318EBE0
006CB4FC14C06C13E06C13F06C13F813071301EA3C00007E1378A24813F05A387001E0EB
03C0383C0F80381FFE00EA07F8171B7C991F>115 D<90387C03C03901FF0FF03907079C
30390E03B078000CEBF0F8001813E1123015F0396007C0E015001200A2495AA449C7FC15
301238007C1460EAFC3E15C0EAF87E39F06F03803970C70700383F83FE381F01F81D1B7D
9926>120 D<EA03E0486C1370D80C7813F8EA187C0030EB01F0A2126013F800C0EB03E0
A2EA01F0A2EC07C0EA03E0A33907C00F80A4EC1F00A25C00035B3801E0FE3800FFBEEB3F
3E13005C121E003F5B5C387E01E0383C03C038300780D81C1FC7FCEA0FFCEA07F01D267D
9922>I E /Fm 36 122 df<14FF010713E090381F80F090383E003849137C4913FC485A
1203491378153092C7FCA7157CB612FCA23803E000157CB3A5486C13FE3A7FFF0FFFE0A2
232F7FAE27>12 D<91397F800FF0903A03FFE07FFE903A1FC079F80F903B3E001FE00380
4990393FC007C04990387F800F48481400A24848017EEB0780033EEB030094C7FCA7EF07
C0B9FCA23B03E0003E000F1707B3A5486C017FEB0FE03C7FFF07FFF0FFFEA2372F7FAE3B
>14 D<123C127EB4FCA21380A2127F123D1201A312031300A25A1206120E5A5A5A126009
157A8714>44 D<123C127E12FFA4127E123C08087A8714>46 D<EB7F803801FFF0380780
FC380E003F48EB1F8048EB0FC05A0060EB07E012F000FC14F07E1403A3007C1307C7FCA2
15E0140F15C0141F1580EC3F00147E147C5C495A495A495A495A011EC7FC5B5B4913305B
485A4848136048C7FC000E14E0001FB5FC5A4814C0B6FCA21C2C7DAB23>50
D<123C127E12FFA4127E123C1200AD123C127E12FE12FFA3127F123F1203A312071206A2
120E120C121C1218123812701260082A7A9C14>59 D<B612FCEDFF803A03F8000FC00001
EC03F06F7E6F7E82167E167FA6167E16FE5E4B5A4B5AED0FE0ED7F8090B6C7FC16E09039
F80003F0ED01FC6F7E167F821780161F17C0A61780163F17005E16FEED03FC0003EC0FF0
B712C04BC7FC2A2D7DAC32>66 D<007FB712F8A29039000FC003007C150000701638A200
601618A200E0161CA248160CA5C71500B3A94A7E011FB512E0A22E2D7EAC33>84
D<B53C801FFFF001FFF8A22707FC000190C7EA3FC0D803F06D48EC1F00047E140EA26C6C
027F140CA26D171C0000DBDF801318A26D1738017E9026018FC01330A2017F17706D9026
0307E01360A2028016E0011F90260603F05BA202C01501010F90260C01F85BA202E01503
010790261800FC90C7FCA202F05D010349EB7E06A202F8150E010149EB3F0CA202FC151C
010049EB1F98A202FE15B8DA7F80EB0FF0A2023F5D92C71207A26E5D021E1403A2020E5D
020C1401452E7FAC48>87 D<EAFFE0A3EAE000B3B3B3A7EAFFE0A30B4379B114>91
D<EAFFE0A31200B3B3B3A712FFA30B437FB114>93 D<13FF000713C0380F01F0381C00F8
003F137C80A2143F001E7FC7FCA4EB07FF137F3801FE1FEA07F0EA1FC0EA3F80EA7F0012
7E00FE14065AA3143F7E007E137F007FEBEF8C391F83C7FC390FFF03F83901FC01E01F20
7D9E23>97 D<EA07C012FFA2120F1207AC14FE9038C7FF809038CF03E09038DC01F09038
F8007C49137E49133E497F1680A2150F16C0A9ED1F80A216005D6D133E6D5B01B05B9038
BC01F090380E07E0390607FF80260001FCC7FC222F7EAD27>I<EB1FE0EB7FFC3801F01E
3803E0073907C01F80EA0F80EA1F005A003EEB0F00007E90C7FCA2127C12FCA9127EA215
C07E6C130101801380380FC0033907E007003801F03E38007FF8EB1FC01A207E9E1F>I<
15F8141FA214011400ACEB0FE0EB7FF83801F81E3803E0073807C003380F8001EA1F0048
1300123E127EA25AA9127C127EA2003E13017EEB8003000F13073903E00EFC3A01F03CFF
C038007FF090391FC0F800222F7EAD27>I<EB1F80EBFFF03803E0783807C03E380F801E
381F001FEC0F80123E007E130715C0127C12FCA3B6FCA200FCC8FCA5127EA2003E14C012
3F6C1301390F80038001C013003803E00F3801F03C38007FF8EB1FC01A207E9E1F>I<EB
03F0EB0FFCEB3E1EEB7C3F13F8EA01F0A23803E00C1400AAB512E0A23803E000B3A6487E
387FFF80A2182F7FAE16>I<013F13F89038FFC3FE3903E1FF1E3807807C000F140C391F
003E00A2003E7FA76C133EA26C6C5A00071378380FE1F0380CFFC0D81C3FC7FC90C8FCA3
121E121F380FFFF814FF6C14C04814F0391E0007F848130048147C12F848143CA46C147C
007C14F86CEB01F06CEB03E03907E01F803901FFFE0038003FF01F2D7E9D23>I<EA07C0
12FFA2120F1207AC14FE9038C3FF809038C703E09038DE01F013F8496C7EA25BA25BB248
6C487E3AFFFE1FFFC0A2222E7EAD27>I<EA0780EA0FC0EA1FE0A4EA0FC0EA0780C7FCA8
EA07C012FFA2120F1207B3A5EA0FE0EAFFFCA20E2E7EAD14>I<130FEB1F80EB3FC0A4EB
1F80EB0F0090C7FCA8EB07C013FFA2130F1307B3AD1230127838FC0F80A21400485AEA78
3EEA3FF8EA07E0123C83AD16>I<EA07C012FFA2120F1207ADEC1FFEA2EC0FF0EC07C05D
020EC7FC5C5C5C5CEBC3C013C7EBCFE0EBDFF013F9EBF0F8497EEBC07E143E80816E7E14
076E7E816E7E486C487E3AFFFE07FF80A2212E7EAD25>I<EA07C012FFA2120F1207B3B3
A3EA0FE0EAFFFEA20F2E7EAD14>I<2607C07FEB07F03BFFC3FFC03FFC903AC783F0783F
3C0FCE01F8E01F803B07DC00F9C00F01F8D9FF8013C04990387F000749137EA249137CB2
486C01FEEB0FE03CFFFE0FFFE0FFFEA2371E7E9D3C>I<3807C0FE39FFC3FF809038C703
E0390FDE01F0EA07F8496C7EA25BA25BB2486C487E3AFFFE1FFFC0A2221E7E9D27>I<EB
1FE0EB7FF83801F03E3803C00F3907800780390F0003C04814E0003EEB01F0A248EB00F8
A300FC14FCA9007C14F8A26CEB01F0A26CEB03E0A2390F8007C03907C00F803901F03E00
38007FF8EB1FE01E207E9E23>I<3807C0FE39FFC7FF809038CF03E0390FDC01F03907F8
00FC49137E49133E49133FED1F80A3ED0FC0A8151F1680A2ED3F00A26D137E6D137C5D90
38FC01F09038CE07E09038C7FF80D9C1FCC7FC01C0C8FCA9487EEAFFFEA2222B7E9D27>
I<90380FE01890387FF8383801F81C3903E00E783807C007390F8003F8001F1301EA3F00
A2007E1300A212FE5AA8127EA36C13017EEB8003380FC0073803E00E3801F03C38007FF0
EB1FC090C7FCA94A7E91381FFFC0A2222B7E9D25>I<380781F838FF87FEEB8E3FEA0F9C
EA07B813B0EBF01EEBE000A45BB0487EB5FCA2181E7E9D1C>I<3801FE183807FFB8381E
01F8EA3C00481378481338A21418A27E7EB41300EA7FF06CB4FC6C13C06C13F0000113F8
38001FFC130138C0007E143EA26C131EA27EA26C133CA26C137838FF01F038E3FFC000C0
130017207E9E1C>I<1360A413E0A312011203A21207121FB512F0A23803E000AF1418A7
14383801F03014703800F860EB3FE0EB0F80152A7FA81B>I<D807C013F800FF131FA200
0F130100071300B21401A314033803E007EC0EFC3A01F81CFFC038007FF890391FE0F800
221F7E9D27>I<3AFFFC01FFC0A23A0FE0007E000007147C15380003143015706C6C1360
A26C6C5BA390387C0180A26D48C7FCA2EB3F07EB1F06A2EB0F8CA214DCEB07D8A2EB03F0
A36D5AA26D5A221E7F9C25>I<3BFFFC3FFE07FFA23B0FE003F001F801C09038E000F000
07010114E0812603E00314C0A2913807F8012701F006781380A29039F80E7C030000D90C
3C1300A290397C181E06A2151F6D486C5AA2168C90391F600798A216D890390FC003F0A3
6D486C5AA36DC75A301E7F9C33>I<3AFFFC07FF80A23A0FF003FC000003EB01F0000114
C06D485A000091C7FCEB7C06EB3E0E6D5A14B8EB0FB0EB07E013036D7E497E1307EB067C
497EEB1C1F01387FEB700F496C7E6E7ED803C07F00076D7E391FE003FC3AFFF007FFC0A2
221D7F9C25>I<3AFFFC01FFC0A23A0FE0007E000007147C1538000314306D1370000114
60A26C6C5BA2EBFC01017C5BEB7E03013E90C7FCA2EB1F06A2148EEB0F8CA2EB07D8A2EB
03F0A36D5AA26D5AA2495AA2130391C8FC1278EAFC06A25B131CEA7838EA7070EA3FE0EA
0F80222B7F9C25>I E /Fn 3 52 df<13E01201120712FF12F91201B3A7487EB512C0A2
12217AA01E>49 D<EA01FC3807FF80381C0FC0383003E0386001F0EB00F812F86C13FCA2
147C1278003013FCC7FC14F8A2EB01F0EB03E014C0EB0780EB0F00131E13385B5B3801C0
0CEA0380380600185A5A383FFFF85AB512F0A216217CA01E>I<13FF000313C0380F03E0
381C00F014F8003E13FC147CA2001E13FC120CC712F8A2EB01F0EB03E0EB0FC03801FF00
A2380003E0EB00F01478147C143E143F1230127812FCA2143E48137E0060137C003813F8
381E03F0380FFFC00001130018227DA01E>I E /Fo 7 52 df<1306130C131813301360
13E0EA01C0EA0380A2EA07005A120E121EA2121C123CA35AA512F85AAB7E1278A57EA312
1C121EA2120E120F7EEA0380A2EA01C0EA00E0136013301318130C13060F3B7AAB1A>40
D<12C012607E7E7E120E7EEA0380A2EA01C013E0120013F0A213701378A3133CA5133E13
1EAB133E133CA51378A3137013F0A213E0120113C0EA0380A2EA0700120E120C5A5A5A5A
0F3B7DAB1A>I<140EB3A2B812E0A3C7000EC8FCB3A22B2B7DA333>43
D<EB3F803801FFF03803E0F83807803C48487E001E7F003E1480A2003C1307007C14C0A4
00FC14E0AE007C14C0A36CEB0F80A36CEB1F006C131E6C6C5A3803E0F86CB45A38003F80
1B277EA521>48 D<13381378EA01F8121F12FE12E01200B3AB487EB512F8A215267BA521
>I<13FF000313E0380E03F0381800F848137C48137E00787F12FC6CEB1F80A4127CC7FC
15005C143E147E147C5C495A495A5C495A010EC7FC5B5B903870018013E0EA0180390300
030012065A001FB5FC5A485BB5FCA219267DA521>I<13FF000313E0380F01F8381C007C
0030137E003C133E007E133FA4123CC7123E147E147C5C495AEB07E03801FF8091C7FC38
0001E06D7E147C80143F801580A21238127C12FEA21500485B0078133E00705B6C5B381F
01F03807FFC0C690C7FC19277DA521>I E /Fp 43 123 df<EE3FFC4BB51280923907E0
07C092391F8001E0DB3F0013F0037E13034B1307A24A5A18E04A48EB038094C7FCA31407
5DA4140F5DA3010FB7FCA25F903A001F80007EA217FE023F5C92C7FCA216015F5C147E16
035FA214FE4A13075FA30101140F5F4AECC1C0A2161F1783010316805CA2EF870013074A
5CEE0F8EEE079EEE03FC010FEC00F04A91C7FCA35C131FA2001C90CAFC127E5BEAFE3E13
3C137CEAF878EA78F0EA3FE0EA0F80344C82BA2F>12 D<EE7FE0923903FFFC7E92380FC0
3E92381F000F033EEB3FFE4B137F03FC14FC5D1401173D4A48EB01F8A21703A24A4814F0
A21707A2020F15E05D170FA218C0010FB7FCA3903B001F80001F80A2173F143F92C71300
A25FA24A147E147E17FEA25F14FE4A1301A25FA2010114035CEFF070A21607010316F04A
ECE0E0A3EFE1C013074A14C3933803E380EE01E7933800FF004948143C94C7FCA3495AA3
001C90CAFC127E133E12FE133C137CEAF878EA78F0EA3FE0EA0F80374C82BA31>I<DC7F
C0EB1FFF922603FFF890B512E0923C0FC07C03F801F0923C1F001E0FC00078033E90267E
1F80137C4BD9FE3FC712FC03FC027E13015D02014A5A057815F84A48D901F8EB00E01B00
A302074A5A5DA31707020F5D5DA3010FBA12C0A21B80903D001F80000FC0001FA21A3F02
3F021F150092C75BA2621A7E4A143F027E92C7FC1AFE62A25F02FE027E13014A5FA305FE
130301014B5C4A1870A219070401EDE0F001034B15E05CA2F2E1C0010714034D14C34A93
3803E380F101E7963800FF00010F4A48143C4A94C7FCA34A495A131F5F001CEB0380007E
90380FC01F013F92CAFC26FE3E1F133E013C5C5E3AF8780F01F0D878F0EB83E03A3FE003
FF80270F8000FECBFC4E4C82BA49>I<150C151C153815F0EC01E0EC03C0EC0780EC0F00
141E5C147C5C5C495A1303495A5C130F49C7FCA2133EA25BA25BA2485AA212035B12075B
A2120F5BA2121FA290C8FCA25AA2123EA2127EA2127CA412FC5AAD1278A57EA3121C121E
A2120E7EA26C7E6C7EA212001E5274BD22>40 D<140C140E80EC0380A2EC01C015E0A214
0015F0A21578A4157C153CAB157CA715FCA215F8A21401A215F0A21403A215E0A21407A2
15C0140F1580A2141F1500A2143EA25CA25CA2495AA2495A5C1307495A91C7FC5B133E13
3C5B5B485A12035B48C8FC120E5A12785A12C01E527FBD22>I<EA03C0EA07F0120F121F
13F8A313F0EA07B0EA003013701360A213E013C01201EA038013005A120E5A5A5A5A5A0D
197A8819>44 D<387FFFF8A2B5FCA214F0150579941E>I<120EEA3F80127F12FFA31300
127E123C0909778819>I<EE01C01603A21607160FA2161F83163FA2167F16FF16EF1501
16CFED038FA2ED070FA2150E151E151C1538A203707FA2EDE007A2EC01C014031580EC07
00A2140EA25CA25C027FB5FCA291B6FC9139E00007F849481303A2495A130791C7FC5B13
0E5BA25B1378137013F0EA03F8486C4A7EB56C48B512F0A3343C7BBB3E>65
D<DB03FE130E92393FFF801E92B5EAE03C913903FE01F0913A0FF000787CDA3FC0EB3CFC
4AC7EA1FF802FE140FEB03FC49481407494815F049481403495A5C49C813E05B485A5B00
0317C0485AA2485A1880485A94C7FCA2485AA3127F5BA312FF90CBFCA41738A217784816
707E17F06C5E16015F16036C6C4A5A94C7FC001F150E6D141E000F5D6D5C6C6C495A6C6C
EB03C0D801FEEB0F8027007F807EC8FC6DB45A010F13E0010090C9FC373D74BA3B>67
D<0103B612FEEFFFC018F0903B0007F8000FF84BEB03FCEF00FE020F157FF03F804B141F
19C0021F150F19E05D1807143F19F05DA2147FA292C8FCA25C180F5CA2130119E04A151F
A2130319C04A153FA201071780187F4A1600A2010F16FEA24A4A5A60011F15034D5A4A5D
4D5A013F4B5A173F4A4AC7FC17FC017FEC03F84C5A91C7EA1FC04949B45A007F90B548C8
FCB712F016803C397CB83F>I<0103B512F8A390390007F8005DA2140FA25DA2141FA25D
A2143FA25DA2147FA292C7FCA25CA25CA21301A25CA21303A25CA21307A25CA2130FA25C
A2131FA25CA2133FA25CA2137FA291C8FC497EB6FCA25C25397CB820>73
D<0103B500F890387FFFE0A21AC090260007F8C7380FFC004B15E061020F4BC7FC183E4B
5C18F0021F4A5A4D5A4BEB0F804DC8FC023F143C5F4B5B4C5A027FEB07C04CC9FCED001E
5E4A5BED01FCECFE0315070101497E151FECFC7C4B7E903903FDE07FDAFFC07F1580ED00
3F49488014F84A131F83130F160F4A801607011F81A24A130383133F16014A80A2017F6E
7EA291C8FC494A7F007F01FE011F13FCB55CA243397CB840>75 D<0107B512FCA25E9026
000FF8C7FC5D5D141FA25DA2143FA25DA2147FA292C8FCA25CA25CA21301A25CA21303A2
5CA21307A25CA2130F170C4A141CA2011F153C17384A1478A2013F157017F04A14E01601
017F140317C091C71207160F49EC1F80163F4914FF000102071300B8FCA25E2E397BB834
>I<902607FFF8923807FFF0614F13E0D9000FEFF0004F5AA2021F167FF1EFC0141DDA1C
FCEC01CF023C16DF9538039F800238ED071FA20278ED0E3F97C7FC0270151CA202F04B5A
F0707E14E0037E14E0010117FE4D485A02C0EC0380A20103ED0701610280140EA20107ED
1C0305385B14006F137049160705E05B010EEC01C0A2011E913803800F61011CEC0700A2
013C020E131F4C5C1338ED1FB80178163F04F091C8FC01705CA201F04A5B187E00015DD8
07F816FEB500C09039007FFFFC151E150E4C397AB84A>I<0107B612F817FF1880903B00
0FF0003FE04BEB0FF0EF03F8141FEF01FC5DA2023F15FEA25DA2147FEF03FC92C7FCA24A
15F817074A15F0EF0FE01301EF1FC04AEC3F80EFFE0001034A5AEE0FF091B612C04CC7FC
D907F8C9FCA25CA2130FA25CA2131FA25CA2133FA25CA2137FA291CAFCA25BA25B1201B5
12FCA337397BB838>80 D<92383FC00E913901FFF01C020713FC91391FC07E3C91393F00
1F7C027CEB0FF84A130749481303495A4948EB01F0A2495AA2011F15E091C7FCA34915C0
A36E90C7FCA2806D7E14FCECFF806D13F015FE6D6D7E6D14E0010080023F7F1407913800
7FFC150F15031501A21500A2167C120EA3001E15FC5EA3003E4A5AA24B5AA2007F4A5A4B
5A6D49C7FC6D133ED8F9F013FC39F8FC03F839F07FFFE0D8E01F138026C003FCC8FC2F3D
7ABA2F>83 D<0007B812E0A25AD9F800EB001F01C049EB07C0485AD900011403121E001C
5C003C17801403123800785C00701607140700F01700485CA2140FC792C7FC5DA2141FA2
5DA2143FA25DA2147FA292C9FCA25CA25CA21301A25CA21303A25CA21307A25CA2130FA2
5CEB3FF0007FB512F8B6FCA2333971B83B>I<14F8EB07FE90381F871C90383E03FE137C
EBF801120148486C5A485A120FEBC001001F5CA2EA3F801403007F5C1300A21407485C5A
A2140F5D48ECC1C0A2141F15831680143F1587007C017F1300ECFF076C485B9038038F8E
391F0F079E3907FE03FC3901F000F0222677A42A>97 D<133FEA1FFFA3C67E137EA313FE
5BA312015BA312035BA31207EBE0F8EBE7FE9038EF0F80390FFC07C013F89038F003E013
E0D81FC013F0A21380A2123F1300A214075A127EA2140F12FE4814E0A2141F15C05AEC3F
80A215005C147E5C387801F8007C5B383C03E0383E07C0381E1F80D80FFEC7FCEA01F01C
3B77B926>I<147F903803FFC090380FC1E090381F0070017E13784913383901F801F838
03F003120713E0120FD81FC013F091C7FC485AA2127F90C8FCA35A5AA45AA31530153815
78007C14F0007EEB01E0003EEB03C0EC0F806CEB3E00380F81F83803FFE0C690C7FC1D26
77A426>I<ED01F815FFA3150316F0A21507A216E0A2150FA216C0A2151FA21680A2153F
A202F81300EB07FE90381F877F90383E03FF017C5BEBF80112013803F00048485B120FEB
C001121F5DEA3F801403127F01005BA214075A485CA2140FA248ECC1C0A2141F15C3ED83
80143F1587007C017F1300ECFF076C485B9038038F8E391F0F079E3907FE03FC3901F000
F0253B77B92A>I<147F903803FFC090380FC1E090383F00F0017E13785B485A485A485A
120F4913F8001F14F0383F8001EC07E0EC1F80397F81FF00EBFFF891C7FC90C8FC5A5AA5
5AA21530007C14381578007E14F0003EEB01E0EC03C06CEB0F806CEB3E00380781F83803
FFE0C690C7FC1D2677A426>I<ED07C0ED1FF0ED3E38ED7C3CEDF8FC15F9140115F10203
13F8EDF0F0160014075DA4140F5DA4141F5D010FB512C05B16809039003F800092C7FCA4
5C147EA414FE5CA413015CA413035CA413075CA4130F5CA3131F5CA391C8FC5B121CEA7E
3EA2EAFE3C137C1378EAF8F01278EA3FC0EA0F80264C82BA19>I<EC07C0EC3FF09138FC
38E0903901F01FF0EB03E0903807C00FEB0F80011F1307D93F0013E05B017E130F13FE49
14C01201151F1203491480A2153F1207491400A25DA249137EA215FEA25D000313011403
14076C6C485A0000131FEB787BEB3FF390380FC3F0EB00031407A25DA2140F5D121C007E
131F5D00FE49C7FC147E5C387801F8387C07E0381FFF80D803FEC8FC24367CA426>I<EB
03F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91C8FCA35B90387E07F0EC1FFCEC78
3E9038FFE01F02C01380EC800F1400485A16C05B49EB1F8012035BA2153F000715005BA2
5D000F147E5B15FE5D121FD98001131C15F8163C003F01031338010013F0A216704814E0
007E15F016E0EDE1C000FE903801E38048903800FF000038143C263B7BB92A>I<EB01C0
EB07E014F0130F14E01307EB038090C7FCAB13F0EA03FCEA071EEA0E1F121CA212385B12
70A25BEAF07E12E013FEC65AA212015B1203A25B12075BA2000F13E013C013C1001F13C0
1381A2EB83801303EB0700A2130E6C5AEA07F8EA01E0143879B619>I<EB03F0EA01FFA3
EA00075CA3130F5CA3131F5CA3133F91C8FCA35B017EEB0F80ED3FE015F09039FE01C1F0
9038FC0387EC0707140E0001011C13E0EBF83891383003800270C7FC00035BEBF1C0EBF3
8001FFC8FCEA07FC7FEBFFC0EBE7F8380FE1FCEBC07E147F80001F809039801F81C0A215
83003F013F138001001303A21507481500007E133EEC1E0E151E00FE6D5A48EB07F80038
EB01E0243B7BB926>107 D<EB0FC0EA07FFA3EA001F1480A2133FA21400A25BA2137EA2
13FEA25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FC
A25AA2EA7E0EA212FE131EEAFC1CA2133C133812F81378EA7870EA7CE0121FEA0F80123B
79B915>I<D801E001FEEB07F03C07F803FF801FFC3C0E3C0F07C0783E3C1E3E3C03E1E0
1F261C1F78D9F3C013803C383FF001F7800F02E01400007801C013FE007018C002805B4A
4848EB1F80EAF07FD8E07E5CA200000207143F01FE1700495CA2030F5C0001177E495C18
FE031F5C120349DA8001131C18F8033F153C00070403133849020013F0A24B1570000F17
E049017E15F019E003FEECE1C0001FEE01E34949903800FF000007C70038143C3E2679A4
44>I<D801E013FE3A07F803FF803A0E3C0F07C03A1E3E3C03E0261C1F787F39383FF001
14E0007813C000708114804A485AEAF07FEAE07EA20000140701FE5C5BA2150F00015D5B
151F5E12034990383F8380160316070007027F130049137EA2160E000F147C49141E161C
5E001FEC3C7849EB1FE00007C7EA0780292679A42F>I<147F903803FFC090380FC1F090
381F00F8017E137C5B4848137E4848133E0007143F5B120F485AA2485A157F127F90C7FC
A215FF5A4814FEA2140115FC5AEC03F8A2EC07F015E0140F007C14C0007EEB1F80003EEB
3F00147E6C13F8380F83F03803FFC0C648C7FC202677A42A>I<9039078007C090391FE0
3FF090393CF0787C903938F8E03E9038787FC00170497EECFF00D9F0FE148013E05CEA01
E113C15CA2D80003143FA25CA20107147FA24A1400A2010F5C5E5C4B5A131F5EEC80035E
013F495A6E485A5E6E48C7FC017F133EEC70FC90387E3FF0EC0F8001FEC9FCA25BA21201
A25BA21203A25B1207B512C0A3293580A42A>I<ECF803903807FE0790381F871F90383E
03BF017C13FEEBF80112013803F000484813FC120F5B001F130115F8EA3F80A2007F1303
010013F0A34813074814E0A3140F4814C0A3141F1580143FA2007C137FECFF006C5AEB03
BF381F0F7F3807FE7EEA01F0C7FC14FE5CA313015CA313035C130748B512C0A3203577A4
26>I<3903C003F0390FF01FFC391E783C0F381C7C703A3C3EE03F8038383FC0EB7F8000
78150000701300151CD8F07E90C7FCEAE0FE5BA2120012015BA312035BA312075BA3120F
5BA3121F5BA3123F90C9FC120E212679A423>I<14FE903807FF8090380F83C090383E00
E04913F00178137001F813F00001130313F0A215E00003EB01C06DC7FC7FEBFFC06C13F8
14FE6C7F6D13807F010F13C01300143F141F140F123E127E00FE1480A348EB1F0012E06C
133E00705B6C5B381E03E06CB45AD801FEC7FC1C267AA422>I<EB0380EB07C0130FA413
1F1480A3133F1400A35B137E007FB5FCA2B6FC3800FC00A312015BA312035BA312075BA3
120F5BA3121FEB801CA2143C003F1338EB0078147014F014E0EB01C0EA3E03381F078038
0F0F00EA07FCEA01F0183579B31C>I<13F8D803FEEB01C0D8078FEB03E0390E0F800712
1E121C0038140F131F007815C01270013F131F00F0130000E015805BD8007E133FA201FE
14005B5D120149137EA215FE120349EBFC0EA20201131E161C15F813E0163CD9F0031338
14070001ECF07091381EF8F03A00F83C78E090393FF03FC090390FC00F00272679A42D>
I<01F0130ED803FC133FD8071EEB7F80EA0E1F121C123C0038143F49131F0070140FA25B
D8F07E140000E08013FEC6485B150E12015B151E0003141C5BA2153C000714385B5DA35D
A24A5A140300035C6D48C7FC0001130E3800F83CEB7FF8EB0FC0212679A426>I<01F015
07D803FC903903801F80D8071E903907C03FC0D80E1F130F121C123C0038021F131F49EC
800F00701607A249133FD8F07E168000E0ED000313FEC64849130718000001147E5B03FE
5B0003160E495BA2171E00070101141C01E05B173C1738A217781770020314F05F000301
0713016D486C485A000190391E7C07802800FC3C3E0FC7FC90393FF81FFE90390FE003F0
322679A437>I<903907E007C090391FF81FF89039787C383C9038F03E703A01E01EE0FE
3803C01F018013C0D8070014FC481480000E1570023F1300001E91C7FC121CA2C75AA214
7EA214FEA25CA21301A24A1370A2010314F016E0001C5B007E1401010714C000FEEC0380
010F1307010EEB0F0039781CF81E9038387C3C393FF03FF03907C00FC027267CA427>I<
13F0D803FCEB01C0D8071EEB03E0D80E1F1307121C123C0038140F4914C01270A249131F
D8F07E148012E013FEC648133F160012015B5D0003147E5BA215FE00075C5BA214015DA3
14035D14070003130FEBF01F3901F87FE038007FF7EB1FC7EB000F5DA2141F003F5C4813
3F92C7FC147E147C007E13FC387001F8EB03E06C485A383C1F80D80FFEC8FCEA03F02336
79A428>I<903903C0038090380FF007D91FF81300496C5A017F130E9038FFFE1E9038F8
3FFC3901F007F849C65A495B1401C7485A4A5A4AC7FC141E5C5C5C495A495A495A49C8FC
131E5B49131C5B4848133C48481338491378000714F8390FF801F0391FFF07E0383E1FFF
D83C0F5B00785CD8700790C7FC38F003FC38E000F021267BA422>I
E /Fq 35 122 df<ED01FC923807FF8092381E07C092387801E003E013F0913901C000F8
4A5A4AC7FC020E14FC5C5C143002701301026014F814E05C010114034A14F0130391C7EA
07E017C049140F0106EC1F809238FFBF00D90E0113FC90390C0381F8EDFFFE0200131F01
1C010013800118140F17C0A213380130EC07E0A2160F13701360A301E0141F4915C0A300
01153F1780A2EE7F00120316FE5E6D495AD80760495AD80670495A6D495A6D495AD80E0E
49C7FC390C0780FC903801FFF09038007F80001C90C9FC1218A312381230A312701260A3
12E05AA22E4B7EBA2F>12 D<1403EC3FF891387FFF80D901E313C014800103133F913800
1F80ED070092C7FC80A280A2808013018080130080147F81143F8149B47E130790380F8F
F0EB3E0F496C7E13F83801F003D803E07F1207380FC0011380121FEA3F0014005A127EA2
12FE5D481301A35DA24813035D6C13075D127C4A5A6C91C7FC5C6C133E6C6C5A3807C0F0
3801FFE0D8003FC8FC223D7DBB25>14 D<EC3FF0EB01FF010F13E090383FC00049C7FC13
FCEA03F8485A5B120F485AA2485AA2387FFFFE80A290C8FC5A5AA5127EA4123E123F7E6C
6C13606D13E03903E003C03901F01F0038007FFCEB0FE01C257DA322>I<EA01FCD807FF
1506260E1FC0140E000C6D141CD81C0F1538261807F01470000016E06D6CEB01C0EE0380
6E140001015C160E6D6C5B5E5E027F5B4B5A4B5ADA3F83C7FC1587158EEC1F9C15F85D5D
6E5A81A214074A7E141F143F1473ECE3F8EB01C3148390380381FCEB0701130E496C7E5B
5B49137F485A49800003143F48C7FC000E6E7E4816304891380FE07048EDF06048020713
E048913801FFC0C9EA7F002F367EA434>31 D<121C127FEAFF80A5EA7F00121C09097988
17>58 D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E
5A5A5A12600A19798817>I<EF0380EF0FC0173FEFFF80933803FE00EE0FF8EE3FE0EEFF
80DB03FEC7FCED0FF8ED3FE0EDFF80DA03FEC8FCEC0FF8EC3FE0ECFF80D903FEC9FCEB0F
F8EB3FE0EBFF80D803FECAFCEA0FF8EA3FE0EA7F8000FECBFCA2EA7F80EA3FE0EA0FF8EA
03FEC66C7EEB3FE0EB0FF8EB03FE903800FF80EC3FE0EC0FF8EC03FE913800FF80ED3FE0
ED0FF8ED03FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3FC0170FEF0380323279
AD41>I<150C151E153EA2153C157CA2157815F8A215F01401A215E01403A215C01407A2
1580140FA215005CA2141E143EA2143C147CA2147814F8A25C1301A25C1303A2495AA25C
130FA291C7FC5BA2131E133EA2133C137CA2137813F8A25B1201A25B1203A25B1207A25B
120FA290C8FC5AA2121E123EA2123C127CA2127812F8A25A12601F537BBD2A>I<126012
FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0
EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238007FC0EE1FF0EE07FCEE01FF9338
007F80EF1FC0A2EF7F80933801FF00EE07FCEE1FF0EE7FC04B48C7FCED07FCED1FF0ED7F
C04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0EB7FC04848CAFCEA07FCEA3F
F0EA7FC048CBFC12FC1270323279AD41>I<1760177017F01601A21603A21607160FA24C
7EA216331673166316C3A2ED0183A2ED0303150683150C160115181530A21560A215C014
011580DA03007FA202061300140E140C5C021FB5FC5CA20260C7FC5C83495A8349C8FC13
06A25BA25B13385B01F01680487E000716FFB56C013F13FF5EA2383C7DBB3E>65
D<0103B77E4916F018FC903B0007F80003FE4BEB00FFF07F80020FED3FC0181F4B15E0A2
141FA25DA2143F19C04B143F1980027F157F190092C812FE4D5A4A4A5AEF0FF04AEC1FC0
05FFC7FC49B612FC5F02FCC7B4FCEF3FC00103ED0FE0717E5C717E1307844A1401A2130F
17035CA2131F4D5A5C4D5A133F4D5A4A4A5A4D5A017F4BC7FC4C5A91C7EA07FC49EC3FF0
B812C094C8FC16F83B397DB83F>I<9339FF8001C0030F13E0037F9038F80380913A01FF
807E07913A07F8000F0FDA1FE0EB079FDA3F80903803BF0002FFC76CB4FCD901FC80495A
4948157E495A495A4948153E017F163C49C9FC5B1201484816385B1207485A1830121F49
93C7FCA2485AA3127F5BA312FF90CCFCA41703A25F1706A26C160E170C171C5F6C7E5F00
1F5E6D4A5A6C6C4A5A16076C6C020EC8FC6C6C143C6C6C5C6CB4495A90393FE00FC0010F
B5C9FC010313FC9038007FC03A3D7CBA3B>I<0103B6FC5B5E90260007FCC8FC5D5D140F
A25DA2141FA25DA2143FA25DA2147FA292C9FCA25CA25CA21301A25CA21303A25CA21307
18404A15C0A2010F150118804A1403A2011F16005F4A1406170E013F151E171C4A143C17
7C017F5D160391C7120F49EC7FF0B8FCA25F32397DB839>76 D<4BB4FC031F13F09238FE
01FC913903F0007EDA07C0EB1F80DA1F80EB0FC0023EC7EA07E002FCEC03F0495A4948EC
01F8495A4948EC00FC495A49C912FE49167E13FE49167F1201485AA2485AA2120F5B001F
17FFA2485AA34848ED01FEA400FFEE03FC90C9FCA2EF07F8A2EF0FF0A218E0171F18C0EF
3F806C167F180017FE4C5A6C6C5D1603001F4B5A6D4A5A000FED1F806C6C4AC7FC6D147E
0003EC01F8D801FC495AD8007EEB0FC090263F807FC8FC903807FFF801001380383D7CBA
3F>79 D<92391FE00380DBFFFC130002036D5A91390FE01F8F91393F0007DF027EEB01FE
02F81300495A4948147E177C4948143C495AA2011F153891C8FCA3491530A28094C7FC80
806D7E14FEECFFE06D13FE6DEBFFC06D14F06D806D80021F7F02037FEC003F03037F1500
167F163F161FA3120C160FA2001C151F94C7FCA3003C153EA25E003E5D127E007F4A5A6D
495A6DEB0FC0D8F9F0495AD8F0FE01FEC8FC39E03FFFF8010F13E0D8C00190C9FC313D7C
BA33>83 D<147E903803FF8090390FC1C38090391F00EFC0017E137F49133F485A4848EB
1F8012075B000F143F48481400A2485A5D007F147E90C7FCA215FE485C5AA214015D4815
0CA21403EDF01C16181407007C1538007E010F1330003E131F027B13706C01E113E03A0F
83C0F9C03A03FF007F80D800FCEB1F0026267DA42C>97 D<133FEA1FFFA3C67E137EA313
FE5BA312015BA312035BA31207EBE0FCEBE3FF9038E707C0390FFE03E09038F801F001F0
13F8EBE000485A15FC5BA2123F90C7FCA214015A127EA2140312FE4814F8A2140715F05A
EC0FE0A215C0EC1F80143F00781400007C137E5C383C01F86C485A380F07C06CB4C7FCEA
01FC1E3B7CB924>I<EC3FC0903801FFF0903807E03C90380F800E90383F0007017E131F
49137F484813FF485A485A120F4913FE001F143848481300A2127F90C8FCA35A5AA45AA3
15031507007E1406150E003E143C003F14706C14E0390F8007C03907C03F003801FFF838
003FC020267DA424>I<163FED1FFFA3ED007F167EA216FEA216FCA21501A216F8A21503
A216F0A21507A2027E13E0903803FF8790380FC1CF90381F00EF017EEB7FC049133F485A
4848131F000715805B000F143F485A1600485A5D127F90C7127EA215FE5A485CA21401A2
48ECF80CA21403161CEDF0181407007C1538007E010F1330003E131F027B13706C01E113
E03A0F83C0F9C03A03FF007F80D800FCEB1F00283B7DB92B>I<EC3FC0903801FFF09038
07E07890381F801C90387E001E49130E485A485A1207485A49131E001F141C153C484813
F8EC03E0007FEB3FC09038FFFE0014E090C8FC5A5AA7007E140315071506003E140E153C
6C14706C6C13E0EC07C03903E03F003801FFF838003FC020267DA427>I<14E0EB03F8A2
1307A314F0EB01C090C7FCAB13F8EA03FEEA070F000E1380121C121812381230EA701F12
60133F00E0130012C05BEA007EA213FE5B1201A25B12035BA20007131813E01438000F13
3013C01470EB806014E014C01381EB838038078700EA03FEEA00F815397EB71D>105
D<EB03F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91C8FCA35B017EEB07C0ED1FF0
ED783801FEEBE0F89039FC01C1FCEC0383EC07070001130ED9F81C13F891383803F09138
7001E0000349C7FCEBF1C0EBF38001F7C8FCEA07FEA2EBFFE0EBE7F8380FE0FEEBC07F6E
7E141F001F80D9800F1330A21670003F011F136001001380A216E04815C0007E1481020F
1380158300FE903807870048EB03FE0038EB00F8263B7CB92B>107
D<EB0FC0EA03FF5AA2EA001F1480A2133FA21400A25BA2137EA213FEA25BA21201A25BA2
1203A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FCA25AA2EA7E03A2EAFE07
130612FCA2130E130C131C1318EA7C38EA3C70EA1FE0EA0780123B7DB919>I<D803E001
7F14FE3D07F801FFE003FFC03D0E3C0781F00F03E03D1C3E1E00F83C01F026383F38D9FC
707F00304914E04A90387DC000007049EB7F8000604991C7FCA200E090C700FE1301485A
017E5CA200000201140301FE5F495CA203031407000160495C180F03075D1203494A011F
13601980030F023F13E00007F000C0495C1901031F023E1380000F1803494A150061033F
150E001FEF1E1C4991C7EA0FF80007C7000EEC03E043267EA449>I<D803E0137F3A07F8
01FFE03A0E3C0781F03A1C3E1E00F826383F387F00305B4A137C00705B00605BA200E090
C712FC485A137EA20000140101FE5C5BA2150300015D5B15075E120349010F133016C003
1F13700007ED80605B17E0EE00C0000F15014915801603EE0700001FEC0F0E49EB07FC00
07C7EA01F02C267EA432>I<EC1FC0ECFFF8903807E07E90380F801F90393F000F80017E
14C0491307484814E0485A4848EB03F0120F5B121F48481307A2127F90C7FCA2150F5A48
15E0A2151F16C0A248EC3F8016005D157E007E5C4A5A003E495A003F495A6C495A6C6C48
C7FC3807E07E3801FFF038003F8024267DA428>I<90390F8003F090391FE00FFC903939
F03C1F903A70F8700F80903AE0FDE007C09038C0FF80030013E00001491303018015F05C
EA038113015CA2D800031407A25CA20107140FA24A14E0A2010F141F17C05CEE3F80131F
EE7F004A137E16FE013F5C6E485A4B5A6E485A90397F700F80DA383FC7FC90387E1FFCEC
07E001FEC9FCA25BA21201A25BA21203A25B1207B512C0A32C3583A42A>I<02FC13C090
3803FF0190380F838390383F01C790397E00EF8049137F485A4848133F000715005B485A
001F5C157E485AA2007F14FE90C75AA3481301485CA31403485CA314075D140F127C141F
007E495A003E137F381F01EF380F839F3903FF1F80EA00FC1300143F92C7FCA35C147EA3
14FE5C130190387FFFF0A322357DA425>I<3903E001F83907F807FE390E3C1E07391C3E
381F3A183F703F800038EBE07F0030EBC0FF00705B00601500EC007E153CD8E07F90C7FC
EAC07EA2120013FE5BA312015BA312035BA312075BA3120F5BA3121F5B0007C9FC21267E
A425>I<14FF010313C090380F80F090383E00380178131C153C4913FC0001130113E0A3
3903F000F06D13007F3801FFE014FC14FF6C14806D13C0011F13E013039038003FF01407
1403001E1301127FA24814E0A348EB03C012F800E0EB07800070EB0F006C133E001E13F8
3807FFE0000190C7FC1E267CA427>I<EB01C0497E1307A4130F5CA3131F5CA3133F91C7
FC007FB51280A2B6FCD8007EC7FCA313FE5BA312015BA312035BA312075BA3120FEBC006
A2140E001F130CEB801C141814385C146014E0380F81C038078780D803FEC7FCEA00F819
357EB31E>I<13F8D803FE1438D8070F147C000E6D13FC121C1218003814011230D8701F
5C12601503EAE03F00C001005B5BD8007E1307A201FE5C5B150F1201495CA2151F120349
EC80C0A2153F1681EE0180A2ED7F0303FF130012014A5B3A00F8079F0E90397C0E0F1C90
393FFC07F8903907F001F02A267EA430>I<01F8EB03C0D803FEEB07E0D8070F130F000E
018013F0121C12180038140700301403D8701F130112601500D8E03F14E000C090C7FC5B
EA007E16C013FE5B1501000115805B150316001203495B1506150E150C151C151815385D
00015C6D485A6C6C485AD97E0FC7FCEB1FFEEB07F024267EA428>I<903907E001F09039
1FF807FC9039783E0E0F9039E01F1C1FD801C09038383F803A03800FF07F0100EBE0FF5A
000E4A1300000C157E021F133C001C4AC7FC1218A2C7123FA292C8FCA25CA2147EA214FE
A24A130CA20101141C001E1518003F5BD87F81143801835C00FF1560010714E03AFE0E7C
01C0D87C1C495A2778383E0FC7FC391FF00FFC3907C003F029267EA42F>120
D<13F8D803FE1470D8070F14F8000EEB8001121C121800381403003015F0EA701F126001
3F130700E0010013E012C05BD8007E130F16C013FE5B151F000115805BA2153F00031500
5BA25D157EA315FE5D1401000113033800F80790387C1FF8EB3FF9EB0FE1EB00035DA200
0E1307D83F805B007F495AA24A5A92C7FCEB003E007C5B00705B6C485A381E07C06CB4C8
FCEA01FC25367EA429>I E /Fr 85 125 df<1506150FA24B7EA24B7EA24B7EA2EDDFF0
A29138018FF8A291380307FCA291380603FEA291380E01FF140CDA1C007F141802386D7E
143002706D7E146002E06D7E5C01016E7E5C01036E7E91C7FC496E7E1306010E6E7E130C
011C6E7F131801386F7E133001706F7E136001E06F7E5B170F484882170748C97F170300
06831701488383481880001FB9FC4818C0A24818E0A2BA12F0A23C3C7CBB45>1
D<EC03FF021F13E09138FE01FC903901F8007ED907E0EB1F8049486D7ED93F80EB07F049
C76C7E01FE6E7E48486E7EA24848157F0007178049153F000F17C049151F001F17E0A248
48ED0FF0A3007F17F8A2491507D98180130600FF17FCA291B512FEA79138800006A3D87F
80C813F8A26D150FA2003F17F0A26C6CED1FE0A36C6CED3FC000071780A26C6CED7F006C
6C15FEA26C6C4A5A017F4A5A6D6C495A6D6C495AD907E0EB1F80D903F8017FC7FC903900
FE01FC91381FFFE0020390C8FC363D7BBA41>I<EC0FFE91387FFFC0903903FC07F89039
0FE000FED93F80EB3F8049C76C7E01FE6E7E48486E7E00038248486E7E48486E7EA24848
6E7E003F1780A34848ED7FC0AA003F17806D15FFA2001F1700A36C6C4A5AA200075E6D14
0300035E00015EA26C6C4A5AA2017C5DA26D4A5A011E92C7FC00C017606D141E006017C0
6D141CA326700380EB38010038EE0380D83FFFEC3FFFA46C1700A2333B7CBA3C>10
D<DA0FF813FC91397FFF07FF903B01F807DF83C0903A07E001FF0F903B1F8007FE1FE090
393F000FFC137E16F85B9338F007804848010790C7FC1503ACB812F8A32801F80003F0C7
FCB3AB486C497E267FFFE0B512F0A3333B7FBA30>I<EC0FF8EC7FFE903901F807809039
07E001C090391F8000E090383F0007017E497EA25BA2485A6F5AED018092C8FCA9ED03F0
B7FCA33901F8000F1503B3AA486C497E267FFFE0B512C0A32A3B7FBA2E>I<EC0FFC9138
7FFF70903901F803F0903807E00790381F800FEB3F00137EA25B150748481303ADB7FCA3
3901F80003B3AB486C497E267FFFE0B512C0A32A3B7FBA2E>I<DA0FF0EB1FF0DA7FFEEB
FFFC903B01F80F83F00F903C07E001CFC00380903C1F8000FF0001C090273F0007FE130F
017E4948497EA2495CA248485C03076E5A03030203C7FC95C8FCA9F007E0BAFCA33C01F8
0003F0001F1807B3AA486C496C497E267FFFE0B500C1B51280A3413B7FBA45>I<001C13
1C007F137F39FF80FF80A26D13C0A3007F137F001C131C00001300A40001130101801380
A20003130301001300485B00061306000E130E485B485B485B006013601A197DB92A>34
D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E5A5A5A
12600A1979B917>39 D<146014E0EB01C0EB0380EB0700130E131E5B5BA25B485AA2485A
A212075B120F90C7FCA25A121EA2123EA35AA65AB2127CA67EA3121EA2121F7EA27F1207
7F1203A26C7EA26C7E1378A27F7F130E7FEB0380EB01C0EB00E01460135278BD20>I<12
C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A2137C133C133E131EA2131F7FA214
80A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A25B131EA2133E133C137C1378A25BA2
485A485AA2485A48C7FC120E5A5A5A5A5A13527CBD20>I<EB0380497EA7397803803C00
FC147E00FE14FE397F8383FC393FC387F8390FE38FE03903FBBF803900FFFE00EB3FF8EB
0FE0A2EB3FF8EBFFFE3903FBBF80390FE38FE0393FC387F8397F8383FC39FE0380FE00FC
147E0078143C390007C000A76D5A1F247BBD2A>I<15301578B3A6007FB812F8B912FCA2
6C17F8C80078C8FCB3A6153036367BAF41>I<121C127FEAFF80A213C0A3127F121C1200
A412011380A2120313005A1206120E5A5A5A12600A19798817>I<B512FCA516057F941C>
I<121C127FEAFF80A5EA7F00121C0909798817>I<150C151E153EA2153C157CA2157815
F8A215F01401A215E01403A215C01407A21580140FA215005CA2141E143EA2143C147CA2
147814F8A25C1301A25C1303A2495AA25C130FA291C7FC5BA2131E133EA2133C137CA213
7813F8A25B1201A25B1203A25B1207A25B120FA290C8FC5AA2121E123EA2123C127CA212
7812F8A25A12601F537BBD2A>I<EB03F8EB1FFF90387E0FC09038F803E03901E000F048
4813780007147C48487FA248C77EA2481580A3007EEC0FC0A600FE15E0B3007E15C0A400
7F141F6C1580A36C15006D5B000F143EA26C6C5B6C6C5B6C6C485A6C6C485A90387E0FC0
D91FFFC7FCEB03F8233A7DB72A>I<EB01C013031307131F13FFB5FCA2131F1200B3B3A8
497E007FB512F0A31C3879B72A>I<EB0FF0EB7FFE48B57E3903E03FE0390F000FF0000E
6D7E486D7E486D7E123000706D7E126012FCB4EC7F807FA56CC7FC121CC8FCEDFF00A34A
5A5D14035D4A5A5D140F4A5A4A5A92C7FC147C5C495A495A495A495A91C8FC011EEB0180
5B5B49130348481400485A485A000EC75A000FB6FC5A5A485CB6FCA321387CB72A>I<EB
07F8EB3FFF4913C03901F80FF03903C007F848486C7E380E0001000F80381FE0006D7FA5
6C5A6C5AC85A1401A25D4A5AA24A5A5DEC0F80027EC7FCEB1FFCECFF809038000FE06E7E
EC01FC816E7EED7F80A216C0A2153F16E0A2121EEA7F80487EA416C049137F007F158000
7EC7FC0070ECFF006C495A121E390F8003F83907F00FF00001B512C06C6C90C7FCEB0FF8
233A7DB72A>I<1538A2157815F8A2140114031407A2140F141F141B14331473146314C3
13011483EB030313071306130C131C131813301370136013C01201EA038013005A120E12
0C5A123812305A12E0B712F8A3C73803F800AB4A7E0103B512F8A325397EB82A>I<0006
140CD80780133C9038F003F890B5FC5D5D158092C7FC14FC38067FE090C9FCABEB07F8EB
3FFE9038780F803907E007E090388003F0496C7E12066E7EC87EA28181A21680A4123E12
7F487EA490C71300485C12E000605C12700030495A00385C6C1303001E495A6C6C485A39
07E03F800001B5C7FC38007FFCEB1FE0213A7CB72A>I<EC3FC0903801FFF0010713FC90
380FE03E90383F800790387E001F49EB3F804848137F485AA2485A000FEC3F0049131E00
1F91C7FCA2485AA3127F90C9FCEB01FC903807FF8039FF1E07E090383801F0496C7E0160
7F01E0137E497FA249148016C0151FA290C713E0A57EA56C7E16C0A2121FED3F807F000F
15006C6C5B15FE6C6C5B6C6C485A3900FE07F090383FFFC06D90C7FCEB03FC233A7DB72A
>I<12301238123E003FB612E0A316C05A168016000070C712060060140E5D151800E014
38485C5D5DC712014A5A92C7FC5C140E140C141C5CA25CA214F0495AA21303A25C1307A2
130FA3495AA3133FA5137FA96DC8FC131E233B7BB82A>I<EB03F8EB1FFF017F13C09038
FC07F03901E001F848486C7E4848137C90C77E48141E000E141F001E80A3121FA27F5D01
E0131E6C6C133E01FC133C6D5B6C6C6C5AECC1E06CEBF3C06C01FFC7FC6C5BEB3FFF6D13
C081017F13F801F07F3903E07FFE3907801FFF48486C1380481303003E6D13C0003CEB00
7F007C143F0078EC0FE000F814075A1503A21501A36C15C012781503007C15806CEC0700
6C5C6C6C131ED807E0137C3903F803F0C6B55A013F1380D907FCC7FC233A7DB72A>I<EB
03F8EB1FFF017F13C09038FC07E03903F803F048486C7E48486C7E49137E121F48487FA2
007F158090C7FCA248EC1FC0A616E0A56C143FA27F123F001F147FA26C6C13FF6C6C13DF
000313013901F0039F3900FC0F1FD93FFC13C0EB07F090C7FC153F1680A316005D000F14
7E487E486C5BA24A5A4A5A49485A6C48485A001C495A260F807FC7FC3807FFFC000113F0
38003FC0233A7DB72A>I<121C127FEAFF80A5EA7F00121CC7FCB2121C127FEAFF80A5EA
7F00121C092479A317>I<121C127FEAFF80A5EA7F00121CC7FCB2121C127F5A1380A412
7F121D1201A412031300A25A1206A2120E5A121812385A1260093479A317>I<007FB812
F8B912FCA26C17F8CCFCAE007FB812F8B912FCA26C17F836167B9F41>61
D<EB3FE03801FFFE3907C03F80390E000FC0003CEB07F000301303007014F8007C130100
FE14FC7EA4127E003CEB03F8C7FCEC07F0A2EC0FE0EC1F80EC3F00147E147C5C495A5C49
5A5CA249C7FCA31306AA90C8FCA8130EEB3F80497EA56D5A010EC7FC1E3B7CBA27>63
D<1538A3157CA315FEA34A7EA34A6C7EA202077FEC063FA2020E7FEC0C1FA2021C7FEC18
0FA202387FEC3007A202707FEC6003A202C07F1501A2D901807F81A249C77F167FA20106
810107B6FCA24981010CC7121FA2496E7EA3496E7EA3496E7EA213E0707E1201486C81D8
0FFC02071380B56C90B512FEA3373C7DBB3E>65 D<B712E016FC16FF0001903980007FC0
6C90C7EA1FE0707E707E707EA2707EA283A75F16035F4C5A4C5A4C5A4C5AEEFF8091B500
FCC7FCA291C7EA7F80EE1FE0EE07F0707E707E83707EA21880177F18C0A7188017FFA24C
13005F16034C5AEE1FF8486DEB7FF0B812C094C7FC16F832397DB83B>I<913A01FF8001
80020FEBE003027F13F8903A01FF807E07903A03FC000F0FD90FF0EB039F4948EB01DFD9
3F80EB00FF49C8127F01FE153F12014848151F4848150FA248481507A2485A1703123F5B
007F1601A35B00FF93C7FCAD127F6DED0180A3123F7F001F160318006C7E5F6C7E17066C
6C150E6C6C5D00001618017F15386D6C5CD91FE05C6D6CEB03C0D903FCEB0F80902701FF
803FC7FC9039007FFFFC020F13F002011380313D7BBA3C>I<B712C016F816FE00019039
8001FF806C90C7EA3FE0EE0FF0EE03F8707E707E177FA2EF3F8018C0171F18E0170F18F0
A3EF07F8A418FCAC18F8A4EF0FF0A218E0A2171F18C0EF3F80A2EF7F0017FE4C5A4C5AEE
0FF0EE3FE0486DEBFF80B8C7FC16F816C036397DB83F>I<B812FCA30001903880000F6C
90C71201EE007E173E171E170EA31706A317078316C0A394C7FCA31501A21503150F91B5
FCA3EC000F15031501A21500A21860A318E093C712C0A41701A3EF0380A21707A2170F17
3F177F486D903807FF00B9FCA333397DB839>I<B812F8A30001903880001F6C90C71201
EE00FC177C173C171CA2170CA4170E1706A2ED0180A21700A41503A21507151F91B5FCA3
EC001F15071503A21501A692C8FCAD4813C0B612C0A32F397DB836>I<DBFF8013C0020F
EBF001023F13FC9139FF803F03903A03FC000787D90FF0EB03CF4948EB00EF4948147F49
48143F49C8121F485A4848150F48481507A248481503A2485A1701123F5B007F1600A448
481600AB93B6FCA26C7E9338007FE0EF3FC0A2123F7F121FA26C7EA26C7EA26C7E6C7E6C
6C157F6D7E6D6C14FF6D6C14EFD90FF8EB03C7D903FEEB0783903A00FFC03F0191393FFF
FC00020F01F0130002001380383D7CBA41>I<B648B512FEA30001902680000313006C90
C76C5AB3A491B6FCA391C71201B3A6486D497EB648B512FEA337397DB83E>I<B612C0A3
C6EBC0006D5AB3B3AD497EB612C0A31A397EB81E>I<013FB512E0A39039001FFC00EC07
F8B3B3A3123FEA7F80EAFFC0A44A5A1380D87F005B0070131F6C5C6C495A6C49C7FC3807
81FC3801FFF038007F80233B7DB82B>I<B649B5FCA3000101809038007FF06C90C8EA3F
80053EC7FC173C17385F5F4C5A4C5A4CC8FC160E5E5E5E5E4B5AED0780030EC9FC5D153E
157E15FF5C4A7F4A6C7E140E4A6C7E4A6C7E14704A6C7E4A6C7E14804A6C7E6F7EA26F7F
707EA2707E707EA2707EA2707E707EA2707E707F8484486D497FB6011FEBFF80A339397D
B841>I<B612E0A3000101C0C8FC6C90C9FCB3AD1718A517381730A31770A317F0A21601
1603160FEE1FE0486D13FFB8FCA32D397DB834>I<B5933807FFF86E5DA20001F0FC0026
00DFC0ED1BF8A2D9CFE01533A3D9C7F01563A3D9C3F815C3A2D9C1FCEC0183A3D9C0FEEC
0303A2027F1406A36E6C130CA36E6C1318A26E6C1330A36E6C1360A26E6C13C0A3913901
FC0180A3913900FE0300A2ED7F06A3ED3F8CA2ED1FD8A3ED0FF0A3486C6D5A487ED80FFC
6D48497EB500C00203B512F8A2ED018045397DB84C>I<B5913807FFFE8080C69238007F
E06EEC1F80D9DFF0EC0F001706EBCFF8EBC7FCA2EBC3FEEBC1FFA201C07F6E7EA26E7E6E
7E81140F6E7E8114036E7E168080ED7FC016E0153FED1FF0ED0FF8A2ED07FCED03FEA2ED
01FF6F1386A2EE7FC6EE3FE6A2EE1FF6EE0FFEA216071603A216011600A2177E486C153E
487ED80FFC151EB500C0140EA2170637397DB83E>I<EC03FF021F13E09138FE01FC9039
01F8007ED907E0EB1F8049486D7ED93F80EB07F049C76C7E01FE6E7E48486E7E49157E00
03167F4848ED3F80A24848ED1FC0A2001F17E049150F003F17F0A3007F17F8491507A300
FF17FCAC007F17F86D150FA3003F17F0A26C6CED1FE0A36C6CED3FC0000717806D157F00
0317006C6C15FEA26C6C4A5A017F4A5A6D6C495A6D6C495AD907E0EB1F80D903F8017FC7
FC903900FE01FC91381FFFE0020390C8FC363D7BBA41>I<B712C016F816FE0001903980
01FF806C90C7EA3FC0EE0FE0EE07F0EE03F817FC17FE1601A217FFA717FEA2EE03FCA2EE
07F817F0EE0FE0EE3FC0923801FF0091B512FC16F091C9FCB3A5487FB6FCA330397DB839
>I<B612FEEDFFE016F8000190388007FE6C90C76C7EEE3FC0707E707E707EA2707EA283
A65FA24C5AA24C5A4C5AEE3F8004FFC8FCED07FC91B512E05E9138000FF0ED03F8ED00FE
82707E707EA2161F83A583A6F00180A217F8160F1803486D01071400B66D6C5A04011306
933800FE0ECAEA3FFCEF07F0393B7DB83D>82 D<D90FF813C090383FFE0190B512813903
F807E33907E000F74848137F4848133F48C7121F003E140F007E1407A2007C140312FC15
01A36C1400A37E6D14006C7E7F13F86CB47E6C13F8ECFF806C14E06C14F86C14FEC68001
3F1480010714C0EB007F020713E0EC007FED3FF0151F150FED07F8A200C01403A21501A3
7EA216F07E15036C15E06C14076C15C06C140F6DEB1F80D8FBF0EB3F00D8F0FE13FE39E0
3FFFF8010F13E0D8C00190C7FC253D7CBA2E>I<003FB812E0A3D9C003EB001F273E0001
FE130348EE01F00078160000701770A300601730A400E01738481718A4C71600B3B09138
07FF80011FB612E0A335397DB83C>I<B6903807FFFEA3000101809038007FE06C90C8EA
1F80EF0F001706B3B2170E6D150C80171C133F17186D6C14385F6D6C14F06D6C5C6D6C49
5A6D6CEB07806D6C49C7FC91387F807E91381FFFF8020713E09138007F80373B7DB83E>
I<B500FC91387FFF80A30003018091380FFC006C90C8EA07E0715A6C705A6E1403017F93
C7FCA280013F1506A26E140E011F150C80010F5DA28001075DA26E147001031560A26D6C
5CA2806D4A5AA2ED8003027F91C8FCA291383FC006A215E0021F5BA2EDF01C020F1318A2
6E6C5AA215FC02035BA2EDFEE002015BA26E6C5AA36FC9FCA3153EA2151CA3393B7EB83E
>I<B5D8FC07B5D8F001B5FCA30007902780001FFEC7EA1FF86C48C7D80FF8EC07E00001
0307ED03C01B807F6C6F6C1500A26E5F017F6E6C1406A280013F4A6C5CA280011F4A6D5B
EE067FA26D6C010E6D5BEE0C3FA26D6C011C6D5BEE181FA26D6C6F5BEE300FA26D6C6F48
5AEE6007A26D6C4CC7FC9338C003FCA203805D913B7F818001FE06A203C1150EDA3FC3C7
EAFF0CA203E3151CDA1FE6EC7F98A215F6DA0FFCEC3FF0A302075E4B141FA202035E4B14
0FA202015E4B1407A2020093C8FC4B80503B7EB855>I<003FB7FCA39039FC0001FE01C0
130349495A003EC7FC003C4A5A5E0038141F00784A5A12704B5A5E006014FF4A90C7FCA2
4A5A5DC712074A5AA24A5A5D143F4A5AA24A5A92C8FC5B495AA2495A5C130F4948EB0180
A2495A5C137F495A16034890C7FC5B1203485AEE0700485A495C001F5D48485C5E484849
5A49130FB8FCA329397BB833>90 D<EAFFF8A4EAF000B3B3B3B3A3EAFFF8A40D5378BD17
>I<3901800180000313033907000700000E130E485B0018131800381338003013300070
137000601360A200E013E0485BA400CE13CE39FF80FF806D13C0A3007F137FA2393F803F
80390E000E001A1974B92A>I<EAFFF8A4EA0078B3B3B3B3A3EAFFF8A40D537FBD17>I<EB
1FE0EBFFFC3803E03F3907000F80390F8007E0486C6C7E13E06E7EA26E7E6C5A6C5AC8FC
A4147FEB07FFEB3FE0EBFE00EA03F8EA0FF0EA1FC0123F485A90C7FC160C12FEA31401A2
6C13036CEB077C903980063E18383FC01E3A0FE0781FF03A03FFF00FE03A007F8007C026
277DA52A>97 D<EA03F012FFA3120F1203B0EC1FE0EC7FF89038F1E03E9039F3801F8090
39F7000FC001FEEB07E049EB03F049EB01F85BED00FCA216FEA2167E167FAA167E16FEA2
16FC15016D14F8ED03F07F01EEEB07E001C6EB0FC09039C7801F00903881E07E903800FF
F8C7EA1FC0283B7EB92E>I<EB03FC90381FFF8090387E03E03901F80070484813F83907
E001FC380FC003A2EA1F80123F90380001F848EB00F01500A2127E12FEAA127E127FA26C
14067F001F140E6D130C000F141C6C6C13386C6C13706C6C13E039007C07C090381FFF00
EB07F81F277DA525>I<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1FFF90387E078F9038
F801EF3903F0007F4848133F4848131FA24848130F123F90C7FC5AA2127E12FEAA127E12
7FA27EA26C6C131FA26C6C133F6C6C137F6C6CEBEFF03A01F801CFFF39007C078F90381F
FE0FD907F813C0283B7DB92E>I<EB07F8EB1FFF90387C0FC03901F803E03903F001F0D8
07E013F8380FC0004848137CA248C7127E153E5A153F127E12FEA3B7FCA248C8FCA5127E
A2127FA26C14037F001F14076C6C13060007140E6D131CD801F013386C6C137090387E03
E090381FFF80903803FC0020277EA525>I<147E903803FF8090380FC1E0EB1F8790383F
0FF0137EA213FCA23901F803C091C7FCADB512FCA3D801F8C7FCB3AB487E387FFFF8A31C
3B7FBA19>I<ED03F090390FF00FF890393FFC3C3C9039F81F707C3901F00FE03903E007
C03A07C003E010000FECF000A248486C7EA86C6C485AA200075C6C6C485A6D485A6D48C7
FC38073FFC38060FF0000EC9FCA4120FA213C06CB512C015F86C14FE6CECFF804815C03A
0F80007FE048C7EA0FF0003E140348140116F8481400A56C1401007C15F06CEC03E0003F
1407D80F80EB0F80D807E0EB3F003901FC01FC39007FFFF0010790C7FC26387EA52A>I<
EA03F012FFA3120F1203B0EC0FF0EC3FFCECF03F9039F1C01F809039F3800FC0EBF70013
FE496D7EA25BA35BB3A3486C497EB500C1B51280A3293A7EB92E>I<EA0380EA0FE0487E
A56C5AEA0380C8FCAAEA03F012FFA312071203B3AA487EB512C0A312387EB717>I<EB01
C0EB07F0EB0FF8A5EB07F0EB01C090C7FCAAEB01F813FFA313071301B3B3A2123C127E00
FF13F01303A214E038FE07C0127C383C0F00EA0FFEEA03F8154984B719>I<EA03F012FF
A3120F1203B1913801FFFCA39138007FC01600157C15705D4A5A4A5A4AC7FC141E143814
7814FC13F1EBF3FEEBF73F01FE7FEBF81F496C7E8114076E7E6E7E811400157E157F8116
80ED1FC0486CEB3FF0B500C0B5FCA3283A7EB92C>I<EA03F012FFA3120F1203B3B3AD48
7EB512C0A3123A7EB917>I<2703F00FF0EB1FE000FFD93FFCEB7FF8913AF03F01E07E90
3BF1C01F83803F3D0FF3800FC7001F802603F70013CE01FE14DC49D907F8EB0FC0A2495C
A3495CB3A3486C496CEB1FE0B500C1B50083B5FCA340257EA445>I<3903F00FF000FFEB
3FFCECF03F9039F1C01F803A0FF3800FC03803F70013FE496D7EA25BA35BB3A3486C497E
B500C1B51280A329257EA42E>I<EB03FE90380FFF8090383E03E09038F800F84848137C
48487F48487F4848EB0F80001F15C090C712074815E0A2007EEC03F0A400FE15F8A9007E
15F0A2007F14076C15E0A26C6CEB0FC0000F15806D131F6C6CEB3F006C6C137EC66C13F8
90387E03F090381FFFC0D903FEC7FC25277EA52A>I<3903F01FE000FFEB7FF89038F1E0
7E9039F3801F803A07F7000FC0D803FEEB07E049EB03F04914F849130116FC150016FEA3
167FAA16FEA3ED01FCA26DEB03F816F06D13076DEB0FE001F614C09039F7803F009038F1
E07E9038F0FFF8EC1FC091C8FCAB487EB512C0A328357EA42E>I<D903F813C090381FFE
0190387E07819038FC01C33903F000E3000714774848133749133F001F141F485A150F48
C7FCA312FEAA127FA37E6D131F121F6D133F120F6C6C137F6C6C13EF3901F801CF39007E
078F90381FFE0FEB07F890C7FCABED1FE00203B5FCA328357DA42C>I<3807E01F00FFEB
7FC09038E1E3E09038E387F0380FE707EA03E613EE9038EC03E09038FC0080491300A45B
B3A2487EB512F0A31C257EA421>I<EBFF03000313E7380F80FF381E003F487F487F0070
7F12F0A2807EA27EB490C7FCEA7FE013FF6C13E06C13F86C7F00037FC67F01071380EB00
7F141F00C0EB0FC01407A26C1303A37E15806C13077EEC0F00B4131E38F3C07C38E1FFF0
38C03F801A277DA521>I<1318A51338A31378A313F8120112031207001FB5FCB6FCA2D8
01F8C7FCB215C0A93800FC011580EB7C03017E13006D5AEB0FFEEB01F81A347FB220>I<
D803F0EB07E000FFEB01FFA3000FEB001F00031407B3A4150FA3151F12016D133F0000EC
77F86D9038E7FF8090383F03C790381FFF87903A03FC07E00029267EA42E>I<B538803F
FEA33A0FF8000FF06C48EB07E00003EC03C06D148000011500A26C6C1306A26D130E017E
130CA26D5BA2EC8038011F1330A26D6C5AA214E001075BA2903803F180A3D901FBC7FCA2
14FF6D5AA2147CA31438A227257EA32C>I<B53A1FFFE03FFEA3260FF8009038000FF86C
48017EEB03E018C00003023EEB0180A26C6C013FEB0300A36C6CEC8006156FA2017E9038
EFC00C15C7A2D93F016D5A15830281EBF038D91F831430150102C3EBF87090260FC60013
60A2D907E66D5A02EC137CA2D903FCEB7F804A133FA2010192C7FC4A7FA20100141E4A13
0E0260130C37257EA33C>I<B538807FFFA33A03FE003FF00001EC1F80000092C7FC017E
131C6D13186D6C5AECC070010F5B6D6C5AECF180EB03FB6DB4C8FC6D5AA2147F804A7E81
14CF903801C7E090380383F090380703F8EB0601496C7E011C137E49137F01787F496D7E
486C80000FEC3FF0D8FFFE90B51280A329247FA32C>I<B538803FFEA33A0FF8000FF06C
48EB07C00003EC03806C7E16007F00001406A2017E5BA2137F6D5BA26D6C5AA2ECC07001
0F1360A26D6C5AA214F101035BA2D901FBC7FCA214FF6D5AA2147CA31438A21430A21470
1460A25CA2EA7C0100FE5B130391C8FC1306EAFC0EEA701C6C5AEA1FF0EA0FC027357EA3
2C>I<003FB512FCA2EB8003D83E0013F8003CEB07F00038EB0FE012300070EB1FC0EC3F
800060137F150014FE495AA2C6485A495AA2495A495A495AA290387F000613FEA2485A48
5A0007140E5B4848130C4848131CA24848133C48C7127C48EB03FC90B5FCA21F247EA325
>I<B81280A2290280962A>I<BD12C0A25202809653>I E /Fs 26
121 df<B712F0AB240B7F9F2D>45 D<157815FC14031407141F14FF130F0007B5FCB6FC
A2147F13F0EAF800C7FCB3B3B3A6007FB712FEA52F4E76CD43>49
D<EC3FFE0103B512E0010F14FC013F14FF90B712C048D9C07F7F2703FE000F13F8D807F8
01037FD80FE06D7F48486D7F48488001F01680486C6E13C07F486C6E13E07FA27013F0A5
6C5AA26C5AEA0FF0EA03C0C914E05EA218C05E1880A24C13005F4C5A4B5B5F4B5B5F4B5B
4B90C7FC4B5A5E4B5AED7FE04B5A4A5B4A48C8FC4A5A5D4A48EB01F04A5AEC3F804AC7FC
02FEEC03E0495A495A495A495AD91F80140749C8FC013E150F017FB7FC90B812C05A5A5A
5A5A5A5AB9FC1880A4344E79CD43>I<91380FFFC091B512FC0107ECFF80011F15E09026
3FF8077F9026FF800113FC4848C76C7ED803F86E7E491680D807FC8048B416C080486D15
E0A4805CA36C17C06C5B6C90C75AD801FC1680C9FC4C13005FA24C5A4B5B4B5B4B13C04B
5BDBFFFEC7FC91B512F816E016FCEEFF80DA000713E0030113F89238007FFE707E701380
7013C018E07013F0A218F8A27013FCA218FEA2EA03E0EA0FF8487E487E487EB57EA318FC
A25E18F891C7FC6C17F0495C6C4816E001F04A13C06C484A1380D80FF84A13006CB44A5A
6CD9F0075BC690B612F06D5D011F1580010302FCC7FCD9001F1380374F7ACD43>I<177C
17FEA2160116031607160FA2161F163F167FA216FF5D5DA25D5DED1FBFED3F3F153E157C
15FCEC01F815F0EC03E01407EC0FC01580EC1F005C147E147C5C1301495A495A5C495A13
1F49C7FC133E5B13FC485A5B485A1207485A485A90C8FC123E127E5ABA12C0A5C96C48C7
FCAF020FB712C0A53A4F7CCE43>I<932601FFFCEC01C0047FD9FFC013030307B600F813
07033F03FE131F92B8EA803F0203DAE003EBC07F020F01FCC7383FF0FF023F01E0EC0FF9
4A01800203B5FC494848C9FC4901F8824949824949824949824949824990CA7E494883A2
484983485B1B7F485B481A3FA24849181FA3485B1B0FA25AA298C7FC5CA2B5FCAE7EA280
A2F307C07EA36C7FA21B0F6C6D1980A26C1A1F6C7F1C006C6D606C6D187EA26D6C606D6D
4C5A6D6D16036D6D4C5A6D6D4C5A6D01FC4C5A6D6DEE7F806D6C6C6C4BC7FC6E01E0EC07
FE020F01FEEC1FF80203903AFFE001FFF0020091B612C0033F93C8FC030715FCDB007F14
E0040101FCC9FC525479D261>67 D<BA7E19FCF1FF801AF01AFCD8000701F0C7000F13FF
060014C0071F7F070713F807017F737F747E747F747F86747F747F8886888688A2757EA3
1D8087A21DC0A51DE0A387A963A31DC0A51D80A2631D00A3515AA2646264505B6264505B
505B5090C7FCF2FFFE4F5B07075B071F5B96B512C0060F91C8FCBB5A1AF01AC007FCC9FC
19805B527CD167>I<B812C0A5D8000701F8C7FCB3B3B3B2B812C0A52A527CD132>73
D<B912F0F0FF8019F819FF1AC0D8000701F0C714F0060F7F060113FE727F737F737F8573
7F87A2737FA387A863A2616363A24F5B4F5B4F90C8FC4F5A06035B060F13F095B512C092
B8C9FC19F819E019F89226F0000313FE9439007FFF80727F727F727F727F727F8684A286
84A787A71D1C75133EA38575137E73157C7513FC731401B86C6D9038F803F807039038FE
07F07390B512E0736C14C0080F1400CEEA7FFC5F537CD164>82 D<EC7FFF0107B512F001
3F14FE90B77E48D9E00F7F2703FE000113F0486C6D7F6EEB3FFC48826E131F83707FA36C
496D7FA26C90C7FC6C5AC9FCA6037FB5FC020FB6FC91B7FC01071487013FEBF007491380
3901FFFC004813F0485B485B485B4890C7FC5A5BA2485AA45EA26D5C007F151D163D6C6C
02797F6C6D01F113F86C9026C003E1EBFFE06C9026F81FC014F06C90B5487EC6ED001F01
1F01FC010713E0010101E090C8FC3C387CB641>97 D<913801FFF8021FEBFF8091B612F0
010315FC010F9038C00FFE903A1FFE0001FFD97FFC491380D9FFF05B4817C048495B5C5A
485BA2486F138091C7FC486F1300705A4892C8FC5BA312FFAD127F7FA27EA2EF03E06C7F
17076C6D15C07E6E140F6CEE1F806C6DEC3F006C6D147ED97FFE5C6D6CEB03F8010F9038
E01FF0010390B55A01001580023F49C7FC020113E033387CB63C>99
D<4DB47E0407B5FCA5EE001F1707B3A4913801FFE0021F13FC91B6FC010315C7010F9038
E03FE74990380007F7D97FFC0101B5FC49487F4849143F484980485B83485B5A91C8FC5A
A3485AA412FFAC127FA36C7EA37EA26C7F5F6C6D5C7E6C6D5C6C6D49B5FC6D6C4914E0D9
3FFED90FEFEBFF80903A0FFFC07FCF6D90B5128F0101ECFE0FD9003F13F8020301C049C7
FC41547CD24B>I<913803FFC0023F13FC49B6FC010715C04901817F903A3FFC007FF849
486D7E49486D7E4849130F48496D7E48178048497F18C0488191C7FC4817E0A248815B18
F0A212FFA490B8FCA318E049CAFCA6127FA27F7EA218E06CEE01F06E14037E6C6DEC07E0
A26C6DEC0FC06C6D141F6C6DEC3F806D6CECFF00D91FFEEB03FE903A0FFFC03FF8010390
B55A010015C0021F49C7FC020113F034387CB63D>I<ED3FFC0203B5FC020F14C0023F14
E09139FFF81FF0499038C03FF849EB807F49903800FFFC495A495AA2495AA2EE7FF8495A
EE3FF0EE0FC093C7FCAEB712E0A526007FF8C8FCB3B3A7007FB512FEA52E547CD329>I<
EB3FF0B5FCA51203C6FCB3A4EE1FFC93B512C0030314F0030F8092391FE07FFC92393F00
1FFE037C8003F07FDAF1E081ECF3C0DAF7807F8502FFC7FC5CA25CA45CB3ACB6D8F807B6
12C0A542537BD24B>104 D<137F497E000313E0487FA2487FA76C5BA26C5BC613806DC7
FC90C8FCADEB3FF0B5FCA512017EB3B3A6B612E0A51B547BD325>I<EB3FF0B5FCA51201
7EB3B3B3B1B612F0A51C537BD225>108 D<D93FF0EB1FFCB591B512C0030314F0030F80
92391FE07FFC92393F001FFE0003027C80C602F07FDAF1E081ECF3C0DAF7807F8502FFC7
FC5CA25CA45CB3ACB6D8F807B612C0A542367BB54B>110 D<913801FFE0021F13FE91B6
12C0010315F0010F9038807FFC903A1FFC000FFED97FF86D6C7E49486D7F48496D7F4849
6D7F4A147F48834890C86C7EA24883A248486F7EA3007F1880A400FF18C0AC007F1880A3
003F18006D5DA26C5FA26C5F6E147F6C5F6C6D4A5A6C6D495B6C6D495B6D6C495BD93FFE
011F90C7FC903A0FFF807FFC6D90B55A010015C0023F91C8FC020113E03A387CB643>I<
903A3FF001FFE0B5010F13FE033FEBFFC092B612F002F301017F913AF7F8007FFE0003D9
FFE0EB1FFFC602806D7F92C76C7F4A824A6E7F4A6E7FA2717FA285187F85A4721380AC1A
0060A36118FFA2615F616E4A5BA26E4A5B6E4A5B6F495B6F4990C7FC03F0EBFFFC9126FB
FE075B02F8B612E06F1480031F01FCC8FC030313C092CBFCB1B612F8A5414D7BB54B>I<
90397FE003FEB590380FFF80033F13E04B13F09238FE1FF89139E1F83FFC0003D9E3E013
FEC6ECC07FECE78014EF150014EE02FEEB3FFC5CEE1FF8EE0FF04A90C7FCA55CB3AAB612
FCA52F367CB537>114 D<903903FFF00F013FEBFE1F90B7FC120348EB003FD80FF81307
D81FE0130148487F4980127F90C87EA24881A27FA27F01F091C7FC13FCEBFFC06C13FF15
F86C14FF16C06C15F06C816C816C81C681013F1580010F15C01300020714E0EC003F0307
13F015010078EC007F00F8153F161F7E160FA27E17E07E6D141F17C07F6DEC3F8001F8EC
7F0001FEEB01FE9039FFC00FFC6DB55AD8FC1F14E0D8F807148048C601F8C7FC2C387CB6
35>I<143EA6147EA414FEA21301A313031307A2130F131F133F13FF5A000F90B6FCB8FC
A426003FFEC8FCB3A9EE07C0AB011FEC0F8080A26DEC1F0015806DEBC03E6DEBF0FC6DEB
FFF86D6C5B021F5B020313802A4D7ECB34>I<D93FF8913801FFC0B50207B5FCA50003ED
001FC61607B3AE5FA35FA2017F5D173B177B6D6C14F3DC01E313F06D6CD907C3EBFFC090
3A0FFFC03F836D90B51203010114FE6D6C13F8020701E091C7FC42377BB54B>I<B600F0
0107B5FCA5000101F8C8EA7FE06C6DED3F00A2017F163E6E157E013F167C6E15FC6D5E6F
13016D5E8117036D5E6F13076D5E6F130F6D5E6F131F6D93C7FC815F6E6C133E177E023F
147C6F13FC6E5C16816E5C16C3A26EEBE3E016E76E5C16FF6E5CA26E91C8FCA26F5AA36F
5AA26F5AA26F5AA26F5A6F5A40367DB447>I<007FB500F090387FFFFEA5C66C48C7000F
90C7FC6D6CEC07F86D6D5C6D6D495A6D4B5A6F495A6D6D91C8FC6D6D137E6D6D5B91387F
FE014C5A6E6C485A6EEB8FE06EEBCFC06EEBFF806E91C9FCA26E5B6E5B6F7E6F7EA26F7F
834B7F4B7F92B5FCDA01FD7F03F87F4A486C7E4A486C7E020F7FDA1FC0804A486C7F4A48
6C7F02FE6D7F4A6D7F495A49486D7F01076F7E49486E7E49486E7FEBFFF0B500FE49B612
C0A542357EB447>120 D E /Ft 56 123 df<EA0380EA0FE0121FA5EA0760120013E013
C0A2120113801203EA07001206120E5A5A5A5A5A0B176FB318>39
D<1560EC01E0EC03C0EC0700140E5C143C5C5C495A495A13075C49C7FC5B131E5B137C13
7813F85B12015B12035B1207A25B120FA290C8FC5AA2121E123EA3123C127CA31278A212
F8A35AAF12701278A21238A2123C121CA27EA27E6C7E12011B4A75B71F>I<14301438A2
8080A2140F801580A2140315C0A4140115E0A81403A415C0A31407A31580140FA315005C
A3141E143EA2143C147CA25CA25C13015C13035C13075C130F91C7FC131E133E133C5B5B
485AA2485A485A48C8FC121E5A12705A5A1B4A7EB71F>I<B51280A46C1300110579911B>
45 D<121C127F12FFA412FE12380808778718>I<EC1FC0EC7FF0903801E0F8903807C03C
EB0F00011E131E133E013C131F5B13F85B1201A2485AA20007143F5BA2120F153E49137E
121FA348C712FCA4007EEB01F8A4007CEB03F012FCA2EC07E0A24814C0A2EC0F80A2EC1F
00A2141E5C0078137C5C387C01F0383C03E0381F0F80D80FFEC7FCEA03F8203477B127>
48 D<EC01801403A21407140FEC1F005C14FF5BEB1FFEEB7FBEEB7E7E1320EB007CA214
FCA25CA21301A25CA21303A25CA21307A25CA2130FA25CA2131FA291C7FCA25BA2133EA2
137EA2137C13FCB512FCA3193277B127>I<EC07F0EC3FFCECF81E903803E00F90390780
0780D90F0013C0011E13035B013814E0EB7980EB71C00170130701F014C013E0A201E113
0FD9E380138090387F001F013C140090C7123E5D5D4A5AEC1FE0903807FF804AC7FC6D7E
90380007C06E7EA26E7EA514031218127EA21407485C5A00E0495AA26C495A007049C7FC
147E00785B383C01F0381E07E03807FF80D801FCC8FC233479B127>51
D<150E151FA2153F153EA3157E157CA215FC15F8A2140115F0A2EC03E0A3EC07C0A2EC0F
80A2EC1F00A2143EA25C147814F85C1301903803E0E0ECC1F0EB0781EB0F83EC03E0131E
133CEB7C0701F813C0EA01F0EA03E03807C00FD80F801380EA1FFC383FFFCF48EBFF82D8
F00313FF3860003FC7EA1FF8EC3F00143EA3147E147CA314FC5CA4146020417DB127>I<
010614C090380FC00F91B51280160015FC4913F015C0D91CFEC7FC91C8FC133C1338A313
781370A313F0EBE0FE9038E3FF809038EF03C03901FC01E001F87FEBF000497F485A5BC8
FCA41401A4003C130300FC5CA34A5A5A00E0495AA24A5A4AC7FC6C137E00705B387801F8
383E07F0381FFFC06C90C8FCEA03F8223478B127>I<EC01F8EC0FFEEC3FFFECFE0F9039
01F80780903803E00F903807C01F90380F803FD91F001300133E49130E01FC90C7FC5B12
01485AA2485AA2380FC1F8EBC7FF9038DE0780391FB803C001F07FEBE001003F8013C013
80A2D87F007FA2127E4A5AA25AA214075DA25A4A5AA25D141F4AC7FC0078133E007C5B5C
6C485A381F07E0EBFFC0000790C8FCEA01F8213477B127>I<D9E0F81338EBE3FC2601EF
FE137801FF14F048EC01E09038FE0E03D807F814C09039F0060F80390FC0071F90398003
FF00391F0001EF001EEB001E003E5C123C485C15F8485C4813015DC712034A5AA24A5AA2
141F92C7FC5C143E147EA25CA2495AA3495AA213075CA2130F5CA2131FA25C133FA391C8
FCA2131C253476B127>I<EC07E0EC3FFC4A7E903801F81F903903E00F809038078007D9
0F0013C0491303131E5BA21507017C1480A2150F1600017E131E017F133E6E5A6D6C5AEC
E1E090381FFBC06DB4C7FC6D5A6D7E497F011E7F90387C7FE09038F01FF048486C7E3807
C007EB8003380F0001001E1300123E003C1478127C1278A215F800F85C5A6C495A007813
035D007C495A003C011FC7FC003E133E381F81FC380FFFF0000313C0C648C8FC223479B1
27>I<EC0FC0EC7FF0ECFFFC903803F07E903807C03E49487EEB1F00013E7F017E14805B
A2485AA2485A151FA212075BA2ED3F00A2485A5DA2000714FEA21401140300035CEBE007
0001130E3900F03DF8EB7FF1EB0FC190380003F0A24A5AA25D4A5A141F003891C7FC007E
133E00FE137E5C48485A48485A48485A38781F80D87FFFC8FCEA1FFCEA07E0213478B127
>I<1370EA01FC1203A413F8EA00E01300B0121C127F5AA45A12380E20779F18>I<161C16
3CA2167C16FCA21501821503A2ED077E150F150E151CA21538A2157015F015E0EC01C0A2
913803807F82EC0700A2140E141E141C5CA25CA25C49B6FCA25B913880003F49C7EA1F80
A2130E131E131C133C13385B13F05B12011203D80FF0EC3FC0D8FFFE903807FFFEA32F36
7BB539>65 D<0107B612C04915F017FC903A003F8000FE177FEF3F8092C7121FA24A15C0
A2147EA214FE18804A143FA20101ED7F00177E4A5C16010103EC03F04C5A4AEB1FC091B6
C7FC495C9139F0007F804AEB0FC0707E010F6E7E834A1301A2011F81A25CA2133F5F91C7
1203A2494A5AA2017E4A5A4C5A01FE4A5A4CC7FC49EB01FE0001EC07FC007FB612F0B712
C04BC8FC32337BB236>I<DB1FF013C09238FFFC010203EBFF03913A0FF00F878091393F
8003CF9139FE0001EF4948EB00FFD903F01500D90FE080495A49488091C8123E137E13FE
485A4848153CA2485AA248481538A2485A94C7FC123F5BA3127F90CBFCA412FEA2EE03C0
A25F127E160794C7FC5E160E007F151E6C5D5E6C6C147016F06C6C495A6C6CEB07C06C6C
49C8FC6C6C133E6CB413FC90387FFFF0011F13C0D903FEC9FC323775B437>I<0107B612
C04915F017FC903A003F8001FEEE007FEF1F8092C7EA0FC0EF07E05CEF03F0147E170102
FE15F8A25CA21301A25CA2130317035CA2130718F04A1407A2130F18E04A140F18C0011F
151F18805CEF3F00133F177E91C85AA2494A5A4C5A017E4A5A4C5A01FE4A5A047EC7FC49
495A0001EC0FF8007FB612E0B7C8FC15F835337BB23A>I<0107B712F05B18E0903A003F
80001F1707170392C7FC17015C18C0147EA214FEA24A130EA20101EC1E03041C13804A91
C7FC163C13035E9138F001F891B5FC5B5EECE0011500130F5E5C1707011F01015BEEC00E
0280141E92C7121C133F173C91C812381778495DA2017E14014C5A01FE14074C5A49141F
00014AB45A007FB7FCB8FC94C7FC34337CB234>I<92391FE001809238FFF8030207EBFE
07913A1FF01F0F0091393F80079F9139FE0003DFD901F86DB4FCD907F05C49481300495A
4948147E49C8127C137E13FE485A48481578A2485AA248481570A2485A94C7FC123F5BA3
127F90CBFCA400FE91383FFFFCA25F9238003F8094C7FCA2007E5DA2167EA2007F15FE7E
5E6C6C1301A26C6C495A6D13076C6CEB0F786C6C133E3A00FF01FC3090387FFFF0011F01
C0C8FCD903FEC9FC313775B43B>71 D<010FB51280A216009038003FC05DA292C7FCA25C
A2147EA214FEA25CA21301A25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133F
A291C8FCA25BA2137EA213FEA25B1201B512F8A25C21337BB21E>73
D<91381FFFFE5C16FC9138003F80A31600A25D157EA315FE5DA314015DA314035DA31407
5DA3140F5DA3141F5DA3143F92C7FCA2121C007E5B00FE137EA214FE485BEAF80100E05B
495A387007E038780FC06C48C8FCEA1FFCEA07F0273579B228>I<0107B512C05BA29026
003FC0C7FC5DA292C8FCA25CA2147EA214FEA25CA21301A25CA21303A25CA21307A25CA2
130FA25C17E0011F140117C05C1603013F1580160791C7FCEE0F005B5E017E143EA201FE
5CED01FC4913030001EC1FF8007FB6FCB7FC5E2B337CB230>76 D<902607FFC0ED7FFC49
17FF81D9003F4B1300611803023BED077CA2027BED0EFC610273151C1838DAF1F01439F0
71F014E118E10101ED01C36102C1EC0383EF070301031607050E5BEC80F8171C0107ED38
0F6102001470A249EDE01FDC01C090C7FC130EEE0380011E017C5C933807003E011C140E
A2013C4A137E187C01385C5E017816FC6F485B1370ED3FC001F0EC80016000011500D807
F81503277FFF803E90B512C0B5EB3C01151C46337BB245>I<902607FF8090383FFFC049
6D5BA2D9001F913803F8004A6C6D5A6060EC3BF0027B140360EC71F8A202F11407DAF0FC
91C7FC14E0A20101017E5B170E14C0810103151EEE801CEC801FA20107ECC03C030F1338
140016E049010713781770010E14F01503011E15F0705A011C1301A2013C14FD03005B13
3816FF0178147F5F0170143FA213F070C8FC1201EA07F8267FFF807FB5140EA23A337BB2
39>I<ED1FE0913801FFFC913807E03F91391F800FC091393E0003E002F8EB01F0495A49
48EB00F8494814FC4948147C49C8127E133E017E153E49153F485AA2485A12075B120F5B
121F177F5B123FA348C912FEA4EE01FC12FEEE03F8A217F0160717E0160F007E16C0EE1F
80A2EE3F006C157E5E5E6C6C495A000F4A5A6D495A0007EC1F806C6C013EC7FCD801F813
FC39007E07F090383FFF80D907FCC8FC303775B43B>I<0107B612C04915F883903A003F
8001FEEE003FEF1F8092C713C0170F5C18E0147EA214FEEF1FC05CA201011680173F4A15
00177E010315FE5F4AEB03F8EE07E00107EC3FC091B6C7FC16F802E0C9FC130FA25CA213
1FA25CA2133FA291CAFCA25BA2137EA213FEA25B1201387FFFF0B5FCA233337CB234>I<
0107B512FE49ECFFC017F0903A003F8007F8EE01FCEE007E92C7127F835C1880147EA214
FEEF7F005CA2010115FE5F4A13015F01034A5AEE0FC04A495A04FEC7FC49B512F016C091
38E003E0ED01F8010F6D7E167C4A137EA2131FA25CA2013F14FEA291C7FCA24913015E13
7EEF01C001FE150318805B00011607277FFFF0001400B5ECFE0EEE7E1CC9EA1FF8EE07E0
32357BB238>82 D<913901FC018091380FFF03023F13C791387E07EF903A01F801FF0049
487E4A7F495A4948133E131F91C7FC5B013E143CA3137E1638A293C7FC137FA26D7E14E0
14FE90381FFFC06D13F86D7F01017F6D6C7E020F7F1400153F6F7E150FA4120EA2001E5D
121CA2151F003C92C7FCA2003E143E5D127E007F5C6D485A9038C007E039F3F80FC000F0
B5C8FC38E03FFC38C00FF029377AB42B>I<0003B812C05A1880903AF800FC003F260FC0
01141F0180150F01005B001EEE07001403121C003C4A5BA200380107140E127800705CA2
020F141E00F0161CC74990C7FCA2141FA25DA2143FA292C9FCA25CA2147EA214FEA25CA2
1301A25CA21303A25CA21307A25C497E001FB512F05AA2323374B237>I<B500C090383F
FF80A3D807F8C73807F80049EC03E05F00034B5A94C7FC5E160E5EA25E167816705E7F00
014A5A15035E4BC8FCA2150E151E151C5D7F5D000014F05D4A5AA24A5AA24AC9FC140EA2
6D5A137E5C147814705CA2EB7FC0A25C91CAFCA2133EA2133C1338313570B239>86
D<B53CC03FFFF003FFF8601480280FF00001FCC7EA7F806C484AEC3E00193CA219386115
036115074E5A030F140361031D4AC7FCA2DB38FC130EA203705C15F06C6C01E05C140103
C05CDA038014F060DA0700130160020E4A5AA24A4AC8FCA24A140E147802705C5C5FD9F1
C014781770D9F3805CA201F7C7EA7FC0A201FE5DA26C4892C9FCA249147E5B167C5B1678
491470453570B24D>I<EB03F0EB0FF890383E1C6090387C0FF0EBF807EA01F0EA03E000
07EB03E0EA0FC0A2381F800715C0EA3F00A2140F481480127EA2141F00FE14005A1506EC
3F07EC3E0F150E147E007C141EECFE1CEB01FCD83C03133C393E07BE38391F0E1E783907
FC0FF03901F003C0202278A027>97 D<137EEA0FFE121F5B1200A35BA21201A25BA21203
A25BA21207A2EBC3E0EBCFF8380FDC3EEBF81F497E01E01380EA1FC0138015C013005AA2
123EA2007E131F1580127CA2143F00FC14005AA2147EA25CA2387801F85C495A6C485A49
5A6C48C7FCEA0FFCEA03F01A3578B323>I<14FCEB07FF90381F078090383E03C0EBFC01
3801F8033803F0073807E00F13C0120F391F80070091C7FC48C8FCA35A127EA312FE5AA4
007C14C0EC01E0A2EC03C06CEB0F80EC1F006C137C380F81F03803FFC0C648C7FC1B2278
A023>I<ED0FC0EC03FFA21680EC001FA31600A25DA2153EA2157EA2157CA215FCA29038
03F0F8EB0FF8EB3E1DEB7C0F496C5AEA01F0EA03E000071303D80FC05BA2381F8007A2D8
3F005BA2140F5A007E5CA2141F12FE4891C7FC1506EC3F075DEC3E0E147E007C141EECFE
1CEB01FCD83C03133C393E07BE38391F0E1E783907FC0FF03901F003C0223578B327>I<
EB03F8EB0FFEEB3E0F9038F807803801F003EA03E0EA07C0120FEA1F801407D83F001300
5C007E133EEB03F8387FFFE04848C7FC00FCC8FCA45AA4EC0180EC03C0A2007CEB0780EC
1F00003C133E6C13F8380F03E03807FF80D801FCC7FC1A2277A023>I<151FED7FC0EDF0
E0020113F0EC03E3A2EC07C316E0EDC1C091380FC0005DA4141F92C7FCA45C143E90381F
FFFEA3D9007EC7FC147CA414FC5CA513015CA413035CA413075CA3130FA25CA3131F91C8
FCA35B133E1238EA7E3CA2EAFE7812FC485AEA78E0EA3FC0000FC9FC244582B418>I<14
3FECFF80903803E1E6903807C0FF90380F807FEB1F00133E017E133F49133EA24848137E
A24848137CA215FC12074913F8A21401A2D80FC013F0A21403120715E01407140F141F39
03E03FC00001137FEBF0FF38007FCF90381F0F801300141FA21500A25C143E1238007E13
7E5C00FE5B48485A387803E0387C0F80D81FFFC7FCEA07F820317CA023>I<EB0FC0EA03
FFA25CEA001FA391C8FCA25BA2133EA2137EA2137CA213FCA29038F83F80ECFFE03901FB
E0F09038FF80F8EC007849137C485A5B5BA2484813FC5D5BA2000F13015D1380A2001F13
035DEB0007EDC0C048ECC1E0020F13C0003E1481A2007E1483ED0380007C1407160000FC
140E151E48EB07F80070EB01F023357BB327>I<EB0180EB07E0A2130FEB07C0EB038090
C7FCABEA01F0EA03FCEA0F1E120E121C123C1238EA783E1270A2137EEAF07CEA60FCC65A
A212015BA212035BA2000713C0EBC1E0000F13C01381A21383EB038013071400130E131E
EA07F8EA01F013337AB118>I<EB0FC0EA01FF5A5CEA001FA391C7FCA25BA2133EA2137E
A2137CA213FCA2491378EC01FE0001EB078FEC0E0F9038F01C3F143800031370ECE03E90
38E1C01C9038E38000D807E7C7FC13EE5B13F8120F13FFEB9FC0EB83F0EA1F81EB80F813
00150C48141E151C123EA2007E143C1538127C157800FCEB787015E048EB3FC00070EB0F
8020357BB323>107 D<133FEA07FF5A13FEEA007EA3137CA213FCA213F8A21201A213F0
A21203A213E0A21207A213C0A2120FA21380A2121FA21300A25AA2123EA2127EA2127C13
18EAFC1C133CEAF838A21378137012F013F0EAF8E01279EA3FC0EA0F00103579B314>I<
2703C003F8137F3C0FF00FFE01FFC03C1E783C1F07C1E03C1C7CF00F8F01F03B3C3DE007
9E0026383FC001FC7FD97F805B007001005B5E137ED8F0FC90380FC00100E05FD860F814
8012000001021F130360491400A200034A13076049013E130FF081800007027EEC83C005
1F138049017C1403A2000F02FC1407053E130049495CEF1E0E001F01015D183C010049EB
0FF0000E6D48EB03E03A227AA03F>I<3903C007F0390FF01FFC391E787C1E391C7CF01F
393C3DE00F26383FC01380EB7F8000781300EA707EA2D8F0FC131F00E01500EA60F81200
00015C153E5BA20003147E157C4913FCEDF8180007153C0201133801C013F0A2000F1578
EDE070018014F016E0001FECE1C015E390C7EAFF00000E143E26227AA02B>I<14FCEB07
FF90381F07C090383E03E09038FC01F0EA01F83903F000F8485A5B120F484813FCA248C7
FCA214014814F8127EA2140300FE14F05AA2EC07E0A2007CEB0FC01580141FEC3F006C13
7E5C381F01F0380F83E03803FF80D800FCC7FC1E2278A027>I<011E137C90387F81FF90
39F3C387C09039E3EF03E03901E1FE01D9C1FC13F0EBC3F8000313F0018314F814E0EA07
871307000313C01200010F130316F01480A2011F130716E01400A249EB0FC0A2013EEB1F
80A2017EEB3F00017F133E5D5D9038FF81F09038FDC3E09038F8FF80027EC7FC000190C8
FCA25BA21203A25BA21207A25BB5FCA325307FA027>I<903803F01890380FF83890383E
1C7890387C0EF89038F807F0EA01F0EA03E000071303D80FC013E0A2EA1F801407D83F00
13C0A348130F007E1480A300FE131F481400A35C143E147E127C14FE495AEA3C03EA3E07
EA1F0E3807FCF8EA01F0C7FC13015CA313035CA21307A25C48B5FCA25C1D3078A023>I<
3903C00FC0390FF03FF0391E78F078391C7DE03C393C3FC0FC00381380EB7F00007814F8
D8707E13701500EAF0FC12E0EA60F812001201A25BA21203A25BA21207A25BA2120FA25B
A2121FA290C8FC120E1E227AA020>I<EB03F0EB1FFCEB3C1EEB780FEBF007EA01E0140F
0003131F13C0A2EBE00414007FEBFF8014E06C13F06C13F8EB7FFC1307EB00FE147E143E
123800FC133CA3147C00F013784813F0EAF001387803E0383C0F80381FFE00EA03F81822
7AA01F>I<1303EB0F80A3131FA21400A25BA2133EA2137EA2137C387FFFF8A2B5FC3800
F800A21201A25BA21203A25BA21207A25BA2120FA25B1460001F13F014E01300130114C0
1303001E1380EB07005BEA0F1EEA07F8EA01E015307AAE19>I<EA01F0D803FC1307D80F
1E5B000E5C121C123C00385CD8783E133E1270A2017E137ED8F07C137CEA60FCC65A15FC
00015C5BA2140100035C13E0166002031370EDE0F0D807C014E0A20003EB07E116C09038
E00FC1EC1FC3000190383FE3809038F071E73A007FE0FF0090381F803C24227AA029>I<
01F01338D803FC13FCEA0F1E120E121C123C0038147CEA783E0070143CA2137ED8F07C13
38EA60FCC65A1578000114705BA215F0000314E05BA2EC01C0A2EBC003158014071500EB
E00EA26C6C5A3800F878EB7FE0EB1F801E227AA023>I<13F0D803FC1307D80F1E130F00
0E141F121C123C0038143FD8783E133E1270A2017E137ED8F07C137CEA60FCC65A15FC00
0114F85BA21401000314F013E0A2140315E0EA07C0A20003130715C0EBE00F141F000113
3F9038F07F8038007FEFEB1F8FEB001F1500A25C003E133E007E137E147C5C007C5BEA70
01495A38380780D83C1FC7FCEA0FFCEA07F020317AA025>121 D<903807801C90381FE0
3C90383FF038017F13789038FFF8F03901F07CE0EBE01F3903C003C09038800780EC0F00
C7121E141C143C5C5C495AEB07C0495A011EC7FC5B5B4913704913F0000114E0485A3807
8001390FC003C0381FF80790383E0F80393C1FFF00127838700FFE38F007F838E001E01E
227CA01F>I E /Fu 75 124 df<EC1FE0ECFFFC903803F01E90390FC00780EB1F809039
3F000FC0017E131F5BA2485AED0F8092C7FCA9ED0FC0B7FCA33901F8001F150FB3A6486C
EB1FE0267FFFC1B5FCA328357FB42B>12 D<DA1FE013FF9126FFFC0713E0903B03F01E1F
80F0903B0FC0077E003CD91F805B90273F001FF8137E017E4A13FE495CA248485C030F14
7C95C7FCA9187EB912FEA33B01F8000FC000187EB3A6486C496C13FF297FFFC1FFFE0F13
F8A33D357FB440>14 D<003C13F0387E01F838FF03FCA2EB83FEA2EA7F81383D80F60001
1306A40003130EEB000CA248131C00061318000E1338000C1330001C13704813E0387001
C00060138017177EB326>34 D<14C01301EB0380EB0F00130E5B133C5B5BA2485A485AA2
12075B120F90C7FC5AA2121E123EA3123C127CA55AB0127CA5123C123EA3121E121FA27E
7F12077F1203A26C7E6C7EA213787F131C7F130FEB0380EB01C01300124A79B71E>40
D<12C07E1270123C121C7E120F6C7E6C7EA26C7E6C7EA27F1378137C133C133EA2131E13
1FA37F1480A5EB07C0B0EB0F80A514005BA3131E133EA2133C137C137813F85BA2485A48
5AA2485A48C7FC120E5A123C12705A5A124A7CB71E>I<123C127EB4FCA21380A2127F12
3D1201A412031300A25A1206120E120C121C5A5A126009177A8715>44
D<B512F0A514057F921A>I<123C127E12FFA4127E123C08087A8715>I<EB0FE0EB7FFCEB
F83E3903E00F803907C007C0EB8003000F14E0391F0001F0A24814F8A2003E1300007E14
FCA500FE14FEB2007E14FCA56CEB01F8A36C14F0A2390F8003E03907C007C0A23903E00F
803900F83E00EB7FFCEB0FE01F347DB126>48 D<13075B5B137FEA07FFB5FC13BFEAF83F
1200B3B3A2497E007FB51280A319327AB126>I<EB3FC0EBFFF0000313FC380F80FF391E
007F80001CEB3FC048EB1FE048130F15F00060130712FC6C14F87E1403A3007E1307123C
C7FC15F0A2140F15E0EC1FC0A2EC3F801500147E5C495A5C495A495A495A49C7FC133E13
3C4913185B485A48481330485A48C7FC001C1470001FB512F05A5AB612E0A31D327CB126
>I<EB1FE0EBFFFC4813FF3907E03F80390F001FC0001EEB0FE0001CEB07F0123F018013
F8140313C01380A2381F0007C7FC15F0A2EC0FE015C0141FEC3F80EC7E00EB01F8EB7FE0
14FCEB003FEC1FC0EC0FE0EC07F015F8140315FC140115FEA3127EB4FCA415FC48130312
780070EB07F86C14F0003C130F001FEB1FE0390FE03F800003B51200C613FCEB1FE01F34
7DB126>I<EC01C0A214031407A2140F141FA2143F147F146F14CF1301EB038F140F1307
130E130C131C13381330137013E013C0EA0180120313001206120E120C5A123812305A12
E0B71280A3C7380FC000A94A7E0107B51280A321337EB226>I<000C14C0380FC00F90B5
128015005C5C14F014C0D80C18C7FC90C8FCA9EB0FC0EB7FF8EBF07C380FC03F9038001F
80EC0FC0120E000CEB07E0A2C713F01403A215F8A41218127E12FEA315F0140712F80060
14E01270EC0FC06C131F003C14806CEB7F00380F80FE3807FFF8000113E038003F801D34
7CB126>I<14FE903807FF80011F13E090383F00F0017C13703901F801F8EBF003EA03E0
1207EA0FC0EC01F04848C7FCA248C8FCA35A127EEB07F0EB1FFC38FE381F9038700F8090
38E007C039FFC003E0018013F0EC01F8130015FC1400A24814FEA5127EA4127F6C14FCA2
6C1301018013F8000F14F0EBC0030007EB07E03903E00FC03901F81F806CB51200EB3FFC
EB0FE01F347DB126>I<1230123C003FB6FCA34814FEA215FC0070C71238006014301570
15E04814C01401EC0380C7EA07001406140E5C141814385CA25CA2495A1303A3495AA213
0FA3131F91C7FCA25BA55BA9131C20347CB126>I<EB0FE0EB7FFC90B5FC3903F01F8039
07C007C0390F0003E0000EEB01F0001E1300001C14F8003C1478A3123EA2003F14F86D13
F0EBC001D81FF013E09038F803C0390FFE07803907FF0F006C13DE6C13F87EEB3FFE8001
F713C0D803E313E0D8078013F0390F007FF8001E131F003EEB07FC003C1303481301EC00
7E12F848143EA2151EA37E153C1278007C14787E6C14F0390F8003E03907F01FC00001B5
120038007FFCEB1FE01F347DB126>I<EB0FE0EB7FF8EBFFFE3803F83F3907E00F80390F
C007C0D81F8013E0EC03F0EA3F0048EB01F8127EA200FE14FC1400A415FEA5007E1301A2
127F7E1403EA1F80000F13073807C00E3803E01C3801F03838007FF090381FC0FC90C7FC
1401A215F8A215F01403001F14E0383F800715C0140FEC1F809038003F00001C137E381F
01FC380FFFF0000313C0C690C7FC1F347DB126>I<123C127E12FFA4127E123C1200B012
3C127E12FFA4127E123C08207A9F15>I<123C127E12FFA4127E123C1200B0123C127E12
FE12FFA3127F123F1203A412071206A3120E120C121C1238123012701260082F7A9F15>
I<15E0A34A7EA24A7EA34A7EA3EC0DFE140CA2EC187FA34A6C7EA202707FEC601FA202E0
7FECC00FA2D901807F1507A249486C7EA301066D7EA2010E80010FB5FCA249800118C77E
A24981163FA2496E7EA3496E7EA20001821607487ED81FF04A7ED8FFFE49B512E0A33336
7DB53A>65 D<B7FC16E016F83A03FC0003FE0001EC00FFEE7F80EE3FC0161F17E0160F17
F0A617E0161F17C0EE3F80EE7F0016FEED03FC90B612F05E9039FC0007FCED00FEEE3F80
EE1FC0EE0FE017F0160717F8160317FCA617F81607A2EE0FF0EE1FE0163FEE7FC0000391
3803FF00B75A16F816C02E337DB236>I<DA03FE130C91393FFF801C91B512E0903A03FE
01F83C903A0FF0003C7CD91FC0EB0EFCD97F80130701FEC7120348481401000315005B48
48157C485A173C485A171C123F5B007F160CA390C9FC481600AB7E6D150CA3123F7F001F
161C17186C7E17386C6C15306C6C15706D15E012016C6CEC01C0D97F80EB0380D91FC0EB
0F00D90FF0131ED903FE13FC0100B512F0023F13C0DA03FEC7FC2E377CB437>I<B77E16
F016FE3A01FE0001FF00009138003FC0EE0FE0707E707E707E707E177E177FEF3F80A2EF
1FC0A3EF0FE0A418F0AA18E0A3171F18C0A21880173F18005F17FE5F4C5AEE07F04C5AEE
3FC000014AB45AB748C7FC16F8168034337EB23B>I<B812C0A3D803FCC7127F0001150F
EE03E01601A21600A21760A403061330A41700150EA2151E157E90B512FEA39038FC007E
151E150EA21506170CA3171892C7FCA41738A21770A217F01601160316070003157FB812
E0A32E337DB234>I<B81280A3D803FCC7FC0001151FEE07C01603A21601A21600A41760
150CA31700A2151CA2153C15FC90B5FCA3EBFC00153C151CA2150CA592C8FCAB487EB512
FEA32B337DB232>I<DA03FE130C91393FFF801C91B512E0903A03FE01F83C903A0FF000
3C7CD91FC0EB0EFCD97F80130701FEC7120348481401000315005B4848157C485A173C48
5A171C123F5B007F160CA390C9FC4893C7FCAA0303B512E07E7F92390003FE00705A123F
7F121FA26C7E7F12076C7E7F6C6C14036C7E6D6C1307D91FC0EB0E7CD90FF0EB1C3CD903
FEEBF81C0100B5EAF00C023F01C0C7FCDA03FEC8FC33377CB43C>I<B5D8FE03B512F8A3
000190C73807FC006C486E5AB390B7FCA349C71203B3A3486C4A7EB5D8FE03B512F8A335
337EB23A>I<B512FEA3000113006C5AB3B3A7487EB512FEA317337EB21C>I<017FB5FCA3
9038003FE0EC1FC0B3B1127EB4FCA4EC3F805A0060140000705B6C13FE6C485A380F03F0
3803FFC0C690C7FC20357DB227>I<B500FE903807FFF8A3000190C7000113006C48EC00
FC17F04C5A4C5A4CC7FC160E5E5E5E5E4B5A4B5A4BC8FC150E5D5D15F84A7E14034A7EEC
0EFF5C4A6C7E4A6C7EECE01FD9FFC07F4A6C7E4A6C7E5B6F7E6F7EA26F7E707EA2707E70
7E160F83707E707EA283486C913807FF80B500FE013F13FCA336337EB23C>I<B512FEA3
D803FEC9FC6C5AB3A9EE0180A416031700A45EA25E5E5E5E16FE00031407B7FCA329337D
B230>I<D8FFFC923801FFF86D5DA20003EFFE00D801BFED06FCA3D99F80140CA2D98FC0
1418A3D987E01430A2D983F01460A3D981F814C0A3D980FCEB0180A2027EEB0300A36E13
06A26E6C5AA36E6C5AA36E6C5AA26E6C5AA36E6C5AA3913800FD80A2037FC7FCA3486C13
3ED80FF04B7EB5011C90387FFFF8A33D337CB246>I<D8FFFE91381FFFF87F80C6030013
006E143CD9DFE01418EBCFF0A2EBC7F8EBC3FCA2EBC1FEEBC0FF6E7EA26E7E6E7EA26E7E
6E7E6E7EA26E7E6E7EA2ED7F80ED3FC0ED1FE0A2ED0FF0ED07F8A2ED03FCED01FEED00FF
A2EE7F98EE3FD8A2EE1FF8160F1607A216031601A2486C1400D807F81578B500C01438A2
171835337EB23A>I<EC07FC91387FFFC0903901FC07F0903907E000FCD90F80133E013F
C76C7E017E6E7E496E7E48486E7E48486E7EA248486E7E000F8249157E001F167FA24848
ED3F80A2007F17C0A290C9121FA24817E0AB6C17C06D153FA3003F17806D157FA2001F17
006D5D000F5E6C6C4A5AA26C6C4A5A00015E6C6C4A5A017E4A5A6D4A5AD91FC0017FC7FC
D907E013FC903901FC07F09039007FFFC0DA07FCC8FC33377CB43C>I<B612FEEDFFC016
F03A03FC0007FC0001EC00FE167FEE3F80EE1FC017E0160FA217F0A617E0A2EE1FC0A2EE
3F80EE7F0016FEED07F890B65A168001FCC9FCB3A2487EB512F8A32C337DB234>I<EC07
FC91387FFFC0903901FC07F0903907E000FC4948137E013FC7EA1F80017E6E7E496E7E48
486E7E00038249140148486E7E000F8249157E001F167FA24848ED3F80A2007F17C0A390
C9121F4817E0AB6C17C0A26D153FA2003F1780A26D157F001F1700A2270FE001F013FE00
07D907FC5B9039F00E0E013B03F80C0703F8000190391C0383F03B00FC180187E0017EEC
CFC0013FECDF8090271F9C00FFC7FCD907EC13FC902701FE07F013609038007FFF913807
FC7091C7007813E0A2EE7C01EE7E0393387F07C0EE3FFFA21880821800705A705AEE01F0
33447CB43C>I<B612FCEDFF8016F03A01FE0007FC0000EC01FEED007F707E707E83160F
83A65FA24C5AA24C5A047EC7FC4B5AED0FF090B612C093C8FC9039FE001FC0ED07F06F7E
6F7E150082167E167FA583A5180C17C0A2043F131C486C1618B500FEEB1FE0040F133893
3807F070C93801FFE09338003F8036357EB239>I<90381FE00390387FFC0748B5FC3907
F01FCF390F8003FF48C7FC003E80814880A200788000F880A46C80A27E92C7FC127F13C0
EA3FF013FF6C13F06C13FF6C14C06C14F0C680013F7F01037F9038003FFF140302001380
157F153FED1FC0150F12C0A21507A37EA26CEC0F80A26C15006C5C6C143E6C147E01C05B
39F1FC03F800E0B512E0011F138026C003FEC7FC22377CB42B>I<007FB712FEA3903980
07F001D87C00EC003E0078161E0070160EA20060160600E01607A3481603A6C71500B3AB
4A7E011FB512FCA330337DB237>I<B500FE90381FFFF8A3000190C813006C48153C1718
B3AF1738017F1530A217706D6C1460011F15E06E495A010F14036D6C495A6D6C49C7FCD9
01FC131E6DB413FC91383FFFF0020F13C0020190C8FC35357EB23A>I<B500F0903803FF
F8A3D807FEC8EA7FC06C48ED1F000001161E6D151C00001618A26D15386D1530A26D6C5C
A26E14E0011F5DA26D6C495AA28001074AC7FCA26D6C1306A28001015CA26E131C010014
18806E5BA2ED8070023F1360A26E6C5AA215E1020F5BA2DA07F3C8FCA215FBEC03FEA36E
5AA26E5AA31570A235357EB23A>I<B5D8F007B539800FFFF0A3000390C7273FF0000113
00D801FC6E48EB007C1A386D140F00001930836D020715706D1860A26E496C14E0013F60
A26ED919FC1301011F60A26ED930FE1303010F95C7FCA26ED9607F5B01071706A26E9039
C03F800E0103170CA2913BFC01801FC01C01011718A2913BFE03000FE03801001730A2DA
FF06EB07F0027F5EA2038CEB03F8023F5EA203D8EB01FC021FEDFD80A203F0EB00FF020F
93C8FCA24B800207157EA24B143E0203153CA24B141C020115184C357FB24F>I<B500F8
ECFFFEA300030180EC3FE06C90C8EA1F806CEE0E006D6C5C6D6C141817386D6C14305F6D
6C14E06D6C5C16016D6C5C6D6C49C7FC5E6D6C13065E91387F801C91383FC01816389138
1FE0306E6C5A16E06E6C5AEDF980EC03FF6E90C8FC5D1400B14A7E91B512FCA337337FB2
3A>89 D<003FB612FCA39039F80007F813C090C7EA0FF0003EEC1FE0123C0038EC3FC000
78EC7F801270EDFF004A5AA20060495AA24A5A4A5AC7FC4A5A4A5AA24A5A4AC7FCA2495A
495AA2495A495AA24948130C495AA2495A49C7FCA24848141CA2485A485A1638485A4848
147816F84848130148481307153FB7FCA326337CB22F>I<EAFFF0A4EAF000B3B3B3ADEA
FFF0A40C4B79B715>I<0003130C48131C000E133848137000181360003813E0003013C0
EA700100601380A2EAE00300C01300A400DE137800FF13FCEB83FEA2EA7F81A2383F00FC
001E1378171774B326>I<EAFFF0A41200B3B3B3AD12FFA40C4B7FB715>I<EB7F803803FF
F0380F80FC381C003E003F133F6D6C7E6E7EA26E7EEA1F00C7FCA4EB01FF131FEBFF8738
03FC07EA0FF0EA1FC0EA3F80127F13004815C05AA3140FA26C131F6C133B3A3F8071F180
391FC1E1FF2607FFC013003900FE003C22237DA126>97 D<EA03F012FFA312071203AEEC
3F80ECFFE09038F3C0F89038F7007E01FE7F49EB1F8049EB0FC05BED07E016F0A2150316
F8AA16F0150716E0A2ED0FC07F6DEB1F8001ECEB3F0001CF137C90388381F8903801FFE0
C76CC7FC25357EB32B>I<EB07F8EB3FFF9038FC07C03901F000E03903E003F03807C007
120FEA1F80123F90380003E04890C7FCA2127E12FEAA127FA26C14187F001F14386D1330
000F14706C6C13E03903F001C03900FC0F8090383FFE00EB07F01D237EA122>I<153FEC
0FFFA3EC007F81AEEB07F0EB3FFCEBFC0F3901F003BF3907E001FF48487E48487F8148C7
FCA25A127E12FEAA127E127FA27E6C6C5BA26C6C5B6C6C4813803A03F007BFFC3900F81E
3FEB3FFCD90FE0130026357DB32B>I<EB0FE0EB7FFCEBF83F3903F00F80D807E013C039
0FC007E0381F800315F0EA3F0014014814F8127EA212FEA2B6FCA248C8FCA5127E127FA2
6C1418A26C6C1338000F14306D13706C6C13E03901F003C03900FC0F00EB3FFEEB07F01D
237EA122>I<EB01FCEB07FF90381F078090383E0FC0EB7C1F13FCEA01F8A20003EB0700
49C7FCACB512F0A3D803F0C7FCB3A7487E387FFFE0A31A357FB417>I<151F90391FC07F
809039FFF8E3C03901F07FC73907E03F033A0FC01F83809039800F8000001F80EB000748
80A66C5CEB800F000F5CEBC01F6C6C48C7FCEBF07C380EFFF8380C1FC0001CC9FCA3121E
A2121F380FFFFEECFFC06C14F06C14FC4880381F0001003EEB007F4880ED1F8048140FA5
6C141F007C15006C143E6C5C390FC001F83903F007E0C6B51280D91FFCC7FC22337EA126
>I<EA03F012FFA312071203AEEC1FC0EC7FF09038F1E0FC9038F3807C9038F7007E13FE
497FA25BA25BB3486CEB7F80B538C7FFFCA326347EB32B>I<EA0780EA0FC0EA1FE0A4EA
0FC0EA0780C7FCAAEA07E012FFA3120F1207B3A6EA0FF0B5FCA310337EB215>I<EB03C0
EB07E0EB0FF0A4EB07E0EB03C090C7FCAAEB03F013FFA313071303B3B01238127C00FE13
E0130714C0130F007C138038381F00EA1FFCEA07F0144384B217>I<EA03F012FFA31207
1203AF913803FFE0A36E1300EC00F8EC01E05D4A5A020FC7FC141C5C5C14F0EBF3F8EBF7
FC13FEEBFC7EEBF87F496C7E141F6E7E8114076E7E8114016E7E81486CEBFF80B500C313
F0A324347EB329>I<EA07E012FFA3120F1207B3B3A7EA0FF0B5FCA310347EB315>I<2703
F01FE013FF00FF90267FF80313C0903BF1E07C0F03E0903BF3803E1C01F02807F7003F38
7FD803FE1470496D486C7EA2495CA2495CB3486C496C487EB53BC7FFFE3FFFF0A33C217E
A041>I<3903F01FC000FFEB7FF09038F1E0FC9038F3807C3907F7007EEA03FE497FA25B
A25BB3486CEB7F80B538C7FFFCA326217EA02B>I<EB07F0EB3FFE9038FC1F803901F007
C03903C001E000078048486C7E48C7127CA248147E003E143E007E143FA300FE1580A800
7E1500A36C147EA26C147C6D13FC6C6C485A00075C3903F007E03900FC1F80D93FFEC7FC
EB07F021237EA126>I<3903F03F8000FFEBFFE09038F3C0F89038F7007ED807FE7F6C48
EB1F804914C049130F16E0ED07F0A3ED03F8A9150716F0A216E0150F16C06D131F6DEB3F
80160001FF13FC9038F381F89038F1FFE0D9F07FC7FC91C8FCAA487EB512C0A325307EA0
2B>I<903807F00390383FFC07EBFC0F3901F8038F3807E001000F14DF48486CB4FC497F
123F90C77E5AA25A5AA9127FA36C6C5B121F6D5B000F5B3907E003BF3903F0073F3800F8
1EEB3FF8EB0FE090C7FCAAED7F8091380FFFFCA326307DA029>I<3803E07C38FFE1FF90
38E38F809038E71FC0EA07EEEA03ECA29038FC0F8049C7FCA35BB2487EB512E0A31A217F
A01E>I<EBFF06000713CE381F00FE003C133E48131E140E5A1406A27EA200FE90C7FC6C
7EEA7FFC383FFFC014F0000F7F6C7FC67FEB0FFF1300EC3F8000C0131F140F6C1307A37E
15006C5B6C130E6C5B38F7807838E1FFE038C07F8019237EA11E>I<1330A51370A313F0
A21201A212031207381FFFFEB5FCA23803F000AF1403A814073801F806A23800FC0EEB7E
1CEB1FF8EB07E0182F7FAD1E>I<D803F0133F00FFEB0FFFA30007EB007F000380B35DA3
5D12016D4813800000903803BFFC90387E073FEB1FFED907F8130026227EA02B>I<B5EB
FFF0A3D80FF0EB3F800007EC1F000003140E150C6D131C00011418A26C6C5BA26D137001
7E1360137F6D5BA290381F8180A214C3010F90C7FCA2EB07E6A214FE6D5AA26D5AA36D5A
A2146024217E9F29>I<B53A1FFF81FFF0A33C07F801FC003F8001F049EB1E0000030100
141C816C6C017C1318A26D017E1338000002FE1330A290267E01FF5B159F168090263F03
0F5BA216C0903A1F8607C180A202C613E390260FCC0390C7FCA2D907FC13F6ECF80116FE
6D486C5AA36D481378A36D48133034217F9F37>I<B53801FFF8A32603FE0013806C48EB
7C0000001478017E1370017F5B90383F81C090381F8380D90FC3C7FCEB07E614FE6D5A6D
5A6D7E80805B9038039F809038071FC09038060FE0EB0C0790381C03F0496C7E01707FEB
F000000180000FECFF8026FFFC0313FCA326207F9F29>I<3A7FFF807FF8A33A07F8001F
C00003EC0F800001EC070015066C6C5BA26D131C017E1318A26D5BA2EC8070011F1360EC
C0E0010F5BA2903807E180A214F3010390C7FC14FBEB01FEA26D5AA31478A21430A25CA2
14E05CA2495A1278D8FC03C8FCA21306130EEA701CEA7838EA1FF0EA0FC025307F9F29>
I<003FB512F0A2EB000F003C14E00038EB1FC00030EB3F800070137F1500006013FE495A
13035CC6485A495AA2495A495A49C7FC153013FE485A12035B48481370485A001F146049
13E0485A387F000348130F90B5FCA21C207E9F22>I<B712F8A22502809426>I
E /Fv 7 117 df<ED1F80A24B7EA24B7EA34B7EA24A7FA34A7FA24A7F15CFA2020F7F15
87021F801503023F80EC3E01A2027E80EC7C0002FC804A137FA20101814A133F0103814A
131FA249B67EA24981A290271F8000077F91C77EA24982013E80017E82017C80A201FC82
49157FB500F0013FB512F0A43C347DB343>65 D<EB7FFE0003B512E04814F8390FF00FFC
391FF803FF806E138016C0157F6C5A6C5AEA0180C8FCEC7FFF010FB5FC90B6FC0003EBF0
7F000F1300EA1FF8485A485A485A5BA315FF7F007F5B6D4813E03A3FF80FBFFF000FB512
1F0003EBFC0F39007FE00728217EA02B>97 D<EA01FC12FFA4120F1207ADEC07FC91387F
FF8001FDB512E09039FFF00FF89138C007FC91380003FE496D7E496D1380A217C0167FA2
17E0A917C0A216FF1780A26D4913006D495A9138C007FC9039F3F01FF801E1B512E0D9C0
7F13809026800FF8C7FC2B347EB331>I<903807FF80013F13F090B512FC3903FE01FE48
48487EEA0FF8EA1FF0EA3FE0A2007F6D5A496C5A153000FF91C7FCA9127F7FA2003FEC07
807F6C6C130F000FEC1F00D807FE133E3903FF80FCC6EBFFF8013F13E0010790C7FC2121
7DA027>I<3901F81F8000FFEB7FF0ECFFF89038F9E3FC9038FBC7FE380FFF876C1307A2
13FEEC03FCEC01F8EC0060491300B1B512F0A41F217EA024>114
D<9038FFE1C0000713FF5A383F803F387E000F14075A14037EA26C6CC7FC13FCEBFFE06C
13FC806CEBFF80000F14C06C14E0C6FC010F13F0EB007F140F00F0130714037EA26C14E0
6C13076CEB0FC09038C01F8090B5120000F913FC38E03FE01C217DA023>I<133CA5137C
A313FCA21201A212031207001FB51280B6FCA3D807FCC7FCB0EC03C0A79038FE07801203
3901FF0F006C13FEEB3FFCEB0FF01A2F7EAE22>I E /Fw 20 118
df<EA07C0EA0FF0EA1FF8123F13FCA213FEA2121F120F1207EA007E13FEA213FC1201EA
03F81207EA0FF0EA7FE012FF13C013005A12780F196E8A33>44 D<121FEA3F80EA7FC0EA
FFE0A5EA7FC0EA3F80EA1F000B0B6C8A33>46 D<EC07F8EC3FFF91B57E010314E0010F80
498090383FFC0F90397FE003FC9038FF80014890C77ED803FC147E49EB7E7F0007903801
FFBFD9F00713FF4848481480495A001F5B018013C3003FEB7F810100010013C002FE137F
4849133FEA7E014A131FA212FEEAFC034A130FA96E131FD8FE011580127EA26E133FD87F
0015006C6D5B027F13FE01801381001F90383FC3FC01C013FF000F6D5B6D6C5B6C6C6C5B
D9F80113800003D9007EC7FC6D9038000F806CB4EC1FC06C6D133FD97FE013FF90263FFC
0713806DB612006D5C010314F801005C023F1380DA07FCC7FC2A3F7CBD33>64
D<EB1FFC90B57E000314E048804814FC48809038F007FFEBE0016E7F153F6C48806C4813
1FC87F150FA5EC0FFF49B5FC131F137F48B6FC0007140F4813C0381FFC00EA3FF0EA7FC0
5B48C7FC5AA56C141F7E6D137FD83FE0497ED9F807EBFFF06CB712F87E6C14F36C14C1C6
9138003FF0D91FF090C7FC2D2E7BAC33>97 D<EA3FFC487E12FFA2127F123F1200ABEC01
FE91380FFFC04A13F0027F7F91B512FE90B7FCECFE07DAF800138002E0EB7FC04AEB3FE0
4A131FEE0FF091C7FC16074915F81603A217FC1601A9160317F8A26D140717F06E130F17
E06E131FEE3FC06E137F9139F801FF80DAFE07130091B55A495C6E5BD97E3F13E0D93C0F
138090260003FEC7FC2E3E7FBC33>I<ECFFF0010713FE011FEBFF804914C04914E048B6
12F048EBC01F9038FE000F485A485A4848EB07E049EB03C0484890C7FC5BA2127F90C9FC
A25A5AA97E7EA27F003FEC01F06DEB03F86C7E6D13076C6C14F06C6C130F01FFEB1FE06C
EBE07F6C90B512C06C1580013F14006D13FC01075B010013C0252E79AC33>I<ED7FF84B
7E5CA280157F1501ABEB01FF010713C1011F13F1017F13F990B6FC5A4813813907FE003F
D80FF8131F49130F48481307491303123F491301127F90C7FCA25A5AA97E7E15037F123F
6D1307A26C6C130F6D131F6C6C133F6C6C137F2603FF81B512F091B612F8C602FD13FC6D
13F96D01E113F8010F018013F0D901FEC8FC2E3E7DBC33>I<ECFF80010713F0011F13FC
497F90B6FC48158048018013C03A07FE003FE001F8EB0FF048481307484814F849130300
3F15FC491301127F90C7FC16FE15005A5AB7FCA516FC48C9FC7E7EA36C7E167C6C6C14FE
7F6C7E6D13016C6CEB03FC6CB4130F6C9038C03FF86C90B512F06D14E06D14C0010F1400
010313FC9038007FE0272E7BAC33>I<ED3FE0913801FFFC020713FE141F4A13FF5CECFF
C015004948137E4A133C010314005CA8003FB612F84815FCB7FCA36C15F8260003F8C7FC
B3AD003FB612804815C0A46C1580283E7DBD33>I<D901FEEB1FE0903A0FFFC0FFF0013F
01F313F84990B512FC90B7FC5A48010313E12607FC00EB80F849017F1360484890383FC0
0049131FA2001F8149130FA66D131F000F5DA26D133F6C6C495A6D13FF2603FF0390C7FC
ECFFFE485C5D5DD80FCF13C0D981FEC8FC0180C9FCA27FA26C7E7F90B512FC6CECFFC06C
15F0000715FC4815FF4816809038E0000748489038007FC090C8EA1FE048150F007E1507
00FE16F0481503A56C1507007E16E0007F150F6C6CEC1FC001E0147FD81FF8903801FF80
270FFF801F13006C90B55A6C5DC615F0013F14C0010F91C7FC010013F02E447DAB33>I<
EA3FFC487E12FFA2127F123F1200AB4AB4FC020713C0021F13F0027F7F91B5FC90B67EED
07FEECF801ECF0004A7F4A7F5CA291C7FCA35BB3A43B3FFFF80FFFFC486D4813FEB56C48
13FFA26C496C13FE6C496C13FC303D7FBC33>I<14E0EB03F8A2497EA36D5AA2EB00E091
C8FCAA383FFFF8487FA47EEA0001B3AD007FB612C0B712E016F0A216E06C15C0243E78BD
33>I<1570EC01FCA2EC03FEA3EC01FCA2EC00701500AA90383FFFFC4913FE90B5FCA27F
7F90C7FCB3B3A9140115FCA21218007EEB03F81407B414F0140F9038803FE090B512C06C
14806C14006C5B6C13F8000113E01F557BBD33>I<02FC137E3B7FC3FF01FF80D8FFEF01
877F90B500CF7F15DF92B57E6C010F13872607FE07130301FC01FE7F9039F803FC01A201
F013F8A401E013F0B3A53C7FFE0FFF07FF80B548018F13C0A46C486C01071380322C80AB
33>109 D<4AB4FC263FFC0713C0267FFE1F13F000FF017F7F91B5FC6CB67E6CEC07FEC6
EBF801ECF0004A7F4A7F5CA291C7FCA35BB3A43B3FFFF80FFFFC486D4813FEB56C4813FF
A26C496C13FE6C496C13FC302C7FAB33>I<EB01FE90380FFFC0013F13F0497F90B57E48
8048EB03FF2607FC0013804848EB7FC049133F4848EB1FE049130F4848EB07F0A2007F15
F890C71203A300FEEC01FCAA6C14036C15F8A26D1307003F15F06D130FA26C6CEB1FE06D
133F6C6CEB7FC06C6CEBFF802603FF0313006CEBFFFE6C5C6D5B6D5B010F13C0D901FEC7
FC262E7AAC33>I<ED03FE3B7FFF801FFF80B5D8C07F13E002C1B5FC02C314F014C76C90
38CFFE0F39001FDFF09139FFC007E092388003C092C8FC5C5C5CA25CA25CA35CB2007FB5
12FEB7FCA46C5C2C2C7DAB33>114 D<90381FFE0F90B5EA8F80000314FF120F5A5AEBF0
07387F800190C7FC00FE147F5A153FA37E007FEC1F0001C090C7FCEA3FF8EBFFC06C13FF
6C14E0000314F8C680011F13FF01001480020713C0EC007FED1FE0007C140F00FEEC07F0
1503A27EA27F15076D14E06D130F6DEB3FC09038FE01FF90B61280160000FD5C00FC14F8
D8F83F13E0D8780790C7FC242E79AC33>I<EB03C0497E130FAA003FB612FC4881B7FCA3
6C5D26000FE0C8FCB3A3161FEE3F80A5167F6E140001075C6E5A9138FE07FE6DB55A6D5C
6D5C6E5B021F1380DA07FCC7FC29387EB633>I<D83FFCEB1FFE486C497E00FF5CA2007F
80003F800000EC007FB3A75EA25DA26D5B90387F800FDAE03F13FC6DB612FE17FF6D806D
01FE13FE01039038F83FFC010001C0C7FC302C7FAA33>I E /Fx
2 104 df<ED0FE015FF913803FC00EC0FE0EC3FC04A5A4AC7FC5C495AA2495AB3AD495A
A2495A131F495A495A01FEC8FCEA07F8EAFFE0A2EA07F8EA00FEEB7F806D7E6D7E130F6D
7EA26D7EB3AD6D7EA26D7E806E7E6E7EEC0FE0EC03FC913800FFE0150F236479CA32>
102 D<12FEEAFFE0EA07F8EA00FEEB7F806D7E6D7E130F6D7EA26D7EB3AD6D7EA26D7E80
6E7E6E7EEC0FE0EC03FC913800FFE0A2913803FC00EC0FE0EC3FC04A5A4AC7FC5C495AA2
495AB3AD495AA2495A131F495A495A01FEC8FCEA07F8EAFFE048C9FC236479CA32>I
E /Fy 40 122 df<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A31201
1380120313005A1206120E5A5A5A12600B1D78891B>44 D<B612C0A61A067F9721>I<12
1EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A78891B>I<14FF010713E090381F81F89038
3E007C01FC133F4848EB1F8049130F4848EB07C04848EB03E0A2000F15F0491301001F15
F8A2003F15FCA390C8FC4815FEA54815FFB3A46C15FEA56D1301003F15FCA3001F15F8A2
6C6CEB03F0A36C6CEB07E0000315C06D130F6C6CEB1F806C6CEB3F00013E137C90381F81
F8903807FFE0010090C7FC28447CC131>48 D<49B4FC010F13E0013F13FC9038FE01FE3A
01F0007F80D803C0EB3FC048C7EA1FE0120EED0FF0EA0FE0486C14F8A215077F5BA26C48
130FEA03C0C813F0A3ED1FE0A2ED3FC01680ED7F0015FE4A5AEC03F0EC1FC0D90FFFC7FC
15F090380001FCEC007FED3F80ED1FC0ED0FE016F0ED07F816FC150316FEA2150116FFA3
121EEA7F80487EA416FE491303A2007EC713FC00701407003015F80038140F6C15F06CEC
1FE06C6CEB3FC0D803E0EB7F803A01FE01FE0039007FFFF8010F13E0010190C7FC28447C
C131>51 D<ED0380A21507150FA2151F153FA2157F15FFA25CEC03BF153F14071406140C
141C141814301470146014C013011480EB03005B13065B131C13185B1370136013E0485A
5B120390C7FC1206120E120C5A123812305A12E0B812C0A3C8383F8000ADEDFFE0027FEB
FFC0A32A437DC231>I<000615C0D807C0130701FCEB7F8090B612005D5D5D15E0158026
063FFCC7FC90C9FCAE14FF010713C090381F01F090383800FC01F0137ED807C07F49EB1F
8016C090C7120F000615E0C8EA07F0A316F81503A216FCA5123E127F487EA416F890C712
075A006015F0A20070140F003015E00038EC1FC07E001EEC3F806CEC7F006C6C13FE6C6C
485A3901F807F039007FFFE0011F90C7FCEB07F826447BC131>I<121CA2EA1F8090B712
C0A3481680A217005E0038C8120C0030151C00705D0060153016705E5E4814014B5A4BC7
FCC81206150E5D151815385D156015E04A5AA24A5A140792C8FC5CA25C141E143EA2147E
147CA214FCA21301A3495AA41307A6130FAA6D5AEB01C02A457BC231>55
D<14FF010713E0011F13F890387F00FE01FC133FD801F0EB1F804848EB0FC049EB07E000
07EC03F048481301A290C713F8481400A47FA26D130116F07F6C6CEB03E013FC6C6CEB07
C09039FF800F806C9038C01F006CEBF03EECF87839007FFEF090383FFFC07F01077F6D13
F8497F90381E7FFFD97C1F1380496C13C02601E00313E048486C13F000079038007FF848
48EB3FFC48C7120F003EEC07FE150148140016FF167F48153FA2161FA56C151E007C153E
A2007E153C003E157C6C15F86DEB01F06C6CEB03E06C6CEB07C0D803F8EB1F80C6B4EBFF
0090383FFFFC010F13F00101138028447CC131>I<14FF010713E0011F13F890387F80FC
9038FC007E48487F4848EB1F804848EB0FC0000FEC07E0485AED03F0485A16F8007F1401
90C713FCA25AA216FE1500A516FFA46C5CA36C7E5D121F7F000F5C6C6C1306150E6C6C5B
6C6C5BD8007C5B90383F01E090390FFF80FE903801FE0090C8FC150116FCA4ED03F8A216
F0D80F801307486C14E0486C130F16C0ED1F80A249EB3F0049137E001EC75A001C495A00
0F495A3907E01FE06CB51280C649C7FCEB1FF028447CC131>I<16C04B7EA34B7EA34B7E
A34B7EA3ED19FEA3ED30FFA203707FED607FA203E07FEDC03FA2020180ED801FA2DA0300
7F160FA20206801607A24A6D7EA34A6D7EA34A6D7EA20270810260147FA202E08191B7FC
A249820280C7121FA249C87F170FA20106821707A2496F7EA3496F7EA3496F7EA2017883
13F8486C83D80FFF03037FB500E0027FEBFFC0A342477DC649>65
D<B8FC17E017FC00019039C00003FF6C6C4801007FEF3FC0717E717E717E841703841701
84A760A21703601707604D5A4D5AEF7FC04DC7FCEE03FEEE3FF091B65A17FC0280C7B47E
EF1FC0EF0FF0717E717E717E717E1980187F19C0A2183F19E0A8F07FC0A2198018FF4D13
00A24D5AEF0FFC4D5AEF7FE048486C903803FFC0B9C7FC17FC17C03B447CC345>I<DB0F
FE146092B500C013E0020314F0913A0FFC01FC0191393FC0003E02FFC7EA0F83D903FCEC
03C74948EC01E74948EC00FF4948157F4948153F4948151F49C9120F485A491607120348
481603A248481601A248481600A2123FA2491760127FA31900485AAE6C7EA21960A2123F
7FA2001F18E07F000F18C0A26C6C160119806C6C160312016DEE07006C6C16066D6C150E
6D6C5D6D6C5D6D6C15786D6C5D6D6C4A5AD900FFEC0780DA3FC0011FC7FCDA0FFC13FC02
03B512F0020014C0DB0FFEC8FC3B487BC546>I<B8FC17F017FC00019039C00007FF6C49
9038007FC0017FED1FE0EF07F0EF03FC717E717E84727E727E727EA2727E85180385A218
0185A38584A31A80AD1A00A36061A361180361180761180F614E5A183F614EC7FC18FEEF
03FC4D5AEF1FE001FFED7FC0486DD907FFC8FCB812FC17F094C9FC41447CC34B>I<DB0F
FE146092B500C013E0020314F0913A0FFC01FC0191393FC0003E02FFC7EA0F83D903FCEC
03C74948EC01E74948EC00FF4948157F4948153F4948151F49C9120F485A491607120348
481603A248481601A248481600A2123FA2491760127FA396C7FC485AAD4CB612C06C7EA2
93C7387FF000725A003F171F7FA2121F7F120FA26C7EA26C7E6C7EA26C7E6D7E6D6C153F
6D7E6D6C157F6D6C15E7D903FEEC01C7D900FFEC0383DA3FE0EB0F01DA0FFCEBFE000203
B500F81360020002E090C7FCDB0FFEC9FC42487BC54D>71 D<B56C933807FFFC6E5EA200
01F1FE0026006FE0EE1BF8A3D967F01633A2D963F81663A3D961FC16C3A3D960FEED0183
A2027FED0303A36E6C1406A36E6C140CA26E6C1418A36E6C1430A36E6C1460A26E6C14C0
A36E6CEB0180A3037FEB0300A292383F8006A36F6C5AA36F6C5AA26F6C5AA36F6C5AA36F
6C5AA26FB45AA370C7FC13F0A2486C143ED80FFFEF0FFEB500F0011C0107B512FCA34E44
7BC359>77 D<ED1FFC4AB512C0913907F007F091391F8000FC027EC7123FD901F8EC0FC0
49486E7E49486E7E49486E7E49486E7E49C9127E017E8201FE834848707E4848707EA248
48707EA2000F84491603001F84A24848707EA3007F84A24982A300FF1980AD6C6C4C1300
A4003F606D1603A2001F60A26C6C4C5AA26C6C4C5AA20003606D161F6C6C4C5A00006001
7F4CC7FC6E5D013F5E6D6C4A5AD907E0EC03F06D6C4A5AD901FCEC1FC0D9007E4AC8FCDA
1F8013FC913907F007F00201B512C09126001FFCC9FC41487BC54C>79
D<B712E016FF17C000019039C0003FF86C6C48EB03FCEE00FF717E717E717E717E717EA2
84170384A760A21707604D5AA24D5A4D5A4DC8FCEE01FEEE07F8EE3FE091B6C9FC16FC91
3980007F80EE0FE0707EEE03FC707E160083717EA2717EA784A71A6084171FA21AE0716C
13C02601FFE002071301B600C01680943801FC03943900FE0700CBEA3FFEF007F843467C
C348>82 D<49B41303010FEBE007013F13F89039FE00FE0FD801F8131FD807E0EB079F49
EB03DF48486DB4FC48C8FC4881003E81127E82127C00FC81A282A37E82A27EA26C6C91C7
FC7F7FEA3FF813FE381FFFE06C13FE6CEBFFE06C14FC6C14FF6C15C0013F14F0010F8001
0180D9001F7F14019138001FFF03031380816F13C0167F163F161F17E000C0150FA31607
A37EA36C16C0160F7E17806C151F6C16006C5D6D147ED8FBC05CD8F9F0495AD8F07C495A
90393FC00FE0D8E00FB51280010149C7FC39C0003FF02B487BC536>I<B600C0010FB5FC
A3000101E0C813F026007F80ED1F80F00F00A21806B3B3A7180E6D6C150CA2181C131F6E
1518010F163818306D6C1570606D6C14016D6C5D6D6CEC0780027F4AC7FC6E6C131EDA1F
E0137C913907FC03F00201B55A6E6C1380DB07FCC8FC40467CC349>85
D<B60107B500F890380FFFFEA3000301E0D9001F90C813F06C0180DA0FFCED3FC091C86C
48ED1F006C871C0E6D6C6E7E1C0CA26D6C6F5DA36EDA06FF1538011F1A30A26E020E6D14
70010FDB0C7F1560A26E021C7F0107DB183F5DA2856D6CDA301F4A5AA36D6C4A6C6C49C7
FCA36D6C4A6C6C1306A3DB80016E130E027FDA8003140CA2DBC00380023FDA00015CA203
E081021F01066D5CA36E6C486E6C5AA36E6C486E6C5AA36F48EC1FE1020360A2DBFE7015
F302010160020F90C8FCA2DBFFE015FB6E49EC07FEA36F486E5AA36FC86C5AA3031E6F5A
A4030C16605F467EC364>87 D<EB07FC90383FFF809038F80FE03903C003F048C66C7E00
0E6D7ED80FC0137E486C137F6D6D7EA36F7EA26C5AEA0380C8FCA4EC0FFF49B5FC90380F
FE1FEB3FC0EBFF00EA03FC485A485A485A485A127F5B176048C7FCA3153FA36D137F007F
14EF6D9038C7E0C0003F13013A1FE00783F13B07F81E03FF802701FFFC0113003A001FE0
007C2B2E7CAC31>97 D<EC7F80903803FFF090380FC07C90383F000F01FCEB03804848EB
01C00003140F4848EB1FE049133F120F485AA2485AED1FC0007FEC070092C7FCA290C9FC
5AAB7E7FA2123F16307F001F15706C6C146016E06C6C14C06C6C13010001EC03806C6CEB
0700013F131E90381FC078903807FFF001001380242E7DAC2B>99
D<167FED3FFFA315018182B3EC7F80903803FFF090380FC07C90383F000E017E1307496D
5AD803F87F48487F5B000F81485AA2485AA2127FA290C8FC5AAB7E7FA2123FA26C7EA200
0F5D7F6C6C5B00035C6C6C9038077F806C6C010E13C0013F011C13FE90380FC0F8903803
FFE09026007F0013002F467DC436>I<EB01FE903807FFC090381F03F090387E00FC4913
7E48487F485A4848EB1F80000F15C049130F121F484814E01507A2007F15F090C7FCA25A
A390B6FCA290C9FCA67EA27FA2123F16306C7E1670000F15606D14E06C6C14C000031401
6C6CEB03806C6CEB0700013E131E90381F80F8903803FFE0010090C7FC242E7DAC2B>I<
EC0FE0EC7FF8903801F81E903803F03F90390FE07F8090381FC0FF5C133F495AA2ED7F00
01FE131C92C7FCAFB67EA3C648C8FCB3B2486C7E007F13FFA321467EC51E>I<EA01FC12
FFA3120712031201B3EC01FE913807FFC091381E07F091383801F802707FECE000D9FDC0
7F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F83F13FEA32F457DC436>104
D<EA01E0EA07F8A2487EA46C5AA2EA01E0C8FCADEA01FC12FFA3120712031201B3B0487E
B512F8A315437DC21C>I<EA01FC12FFA3120712031201B3A292381FFFE0A36F1300ED07
F816E05E5E030EC7FC5D5D5D5D4A5A4A5A4AC8FC5CEC3F804A7E14FF9038FDCFE09038FF
8FF01407496C7E01FC7F14016E7E81816F7E82151F6F7E821507826F7E8282486C491380
B5D8F81F13F8A32D457DC433>107 D<EA01FC12FFA3120712031201B3B3B3A5487EB512
F8A315457DC41C>I<D801FC01FFEC1FE000FF010701E0EBFFFC913B0F03F801E07F913C
3C01FC07803F800007903C7000FE0E001FC0000349D97E1C130F2601FDC0D97F38804A14
3001FFDA3FF06D7E91C75BA2495DA3495DB3A8486C4A6C497EB5D8F81FB50003B512E0A3
4B2C7DAB52>I<3901FC01FE00FF903807FFC091381E07F091383801F8000701707F0003
EBE0002601FDC07F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F83F13FEA32F2C
7DAB36>I<EC7F80903803FFF090380FC0FC90383E001F496D7E496D7E48486D7E48486D
7E48486D7E000F81A24848147E003F157FA290C87E481680A44816C0AA6C1680A26D147F
003F1600A2001F157E6D14FE000F5D6D130100075D6C6C495A6C6C495A6C6C495A013E49
C7FC90381FC0FE903807FFF89038007F802A2E7DAC31>I<3901FC03FC00FF90380FFF80
91383C07E091387001F83A07FDE000FE00010180137F01FFEC3F8091C7EA1FC04915E049
140F17F0160717F8160317FCA3EE01FEABEE03FCA3EE07F8A217F0160F6D15E0EE1FC06D
143F17806EEB7E00D9FDC05B9039FCF003F891383C0FE091381FFF80DA03FCC7FC91C9FC
AE487EB512F8A32F3F7DAB36>I<3903F803F000FFEB1FFCEC3C3EEC707F0007EBE0FF38
03F9C000015B13FBEC007E153C01FF13005BA45BB3A748B4FCB512FEA3202C7DAB26>
114 D<90383FE0183901FFFC383907E01F78390F0003F8001E1301481300007C14781278
00F81438A21518A27EA27E6C6C13006C7E13FC383FFFE06C13FC6C13FF6C14C06C14E0C6
14F0011F13F81300EC0FFC140300C0EB01FE1400157E7E153EA27EA36C143C6C147C1578
6C14F86CEB01F039F38003E039F1F00F8039E07FFE0038C00FF01F2E7DAC26>I<1306A5
130EA4131EA3133E137EA213FE12011207001FB512F0B6FCA2C648C7FCB3A4150CAA017E
131C017F1318A26D133890381F8030ECC070903807E0E0903801FFC09038007F001E3E7E
BC26>I<D801FC147F00FFEC3FFFA300071401000380000181B3A85EA35DA212006D5B01
7E9038077F80017F010E13C06D011C13FE90380FC078903803FFF09026007F8013002F2D
7DAB36>I<B539F001FFFCA3000790C7EA7FE06C48EC1F8000011600160E1200160C017F
5CA280013F5CA26E1370011F146080010F5CA2ECF00101075CA26D6C48C7FCA26E5A0101
1306A26D6C5AA214FF6E5AA215B8EC3FB015F06E5AA36E5AA26E5AA36EC8FC2E2C7EAA33
>I<B539F001FFFCA3000790C7EA7FE06C48EC1F8000011600160E0000150C6D141C6D14
18A26E1338013F1430A26D6C5BA26E13E0010F5CA26D6C485AA2ECF803010391C7FCA290
3801FC06A2ECFE0E0100130CA2EC7F18A215B8EC3FB0A2EC1FE0A36E5AA26E5AA36EC8FC
A21406A35CA25CA2123C007E5BB4FC5CA25CEAFE01387C0380D87007C9FCEA3C1EEA0FFC
EA03F02E3F7EAA33>121 D E /Fz 20 118 df<121EEA3F80EA7FC012FFA41380EA7F00
123C0A0A77891B>46 D<011FB712E018FCF0FF809026003FF8C76C7E6E48EC1FF0727E4B
6E7E1803727E8584143F5D1A80A4027F17005D606118036102FF150792C8485A614E5AF0
7FC04EC7FC49ED03FE4AEC0FF8EFFFE091B7128018F04AC7EA03FC0103ED00FF4A6F7E72
7E727E727EA20107707E5C85A31803130F4A1507A461011F160F4A5E181F4E5AA24E5A01
3F4C5A4A4A90C7FC4D5AEF0FFC017FED3FF001FF4AB45AB9128005FCC8FC17C041447CC3
45>66 D<DC1FF8EB01C04BB5FC030F9138C00380923A3FF003F007913B01FF8000780FDA
03FCC7123CDA0FF0EC0E1FDA1FC0EC073FDA7F80913803FF004AC8FC494881494881495A
4948824948167E4948163E495A13FF91CA121E485A0003181C5B12075B120FA248481718
A2003F95C7FC5BA3485AA512FF5BA44CB612805EA293C7EBE000725A183F007F177FA261
7F123FA218FF6C7E96C7FC6C7EA26C6C5D12036D5D6C6C5E6C6C15076D6CEC0E7E6D6C14
1CD90FF0EC783ED907FC903801F01E903B01FF801FC01C6D6CB5EA000C021F01FC90C8FC
020113C0424876C54D>71 D<011FB500FC017FB512F04C16E0A29026003FFCC8EBF000DA
1FF0ED7FC0A24B5EA419FF143F4B93C7FCA460147F4B5DA4180314FF92C85BA418075B4A
5E91B8FCA34AC8120F13034A5EA4181F13074A5EA4183F130F4A5EA4187F131F4A5EA418
FF133F4A93C8FCA3017F5D496C4A7FB6D8E003B67EA203C093C7FC4C447CC349>I<0207
B6FCA3DA000313C003001380A21700A45DA25EA41503A25EA41507A25EA4150FA25EA415
1FA25EA4153FA25EA4157FA25EA4001F14FFEA7F80486C91C7FCA34A5A13804A5A130000
D8495A00E05C0060495A0070495A6C495A6C49C8FC380F81FC3803FFF038007F80304679
C332>74 D<011FB6FCA39026003FFCC8FCEC1FF0A25DA5143F5DA5147F5DA514FF92C9FC
A55B5CA513035CA513074A1503A31806A2130F4A150E180CA2181C1818011F16385C1878
187018F01701013FED03E04A1407170F173F017FEDFFC001FF140FB9FC1880A238447CC3
3D>76 D<EC1FF0ECFFFE903903E03F8090390F000FC0011C6D7E496D7E017E80017F1301
D9FF807FA414005B133C90C7FCA21503A24AB45A143F903801FFC390380FF80390383FE0
07EBFF802601FE005B485A485A485A4848130F123F49ECE030127F5B151FA200FF91383F
C06090C7FC6C6C137F15EFDA01CF13C03A3FC00387E03B1FE00707E1803B07F03E03FF00
3A01FFF801FE3A003FC000F82C2E7BAC31>97 D<EB1FC0EA0FFFA25AEA007F133FA25CA5
137F91C9FCA55B5BA512019038FC01FC91380FFF8091383E07E09138F001F89039FDC000
FC48B448137E91C77E49EC1F805B4915C0160F000716E05BA217F0A3120F5BA4161F001F
16E05BA3EE3FC0A2123F49EC7F8017005E5E4B5A127F4B5A6D495A007E4A5AD87CE0EB1F
80D8787049C7FC486C13FC39E01E03F039C007FFC0260001FEC8FC2C4676C436>I<EC07
F8EC3FFF9138FC07C0903903F000E0D90FC013704948133849C712FC017E130349130712
01485A12074914F8000F15F04848EB01E092C7FC485AA3127F5BA412FF90C9FCA67EA216
6016E06C6C14C01501001F15806D1303000FEC07006C6C130E6C6C133C6C6C137039007E
03E090381FFF80D903FCC7FC262E7AAC2B>I<177FEE3FFFA25E160182A217FEA41601A2
17FCA41603A217F8A41607A2DA03F813F0EC3FFF9138FE0787903903F001E790390FC000
6F4948137F49C7EA3FE001FE141F485A49140F0003151F485A000F16C05B121F5B003F15
3FA2007F16805BA3167F12FF90C81300A45EA26C5DA46C14017F001F4A5A6D1307000F14
0F6C6C131D6C6C49B4FC6C6C01F313F839007E03C390381FFF03D903FCEBF80030467AC4
36>I<EC0FF0EC7FFC903801F83F903907E00F8090391F8007C0D93F0013E0017EEB03F0
5B0001EC01F8485AA2485A120F4914FC121F5B123F16F8A2485A90B6FCA20180C8FCA212
FF90C9FCA57EA3166016E06C15C06D1301001FEC03806D1400000F5C6C6C131E6C6C1338
6C6C13F039007E03C0D91FFFC7FCEB03FC262E7AAC2B>I<EF0FC0DA01FEEB7FE0913A0F
FF81F0F091393F07E3839139FC01FF03903901F800FC4948EC01E04948017EC7FC495A01
1F147F495AA349C7FCA45E5E137E5E017F13016D5C4B5A6D495A6D6C485A496C485A9026
3BE07EC8FC903870FFF8EC3FC049CAFCA21201A47F7F90B512FE6CECFFC016F06D14FC6D
8090B7FC2703F000037FD80FC0EB007F4848141F48C87F007E150F127C00FC15075AA216
0F5FA2161F4CC7FC007C157E007E5D6C4A5A6C6CEB07E0D807E0EB1F80D801FC01FEC8FC
39007FFFF80107138034427EAC31>103 D<EC3F80EB1FFFA25B1300147FA292C8FCA55C
5CA513015CA513039138F801FE92380FFF8092383E0FE092387007F09138F9E003902607
FB8013F8ECF70002F6130114FE5C4A1303130F5CA25CA21607131F4A14F0A4160F133F4A
14E0A4161F137F91C713C0A4163F5B491580A30001157F486CECFFC0B5D8FC3F13FFA330
457DC436>I<143C14FEEB01FFA25BA3EB01FE14FCEB00781400ADEB03F8EA01FFA3EA00
0F130714F0A5130F14E0A5131F14C0A5133F1480A5137F1400A55B5BA31201487EB512F8
A318437DC21C>I<EC3F80EB1FFFA31300147FA21500A55C5CA513015CA513035CA51307
5CA5130F5CA5131F5CA5133F5CA5137F91C7FCA55B5BA31201487EB512FCA25C19457DC4
1C>108 D<903903F801FED801FF90380FFF804891383E0FE092387007F03A000FF9E003
902607FB8013F8ECF70002F6130114FE5C4A1303130F5CA25CA21607131F4A14F0A4160F
133F4A14E0A4161F137F91C713C0A4163F5B491580A30001157F486CECFFC0B5D8FC3F13
FFA3302C7DAB36>110 D<EC07FC91383FFF809138FC0FC0903903E001F090390FC000F8
49C7127C013E8049143F01FC8048481580485A17C04848140F120FA2484815E0A2003F15
1F5BA2127FA448C8EA3FC0A41780167F17007E16FEA24B5A6C5D15036C6C5C4B5A6C6C49
5A6C6C495A6C6C013EC7FC6C6C13FC39007E03F090381FFFC0D903FCC8FC2B2E7AAC31>
I<903903F007E0D801FFEB3FF848EC787CEDE1FC39000FF1C1903807F383ECE70314EE91
38EC01F89138FC00E04A1300130F5CA35CA2131F5CA5133F5CA5137F91C8FCA55B5BA312
01487EB6FCA25C262C7DAB26>114 D<91383FE030903903FFF87090390FC01EF090381E
0007017C13034913015B0001EC00E0485AA412076D14C0A26D1400EA03FEEBFFE014FE6C
EBFFC06C14F06D7F6D13FE130F01017FD9000F13801401EC007F0018143F151F1238150F
A4ED1F00127CA2007E143E153C007F5C6D5B39F9C003E039F0F00FC026E07FFFC7FC38C0
0FF0242E7DAC26>I<01FEEC3F80007FEC1FFF00FF5CA2000314000001157F491500A45E
1203495CA415011207495CA41503120F495CA41507121F495CA2150FA2151FA249495AA2
157F6C6C13EF913801DFF83B07E0079FFFC03903F01E1F3800FFFCD91FE0EBC0002A2D77
AB36>117 D E /FA 15 118 df<BB12E0F2FF801BF01BFE757E1CF0D800010280C70007
80DF007F13FE080F6D7E0801807480093F7F090F13FC757F757F877580767F8A88767F8A
888AA2767FA28A881F80A37614C0A41FE0A5881FF0B05214E0A51FC0A4521480A31F0064
66A2525BA2525BA2525B666499B55A515C5191C7FC515B515B515B097F5B50B512C00807
5C083F91C8FC0707B512FCBD12F01CC051C9FC1BF81B8008E0CAFC6C627AE17C>68
D<B700C0083FB612F070627097B7FCA37061D800010DF8C7FC70F103EFA202FD6DF107CF
A202FC6DF10F8FA36F6DF01F0FA26F6D183EA26F6D187CA26F6D18F8A36F6DEF01F0A26F
6DEF03E0A26F6DEF07C0A26F6DEF0F80A3706DEE1F00A2706D163EA2706D5EA2706D5EA3
706D4B5AA2706D4B5AA2706D4B5AA2706D4B5AA3716D4AC7FCA2716D143EA2716D5CA271
6D5CA3716D495AA2716D495AA2716D495AA2716D495AA3726D48C8FCA272EBC03EA2726D
5AA2726D5AA372EBF9F0A272EBFFE0A2725CA2725CA37390C9FCA2735AA2735A90381FFF
C0B700F86E480207B812F0A3735AA2735A8C627AE199>77 D<DBFFFCEC01E0020FD9FFE0
1303027F02FC130749B7130F0107EEC01F011F16F049D9C007EBF83F4948C7383FFE7FD9
FFF8020FB5FC4801E014014849804849153F91C97E484882001F834982003F83845B007F
187FA2193FA200FF181FA27F190FA27FA26D17078080806C01F893C7FC80ECFF8015F86C
ECFFC016FC6CEDFFE017FE6CEEFFE018F86C17FE6C717E6C846C846D17F86D836D836D83
13036D18806D6C17C0020F17E01401DA000F16F01500040715F8EE007F1703050014FC18
3F84060713FE84A2007C8300FC83A2197FA3193F7EA31AFC7EA27F1AF86D177F7F1AF06D
17FF6D18E06D5E01FF18C06E4B138002E04B130002F84B5A02FFED3FFC01CF01E0ECFFF8
018301FF010F5B010191B65A6D6C5E48011F93C7FC48010315FC48D9003F14E048020149
C8FC476677E35A>83 D<913803FFFE027FEBFFF00103B612FE010F6F7E4916E090273FFE
001F7FD97FE001077FD9FFF801017F486D6D7F717E486D6E7F85717FA2717FA36C496E7F
A26C5B6D5AEB1FC090C9FCA74BB6FC157F0207B7FC147F49B61207010F14C0013FEBFE00
4913F048B512C04891C7FC485B4813F85A5C485B5A5CA2B55AA45FA25F806C5E806C047D
7F6EEB01F96C6DD903F1EBFF806C01FED90FE114FF6C9027FFC07FC01580000191B5487E
6C6C4B7E011F02FC130F010302F001011400D9001F90CBFC49437CC14E>97
D<903807FF80B6FCA6C6FC7F7FB3A8EFFFF8040FEBFF80047F14F00381B612FC038715FF
038F010014C0DBBFF0011F7FDBFFC001077F93C76C7F4B02007F03F8824B6F7E4B6F1380
4B17C0851BE0A27313F0A21BF8A37313FCA41BFEAE1BFCA44F13F8A31BF0A24F13E0A24F
13C06F17804F1300816F4B5A6F4A5B4AB402075B4A6C6C495B9126F83FE0013F13C09127
F00FFC03B55A4A6CB648C7FCDAC00115F84A6C15E091C7001F91C8FC90C8000313E04F65
7BE35A>I<92380FFFF04AB67E020F15F0023F15FC91B77E01039039FE001FFF4901F801
0113804901E0010713C04901804913E0017F90C7FC49484A13F0A2485B485B5A5C5A7113
E0485B7113C048701380943800FE0095C7FC485BA4B5FCAE7EA280A27EA2806C18FCA26C
6D150119F87E6C6D15036EED07F06C18E06C6D150F6D6DEC1FC06D01E0EC7F806D6DECFF
00010701FCEB03FE6D9039FFC03FFC010091B512F0023F5D020F1580020102FCC7FCDA00
0F13C03E437BC148>I<92380FFFC04AB512FC020FECFF80023F15E091B712F80103D9FE
037F499039F0007FFF011F01C0011F7F49496D7F4990C76C7F49486E7F48498048844A80
4884485B727E5A5C48717EA35A5C721380A2B5FCA391B9FCA41A0002C0CBFCA67EA380A2
7EA27E6E160FF11F806C183F6C7FF17F006C7F6C6D16FE6C17016D6C4B5A6D6D4A5A6D01
E04A5A6D6DEC3FE0010301FC49B45A6D9026FFC01F90C7FC6D6C90B55A021F15F8020715
E0020092C8FC030713F041437CC14A>101 D<EE3FFC0307B51280033F14C04AB612F002
0715F84A9038F03FFC4AEB807F913A7FFE00FFFE4A5A4B4813FF4913F05B4913E0A24913
C0A27013FE4949EB7FFCEF3FF8EF1FF0EF07C094C7FCB0B812C0A6D8001F01C0C8FCB3B3
B0007FB612FCA638657CE431>I<EB0FE0EB3FF8497E48B5FCA24880A24880A76C5CA26C
91C7FCA238007FFC6D5AEB0FE090C9FCAF903807FF80007FB5FCA6C6FC7F7FB3B3AEB712
C0A622657BE42C>105 D<903807FF80B6FCA6C6FC7F7FB3B3B3B3ADB712E0A623647BE3
2C>108 D<923807FFE092B6FC020715E0021F15F8027F15FE494848C66C6C7E010701F0
010F13E04901C001037F49496D7F4990C87F49486F7E49486F7E48496F13804819C04A81
4819E048496F13F0A24819F8A348496F13FCA34819FEA4B518FFAD6C19FEA46C6D4B13FC
A36C19F8A26C6D4B13F0A26C19E06C6D4B13C0A26C6D4B13806C6D4B13006D6C4B5A6D6D
495B6D6D495B010701F0010F13E06D01FE017F5B010090B7C7FC023F15FC020715E00200
92C8FC030713E048437CC151>111 D<D90FFFEB0FFCB690383FFF8093B512E04B14F04B
14F8923907FC7FFC92390FE0FFFEC6EC1F806DD93F0113FF6D133E157E157C15F8A215F0
7013FEA24BEB7FFCEF3FF8EF0FE04B90C7FCA55DB3B0B712F8A638417BC042>114
D<913A3FFF8007800107B5EAF81F011FECFE7F017F91B5FC48B8FC48EBE0014890C7121F
D80FFC1407D81FF0801600485A007F167F49153FA212FF171FA27F7F7F6D92C7FC13FF14
E014FF6C14F8EDFFC06C15FC16FF6C16C06C16F06C826C826C826C82013F1680010F16C0
1303D9007F15E0020315F0EC001F1500041F13F81607007C150100FC81177F6C163FA217
1F7EA26D16F0A27F173F6D16E06D157F6D16C001FEEDFF806D0203130002C0EB0FFE02FC
EB7FFC01DFB65A010F5DD8FE0315C026F8007F49C7FC48010F13E035437BC140>I<EC07
E0A6140FA5141FA3143FA2147FA214FF5BA25B5B5B5B137F48B5FC000F91B512FEB8FCA5
D8001F01E0C8FCB3AFEF0FC0AC171F6D6D1480A2173F6D16006F5B6D6D137E6D6D5B6DEB
FF836EEBFFF86E5C020F14C002035C9126003FFCC7FC325C7DDA3F>I<902607FFC0ED3F
FEB60207B5FCA6C6EE00076D826D82B3B3A260A360A2607F60183E6D6D147E4E7F6D6D49
48806D6DD907F0ECFF806D01FFEB3FE06D91B55A6E1500021F5C020314F8DA003F018002
F0C7FC51427BC05A>I E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: Letter
%%BeginPaperSize: Letter
/setpagedevice where {
pop 1 dict dup /PageSize [ 612 792 ] put setpagedevice
} {
statusdict /lettertray known {
statusdict begin lettertray end
/letter where { pop letter } if
} {
/letter where {
pop letter
} {
statusdict /setpage known {
statusdict begin
612 792 0 setpage
end
} if
} ifelse
} ifelse
} ifelse
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 795 963 a FA(Data)54 b(Structures)e(for)h(Mobile)i(Data)1163
1239 y Fz(Julien)31 b(Basc)m(h)229 b(Leonidas)33 b(J.)f(Guibas)1299
1355 y Fy(Computer)g(Science)i(Departmen)m(t)1538 1472
y(Stanford)e(Univ)m(ersit)m(y)1402 1588 y(Stanford,)h(CA)g(94305,)e
(USA)1162 1704 y Fx(f)p Fw(jbasch,guibas)p Fx(g)p Fw(@cs.stanford.)q
(edu)1579 1869 y Fz(John)i(Hersh)m(b)s(erger)1459 1985
y Fy(Men)m(tor)g(Graphics)f(Corp.)1400 2102 y(8005)f(SW)i(Bo)s(ec)m
(kman)g(Road)1235 2218 y(Wilson)m(ville,)d(OR)i(97070-7777,)e(USA)1245
2334 y Fw(john)p 1455 2334 31 4 v 38 w(hershberger@mentorg.com)1786
2637 y Fv(Abstract)846 2769 y Fu(A)24 b Ft(kinetic)j(data)g(structur)l
(e)h Fu(\(KDS\))23 b(main)n(tains)i(an)f(attribute)h(of)g(in)n(terest)g
(in)f(a)731 2860 y(system)f(of)i(geometric)f(ob)t(jects)h(undergoing)g
(con)n(tin)n(uous)f(motion.)33 b(In)24 b(this)g(pap)r(er)731
2952 y(w)n(e)31 b(dev)n(elop)g(a)h(conceptual)f(framew)n(ork)h(for)g
(kinetic)f(data)g(structures,)i(prop)r(ose)731 3043 y(a)i(n)n(um)n(b)r
(er)f(of)i(criteria)g(for)h(the)e(qualit)n(y)f(of)j(suc)n(h)d
(structures,)k(and)d(describ)r(e)h(a)731 3134 y(n)n(um)n(b)r(er)29
b(of)k(fundamen)n(tal)e(tec)n(hniques)g(for)i(their)f(design.)53
b(W)-6 b(e)32 b(illustrate)h(these)731 3226 y(general)38
b(concepts)g(b)n(y)f(presen)n(ting)g(kinetic)h(data)g(structures)f(for)
i(main)n(taining)731 3317 y(the)27 b(con)n(v)n(ex)f(h)n(ull)h(and)g
(the)g(closest)i(pair)f(of)g(mo)n(ving)f(p)r(oin)n(ts)g(in)h(the)f
(plane;)i(these)731 3408 y(structures)18 b(b)r(eha)n(v)n(e)f(w)n(ell)j
(according)f(to)f(the)g(prop)r(osed)h(qualit)n(y)f(criteria)h(for)g
(KDSs.)523 3718 y Fs(1)135 b(In)l(tro)t(duction)523 3936
y Fr(W)-7 b(e)23 b(presen)n(t)f(a)h(set)f(of)h(no)n(v)n(el)f(data)g
(structures)g(for)g(the)h(e\016cien)n(t)g(main)n(tenance)f(of)h(v)-5
b(arious)523 4035 y(con)n(tin)n(uous)27 b(and)g(discrete)h(attributes)f
(of)h(mobile)g(data.)36 b(F)-7 b(or)27 b(example,)h(giv)n(en)f
Fq(n)g Fr(p)r(oin)n(ts)523 4135 y(mo)n(ving)22 b(con)n(tin)n(uously)g
(in)h(the)g(plane,)h(w)n(e)f(giv)n(e)f(metho)r(ds)h(for)g(main)n
(taining)f(their)h(con)n(v)n(ex)523 4234 y(h)n(ull)f(or)f(the)h
(separation)e(of)i(their)g(closest)f(pair.)34 b(W)-7
b(e)22 b(call)g(the)g(com)n(binatorial)e(description)523
4334 y(of)k(these)h(attributes)f(a)g Fp(c)l(on\014gur)l(ation)j
(function)d Fr(of)h(the)g(mobile)f(data)2744 4304 y Fo(1)2781
4334 y Fr(.)36 b(Since)24 b(motion)g(is)523 4434 y(common)18
b(with)h(ob)5 b(jects)18 b(in)h(the)g(ph)n(ysical)e(w)n(orld,)j(the)e
(examples)g(w)n(e)g(discuss)g(in)h(this)g(pap)r(er)523
4533 y(come)33 b(primarily)f(from)g(computational)h(geometry)e(and)i
(are)f(motiv)-5 b(ated)33 b(b)n(y)g(problems)p 523 4603
1146 4 v 615 4656 a Fn(1)650 4680 y Fm(By)19 b(com)n(binatorial)f
(description)h(of)g(the)g(con)n(v)n(ex)i(h)n(ull)d(w)n(e)h(mean)f(the)i
(circular)e(list)g(of)h(p)r(oin)n(ts)g(forming)523 4759
y(the)j(h)n(ull;)f(the)g(com)n(binatorial)g(description)g(of)g(the)g
(closest)h(pair)e(is)g(just)h(the)h(iden)n(tit)n(y)g(of)e(the)i(t)n(w)n
(o)g(closest)523 4838 y(p)r(oin)n(ts.)1934 5147 y Fr(1)p
eop
%%Page: 2 2
2 1 bop 523 614 a Fr(lik)n(e)38 b(collision)f(detection)i(in)g(rob)r
(otics)e(and)h(animation,)j(visibilit)n(y)d(determination)g(in)523
714 y(computer)24 b(graphics,)f(etc.)36 b(Our)23 b(tec)n(hniques,)i(ho)
n(w)n(ev)n(er,)d(are)h(more)g(generally)g(applicable)523
814 y(to)j(the)h(pro)r(cessing)d(of)j(discrete)e(functions)i(asso)r
(ciated)e(with)h(an)n(y)g(kind)g(of)h(con)n(tin)n(uously)523
913 y(c)n(hanging)32 b(data.)55 b(W)-7 b(e)34 b(call)f(our)g(data)g
(structures)g Fp(kinetic)p Fr(,)j(to)e(distinguish)f(them)i(from)523
1013 y(their)27 b(more)g(classical)f(static)i(or)e(dynamic)h(\(in)i
(the)e(other)g(sense,)g(as)g(w)n(e)g(explain)g(b)r(elo)n(w\))523
1112 y(coun)n(terparts,)i(and)g(w)n(e)h(abbreviate)e(the)i(term)g
(\\kinetic)f(data)h(structure")e(to)i(KDS)g(for)523 1212
y(short.)48 b(W)-7 b(e)31 b(call)g Fp(kinetization)i
Fr(the)f(pro)r(cess)e(of)h(transforming)f(an)h(algorithm)f(on)i(static)
523 1312 y(data)21 b(in)n(to)h(a)f(data)h(structure)f(that)h(is)g(v)-5
b(alid)22 b(for)f(con)n(tin)n(uously)g(c)n(hanging)f(\(mo)n(ving\))i
(data.)648 1447 y(The)37 b(problems)g(of)g(con)n(v)n(ex)f(h)n(ull)i
(and)f(closest)g(pair)g(main)n(tenance)g(ha)n(v)n(e)f(b)r(een)i(ex-)523
1546 y(haustiv)n(ely)32 b(studied)h(in)g(computational)f(geometry)g
([14)o(,)h(16)o(,)g(22)o(,)g(25)o(,)g(26)o(,)g(29)o(,)f(31)o(],)j(but)
523 1646 y(almost)25 b(exclusiv)n(ely)g(in)h(the)g(con)n(text)g(of)g
(static)f(ob)5 b(jects)26 b(with)g(op)r(erations)f(lik)n(e)g(insertion)
523 1746 y(and)f(deletion.)36 b(Our)23 b(emphasis)g(instead)h(is)g(on)g
(the)g(main)n(tenance)f(of)h(suc)n(h)g(con\014guration)523
1845 y(functions)35 b(under)f Fp(c)l(ontinuous)i(motion)f
Fr(of)f(the)h(giv)n(en)f(ob)5 b(jects.)57 b(Though)34
b(in)g(principle)523 1945 y(the)c(con)n(tin)n(uous)e(motion)h(of)g(a)g
(single)g(ob)5 b(ject)29 b(can)g(b)r(e)h(appro)n(ximated,)e(after)h(a)g
(discrete)523 2045 y(sampling)35 b(of)h(time,)j(b)n(y)d(deleting)g(it)h
(and)e(reinserting)g(it)i(at)f(a)f(new)h(p)r(osition)g(at)g(eac)n(h)523
2144 y(time)h(step,)h(this)e(metho)r(d)h(is)e(clearly)g(ill-adapted)h
(to)g(our)f(purp)r(oses)g(and)h(w)n(asteful)f(of)523
2244 y(computation.)h(In)27 b(particular,)f(an)n(y)g(\014xed)h(rate)f
(sampling)g(of)g(the)h(ev)n(olving)f(system)g(will)523
2343 y(either)33 b(o)n(v)n(ersample)e(or)h(undersample)g(the)i(system,)
g(as)f(the)g(ev)n(en)n(ts)f(of)h(in)n(terest)g(to)g(the)523
2443 y(con\014guration)19 b(function)i(t)n(ypically)f(o)r(ccur)g(in)g
(irregular)f(patterns.)34 b(The)20 b(aim)h(of)f(our)g(tec)n(h-)523
2543 y(nique)33 b(is)g(to)h(tak)n(e)e(full)i(adv)-5 b(an)n(tage)32
b(of)h(the)g(coherence)f(presen)n(t)h(in)g(con)n(tin)n(uous)g(motion)
523 2642 y(so)f(as)g(to)g(pro)r(cess)g(a)g(minimal)h(n)n(um)n(b)r(er)f
(of)h(com)n(binatorial)d(ev)n(en)n(ts,)j(y)n(et)g(still)g(main)n(tain)
523 2742 y(the)f(con\014guration)e(function)i(correctly)-7
b(.)48 b(In)32 b(this)f(resp)r(ect,)i(the)f(w)n(a)n(y)e(of)i(analyzing)
e(our)523 2842 y(data)i(structures)g(is)h(akin)f(to)g(the)h
Fp(dynamic)j(c)l(omputational)f(ge)l(ometry)f Fr(framew)n(ork)c(in-)523
2941 y(tro)r(duced)23 b(b)n(y)f(A)n(tallah)h([7)o(])g(in)g(order)f(to)g
(study)h(the)h(n)n(um)n(b)r(er)e(of)h(com)n(binatorially)e(distinct)523
3041 y(con\014gurations)g(of)i(a)f(giv)n(en)g(kind)h(\(e.g.,)h(con)n(v)
n(ex)e(h)n(ull)h(or)f(closest)g(pair\))g(that)h(arise)f(during)523
3140 y(the)28 b(con)n(tin)n(uous)f(motion)h(of)f(geometric)g(ob)5
b(jects.)37 b(Unlik)n(e)28 b(A)n(tallah's)f(sc)n(heme,)g(ho)n(w)n(ev)n
(er,)523 3240 y(our)h(data)f(structures)h(do)g(not)g(require)g(us)g(to)
g(kno)n(w)f(the)i(full)g(motion)f(of)h(the)f(ob)5 b(jects)28
b(in)523 3340 y(adv)-5 b(ance.)42 b(Th)n(us)30 b(they)g(are)e(b)r
(etter)i(suited)g(to)g(real-w)n(orld)d(situations)i(in)h(whic)n(h)g(ob)
5 b(jects)523 3439 y(can)20 b(c)n(hange)g(their)g(motion)h(on-line)f(b)
r(ecause)g(of)g(in)n(teractions)g(with)h(eac)n(h)f(other,)h(external)
523 3539 y(impulses,)28 b(etc.)648 3674 y(W)-7 b(e)22
b(assume)f(that)i(eac)n(h)e(mo)n(ving)g(ob)5 b(ject)22
b(has)f(a)h(p)r(osted)g Fp(\015ight)j(plan)e Fr(that)g(giv)n(es)e(full)
h(or)523 3774 y(partial)27 b(information)g(ab)r(out)h(its)g(curren)n(t)
f(motion.)37 b(As)28 b(men)n(tioned)g(ab)r(o)n(v)n(e,)e(\015igh)n(t)i
(plans)523 3873 y(can)e(c)n(hange.)35 b(A)27 b(\015igh)n(t)f(plan)h
Fp(up)l(date)g Fr(can)f(o)r(ccur)f(b)r(ecause)h(of)h(in)n(teractions)e
(b)r(et)n(w)n(een)h(our)523 3973 y(ob)5 b(ject)24 b(and)h(other)e(mo)n
(ving)h(ob)5 b(jects,)25 b(the)f(en)n(vironmen)n(t,)h(etc.)36
b(F)-7 b(or)23 b(example,)i(a)f(collision)523 4073 y(b)r(et)n(w)n(een)c
(t)n(w)n(o)f(mo)n(ving)f(ob)5 b(jects)19 b(will)h(in)g(general)f
(result)g(in)h(up)r(dates)g(to)f(the)i(\015igh)n(t)e(plans)g(of)523
4172 y(b)r(oth)28 b(ob)5 b(jects.)36 b(The)28 b(in)n(terface)f(b)r(et)n
(w)n(een)h(our)e(kinetic)i(data)f(structures)g(and)h(the)g(ob)5
b(ject)523 4272 y(motions)38 b(is)h(through)f(a)g(global)g(ev)n(en)n(t)
g(queue.)70 b(Th)n(us)38 b(our)g(tec)n(hniques)h(most)f(closely)523
4371 y(resem)n(ble)31 b(plane)i(sw)n(eep)e(metho)r(ds)i(in)g
(computational)e(geometry)-7 b(,)33 b(except)f(that)h(in)f(our)523
4471 y(case)21 b(the)h(dimension)g(b)r(eing)g(sw)n(ept)g(o)n(v)n(er)e
(is)i(time.)35 b(A)23 b(k)n(ey)e(asp)r(ect)h(of)g(our)f(data)g
(structures)523 4571 y(is)31 b(that)f(w)n(e)h(ha)n(v)n(e)e(a)h(\\narro)
n(w)e(in)n(terface")i(to)g(the)h(motion.)46 b(What)31
b(w)n(e)f(mean)g(b)n(y)h(this)f(is)523 4670 y(that)40
b(the)f(kinds)g(of)h(ev)n(en)n(ts)e(w)n(e)h(ha)n(v)n(e)f(in)i(our)e(ev)
n(en)n(t)h(queue)g(corresp)r(ond)f(to)h(p)r(ossible)523
4770 y(com)n(binatorial)g(c)n(hanges)h(in)n(v)n(olving)g(a)h(constan)n
(t)f(\(and)i(t)n(ypically)e(small\))h(n)n(um)n(b)r(er)g(of)523
4870 y(ob)5 b(jects)22 b(eac)n(h.)35 b(F)-7 b(or)22 b(example,)h(in)g
(the)g(case)f(of)g(2-D)h(con)n(v)n(ex)e(h)n(ull)i(main)n(tenance,)g
(one)f(t)n(yp)r(e)1934 5147 y(2)p eop
%%Page: 3 3
3 2 bop 523 614 a Fr(of)33 b(ev)n(en)n(t)g(w)n(e)g(will)g(use)g(is)g
(\\the)g(p)r(oin)n(ts)h Fq(A;)14 b(B)t(;)g(C)39 b Fr(b)r(ecome)33
b(collinear")f(or,)i(equiv)-5 b(alen)n(tly)e(,)523 714
y(\\the)23 b(triangle)f Fq(AB)t(C)30 b Fr(rev)n(erses)21
b(sign)i(\(orien)n(tation\)".)34 b(Indeed,)24 b(it)g(will)f(turn)g(out)
h(that)f(the)523 814 y(correctness)29 b(of)h(whatev)n(er)f
(con\014guration)g(function)i(w)n(e)f(main)n(tain)g(can)g(b)r(e)h
(guaran)n(teed)523 913 y(with)26 b(a)g(conjunction)g(of)g(suc)n(h)f(lo)
n(w-degree)f(algebraic)g(conditions)h(in)n(v)n(olving)g(a)g(b)r(ounded)
523 1013 y(n)n(um)n(b)r(er)i(of)h(ob)5 b(jects)27 b(eac)n(h|w)n(e)f
(call)i(these)f(conditions)g(the)h Fp(c)l(erti\014c)l(ates)g
Fr(of)g(the)g(KDS.)648 1148 y(A)n(t)36 b(an)n(y)g(one)g(time,)k(our)c
(ev)n(en)n(t)g(queue)g(will)h(con)n(tain)f(sev)n(eral)f(KDS)h(ev)n(en)n
(ts)g(corre-)523 1248 y(sp)r(onding)i(to)g(times)g(when)g
(certi\014cates)f(migh)n(t)h(c)n(hange)f(sign.)68 b(The)38
b(times)g(for)f(these)523 1347 y(ev)n(en)n(ts)32 b(are)f(calculated)h
(using)g(the)h(p)r(osted)f(\015igh)n(t)g(plans)g(of)h(the)f(ob)5
b(jects)32 b(in)n(v)n(olv)n(ed.)50 b(If,)523 1447 y(b)r(ecause)27
b(of)g(other)g(ev)n(en)n(ts,)g(the)g(\015igh)n(t)g(plan)h(of)f(an)g(ob)
5 b(ject)27 b(is)g(up)r(dated,)h(then)g(all)f(certi\014-)523
1546 y(cates)i(in)n(v)n(olving)f(that)h(ob)5 b(ject)30
b(m)n(ust)f(b)r(e)h(lo)r(cated)f(and)g(ha)n(v)n(e)f(their)i(\\sign)e(c)
n(hange")g(time)523 1646 y(recalculated)g(according)f(to)i(the)h(new)f
(plan.)41 b(In)29 b(this)g(w)n(a)n(y)f(the)i(ev)n(en)n(t)e(queue)h
(adapts)g(to)523 1746 y(the)f(ev)n(olving)e(motions)g(of)i(the)f(ob)5
b(jects.)37 b(W)-7 b(e)27 b(can)g(deal)g(in)h(the)f(same)g(w)n(a)n(y)f
(with)i(ob)5 b(jects)523 1845 y(whose)32 b(\015igh)n(t)h(plan)g(is)g
(only)g(partially)f(kno)n(wn.)53 b(In)33 b(our)f(\\sign)g(of)i(the)f
(triangle)f Fq(AB)t(C)6 b Fr(")523 1945 y(example)37
b(ab)r(o)n(v)n(e,)h(giv)n(en)e(some)g(partial)g(b)r(ounds)i(on)e(the)i
(p)r(ositions)e(and)h(v)n(elo)r(cities)f(of)523 2045
y(the)30 b(p)r(oin)n(ts)f Fq(A;)14 b(B)t(;)g(C)6 b Fr(,)30
b(w)n(e)f(can)g(easily)g(calculate)f(a)h(time)h(in)n(terv)-5
b(al)29 b(\001)p Fq(t)h Fr(during)e(whic)n(h)i(w)n(e)523
2144 y(can)h(b)r(e)h(sure)f(that)h(the)g(sign)f(of)h
Fq(AB)t(C)38 b Fr(do)r(es)31 b(not)h(c)n(hange.)48 b(Th)n(us)31
b(w)n(e)g(can)g(sc)n(hedule)h(an)523 2244 y(ev)n(en)n(t)f(to)h(o)r
(ccur)f(after)g(\001)p Fq(t)h Fr(time)g(units,)i(and)d(at)h(that)g(p)r
(oin)n(t)g(w)n(e)f(can)h(rec)n(hec)n(k)e(the)i(sign)523
2343 y(of)27 b Fq(AB)t(C)33 b Fr(and)27 b(pro)r(ceed)f(similarly)g
(\(after)h(up)r(dating)g(our)f(kno)n(wledge)f(of)i(the)g(motions)f(of)
523 2443 y(the)33 b(participating)e(p)r(oin)n(ts\).)51
b(In)33 b(general)e(our)g(philosoph)n(y)g(will)i(b)r(e)f(that)h(eac)n
(h)e(mo)n(ving)523 2543 y(ob)5 b(ject)25 b(needs)g(to)g(b)r(e)g(a)n(w)n
(are)e(of)i(all)g(the)g(ev)n(en)n(ts)g(in)g(the)h(ev)n(en)n(t)e(queue)h
(that)h(in)n(v)n(olv)n(e)d(it)j(and)523 2642 y(the)31
b(v)-5 b(alidit)n(y)31 b(assumptions)f(ab)r(out)g(its)h(motion)f(on)h
(whic)n(h)f(these)h(ev)n(en)n(ts)f(are)f(based.)46 b(If)523
2742 y(the)28 b(motion)g(of)g(the)h(ob)5 b(ject)27 b(c)n(hanges)g(so)g
(that)i(an)n(y)e(of)h(these)g(assumptions)f(is)h(no)g(longer)523
2842 y(v)-5 b(alid,)34 b(then)f(it)f(is)h(the)f(resp)r(onsibilit)n(y)g
(of)g(the)h(ob)5 b(ject)32 b(to)g(tak)n(e)g(the)h(steps)f(necessary)e
(to)523 2941 y(ha)n(v)n(e)h(these)h(ev)n(en)n(ts)f(resc)n(heduled)g(at)
g(the)h(times)h(appropriate)d(for)h(its)h(new)g(motion.)49
b(A)523 3041 y(general)26 b(issue)g(that)i(arises)d(here)i(is)g(ho)n(w)
f(b)r(est)h(to)g(sp)r(end)h(\\sensing)d(dollars")h(in)h(order)e(to)523
3140 y(acquire)33 b(the)i(information)f(ab)r(out)g(the)g(mo)n(ving)g
(ob)5 b(jects)33 b(that)i(is)f(necessary)f(to)h(detect)523
3240 y(the)27 b(ev)n(en)n(ts)e(of)h(in)n(terest)g(for)g(the)g(KDS.)37
b(W)-7 b(e)27 b(will)f(not)g(address)f(this)i(issue)f(in)g(this)h(pap)r
(er.)648 3375 y(A)d(k)n(ey)f(prop)r(ert)n(y)g(of)h(a)f(kinetic)h(data)f
(structure)h(is)g(that)g(the)g(certi\014cates)f(of)h(the)g(KDS)523
3475 y(form,)29 b(at)g(an)n(y)f(time,)i(a)f(pro)r(of)f(of)h
(correctness)f(of)h(the)g(curren)n(t)f(con\014guration)g(function.)523
3574 y(Their)j(failure)f(times)h(are)f(the)h(only)g(times)g(at)g(whic)n
(h)g(the)g(con\014guration)e(function)j(can)523 3674
y(p)r(ossibly)25 b(c)n(hange.)35 b(It)25 b(is)g(in)g(this)g(sense)g
(that)g(the)h(pro)r(of)e(b)r(eing)h(main)n(tained)g(b)n(y)g(the)g(KDS)
523 3774 y(guides)h(the)g(algorithm)f(to)h(examine)g(the)h(ev)n(olving)
d(system)i(only)g(at)g(the)h(set)f(of)g(relev)-5 b(an)n(t)523
3873 y(times|i.e.,)22 b(at)d(those)g(times)h(at)f(whic)n(h)h(the)g
(curren)n(t)e(pro)r(of)h(ma)n(y)g(b)r(ecome)h(in)n(v)-5
b(alid.)34 b(When)523 3973 y(a)29 b(certi\014cate)h(fails)f(and)h(the)g
(pro)r(of)f(b)r(ecomes)h(in)n(v)-5 b(alid,)30 b(the)g(KDS)g(needs)g(to)
g(up)r(date)g(the)523 4073 y(pro)r(of)d(and)g(p)r(ossibly)h(also)e(the)
i(v)-5 b(alue)28 b(of)f(the)h(con\014guration)e(function.)648
4208 y(W)-7 b(e)21 b(will)f(analyze)g(and)g(ev)-5 b(aluate)20
b(a)h(kinetic)f(data)g(structure)g(in)h(a)f(n)n(um)n(b)r(er)h(of)f
(di\013eren)n(t)523 4307 y(w)n(a)n(ys.)32 b(F)-7 b(or)18
b(the)h(analyses)f(of)g(KDSs)h(w)n(e)f(will)h(assume)f(that)h(the)g
(instan)n(taneous)e(motions)h(of)523 4407 y(the)23 b(ob)5
b(jects)22 b(are)g(kno)n(wn)g(and)g(are)g(parameterizable)e(b)n(y)j
(what)f(w)n(e)g(call)h Fp(pseudo-algebr)l(aic)523 4506
y Fr(functions)31 b(of)f(time.)47 b(These)30 b(are)f(functions)i(with)g
(the)g(prop)r(ert)n(y)e(that)i(eac)n(h)f(of)g(the)h(cer-)523
4606 y(ti\014cates)j(in)n(v)n(olv)n(ed)e(in)i(the)h(kinetization)e(c)n
(hanges)g(sign)g(at)h(most)g(a)f(b)r(ounded)i(n)n(um)n(b)r(er)523
4706 y(of)27 b(times|v)n(ery)f(m)n(uc)n(h)h(in)h(the)g(spirit)f(of)g
(situations)g(in)g(whic)n(h)g(Da)n(v)n(enp)r(ort-Sc)n(hinzel)f(se-)523
4805 y(quences)d(ha)n(v)n(e)e(b)r(een)j(used)f([34)o(])g(in)g
(computational)f(geometry)-7 b(.)34 b(Most)23 b(ob)n(viously)-7
b(,)23 b(a)f(KDS)1934 5147 y(3)p eop
%%Page: 4 4
4 3 bop 523 614 a Fr(is)23 b(go)r(o)r(d)f(if)h(the)g(cost)f(of)h(pro)r
(cessing)e(a)h(certi\014cate)g(failure)g(is)h(small.)35
b(In)23 b(order)e(to)h(quan)n(tify)523 714 y(this)32
b(and)f(the)h(follo)n(wing)f(measures,)g(let)h Fq(n)g
Fr(describ)r(e)f(the)h(complexit)n(y)f(of)h(the)g(ev)n(olving)523
814 y(system,)k(for)d(example)h(the)h(n)n(um)n(b)r(er)f(of)g(p)r(oin)n
(ts)g(mo)n(ving)g(in)g(the)h(plane)f(in)g(the)h(con)n(v)n(ex)523
913 y(h)n(ull)30 b(and)f(closest)g(pair)g(examples)f(of)i(the)g(later)f
(sections.)42 b(W)-7 b(e)30 b(will)f(sp)r(eak)g(of)h(a)f(cost)g(as)523
1013 y(b)r(eing)i(small)g(if)g(it)g(is)g(asymptotically)f(of)h(the)g
(order)f(of)h Fq(O)r Fr(\(P)n(olylog)n(\()p Fq(n)p Fr(\)\),)i(or)d
Fq(O)r Fr(\()p Fq(n)3168 983 y Fl(\017)3201 1013 y Fr(\),)i(for)523
1112 y(some)27 b(small)g Fq(\017)c(>)g Fr(0.)648 1248
y(W)-7 b(e)33 b(call)g(a)h(KDS)f Fp(r)l(esp)l(onsive)i
Fr(if)f(the)g(w)n(orst-case)c(cost)j(of)h(pro)r(cessing)e(a)h
(certi\014cate)523 1347 y(failure)k(is)g(small|this)g(is)g(the)g(cost)g
(of)g(disco)n(v)n(ering)e(ho)n(w)h(to)h(up)r(date)h(the)f(pro)r(of)g
(and)523 1447 y(\(p)r(ossibly\))c(the)f(con\014guration)f(function;)36
b(this)d(in)f(general)f(will)i(in)n(v)n(olv)n(e)e(desc)n(heduling)523
1546 y(certain)k(ev)n(en)n(ts)g(\(as)g(some)h(old)f(certi\014cates)g
(lea)n(v)n(e)f(the)i(pro)r(of)6 b(\))36 b(and)g(sc)n(heduling)f(some)
523 1646 y(new)28 b(ev)n(en)n(ts)f(\(as)g(new)g(certi\014cates)g(en)n
(ter)g(the)h(pro)r(of)6 b(\).)648 1781 y(A)31 b(second)f(k)n(ey)g(p)r
(erformance)g(measure)g(for)g(a)g(KDS)i(is)e(the)h(w)n(orst-case)e(n)n
(um)n(b)r(er)h(of)523 1881 y(ev)n(en)n(ts)36 b(pro)r(cessed.)62
b(W)-7 b(e)37 b(mak)n(e)e(a)h(distinction)h(b)r(et)n(w)n(een)g
Fp(external)g(events)p Fr(,)i(i.e.,)g(those)523 1980
y(a\013ecting)g(the)h(con\014guration)e(function)i(w)n(e)f(are)g(main)n
(taining)f(\(e.g.,)43 b(con)n(v)n(ex)38 b(h)n(ull)h(or)523
2080 y(closest)25 b(pair\),)h(and)f Fp(internal)k(events)p
Fr(,)d(i.e.,)g(those)f(pro)r(cessed)g(b)n(y)h(our)f(structure)g(b)r
(ecause)523 2180 y(of)30 b(its)h(in)n(ternal)e(needs,)i(but)g(not)f
(a\013ecting)g(the)h(desired)e(con\014guration)g(function.)45
b(Our)523 2279 y(aim)36 b(will)g(b)r(e)g(to)g(dev)n(elop)f(kinetic)i
(data)e(structures)g(for)h(whic)n(h)g(the)g(total)g(n)n(um)n(b)r(er)f
(of)523 2379 y(ev)n(en)n(ts)j(pro)r(cessed)g(b)n(y)g(the)h(structure)f
(in)h(the)h(w)n(orst)d(case)h(is)h(asymptotically)e(of)i(the)523
2479 y(same)c(order)f(as,)j(or)d(only)h(sligh)n(tly)g(larger)e(than,)38
b(the)e(n)n(um)n(b)r(er)f(of)g(external)g(ev)n(en)n(ts)f(in)523
2578 y(the)28 b(w)n(orst)e(case)g(\(tec)n(hnically)-7
b(,)27 b(w)n(e)g(require)f(that)i(the)f(ratio)g(of)g(total)g(ev)n(en)n
(ts)f(to)h(external)523 2678 y(ev)n(en)n(ts)f(is)h(small\).)36
b(This)27 b(is)f(reasonable,)f(as)h(the)h(n)n(um)n(b)r(er)g(of)f
(external)g(ev)n(en)n(ts)g(is)h(a)f(lo)n(w)n(er)523 2777
y(b)r(ound)32 b(on)f(the)g(cost)g(of)g(an)n(y)f(algorithm)g(for)h(main)
n(taining)g(the)g(desired)g(con\014guration.)523 2877
y(A)d(KDS)g(meeting)f(this)h(condition)g(will)f(b)r(e)h(called)g
Fp(e\016cient)p Fr(.)648 3012 y(W)-7 b(e)28 b(de\014ne)h(the)g
Fp(size)g Fr(of)g(a)f(KDS)h(to)f(b)r(e)h(the)g(maxim)n(um)f(n)n(um)n(b)
r(er)g(of)h(ev)n(en)n(ts)f(it)h(needs)523 3112 y(to)g(sc)n(hedule)f(in)
h(the)g(ev)n(en)n(t)f(queue)g(at)h(an)n(y)e(one)i(time.)40
b(W)-7 b(e)29 b(call)f(a)g(structure)h Fp(c)l(omp)l(act)g
Fr(if)523 3211 y(its)f(size)f(is)h(roughly)e(linear)h(in)h(the)g(n)n
(um)n(b)r(er)f(of)g(mo)n(ving)g(ob)5 b(jects.)648 3346
y(Finally)-7 b(,)35 b(w)n(e)e(call)g(a)h(KDS)f Fp(lo)l(c)l(al)i
Fr(if,)h(at)e(an)n(y)e(one)i(time,)h(the)g(maxim)n(um)e(n)n(um)n(b)r
(er)g(of)523 3446 y(ev)n(en)n(ts)23 b(in)h(the)g(ev)n(en)n(t)f(queue)g
(that)h(dep)r(end)g(on)g(a)f(single)g(ob)5 b(ject)23
b(is)h(small.)35 b(This)24 b(prop)r(ert)n(y)523 3546
y(is)k(crucial)e(for)h(fast)h(handling)f(of)h(\015igh)n(t)f(plan)h(up)r
(dates)2280 3516 y Fo(2)2317 3546 y Fr(.)648 3681 y(T)-7
b(o)35 b(summarize,)i(our)e(kinetic)h(data)f(structures)g(are)g
(di\013eren)n(t)h(from)f(classical)g(dy-)523 3780 y(namic)27
b(data)f(structures:)36 b(though)26 b(w)n(e)g(can)h(\(and)g(often)g(w)n
(an)n(t)f(to\))h(accommo)r(date)e(inser-)523 3880 y(tions)c(and)g
(deletions,)i(our)d(fo)r(cus)h(is)h(on)f(con)n(tin)n(uous)f(motion)h
(and)g(not)g(discrete)g(mo)r(di\014ca-)523 3980 y(tions.)41
b(W)-7 b(e)29 b(can)g(use)g(A)n(tallah's)f(framew)n(ork)f(of)i(dynamic)
g(computational)f(geometry)f(to)523 4079 y(get)f(lo)n(w)n(er)g(b)r
(ounds)g(on)h(the)g(amoun)n(t)f(of)h(w)n(ork)e(w)n(e)h(ha)n(v)n(e)g(to)
g(do.)37 b(But)27 b(our)e(structures)h(are)523 4179 y(on-line)f(and)h
(can)g(b)r(e)g(used)g(to)g(implemen)n(t)g(correct)f(sim)n(ulations)g
(ev)n(en)g(when)h(the)h(ob)5 b(ject)523 4278 y(\015igh)n(t)34
b(plans)g(c)n(hange)g(b)r(ecause)g(of)g(in)n(teractions)f(b)r(et)n(w)n
(een)i(the)f(ob)5 b(jects)34 b(themselv)n(es)g(or)523
4378 y(the)29 b(ob)5 b(jects)29 b(and)g(the)g(en)n(vironmen)n(t,)f(or)g
(ev)n(en)h(when)g(only)f(partial)g(information)g(ab)r(out)523
4478 y(the)35 b(motions)f(is)g(a)n(v)-5 b(ailable.)56
b(F)-7 b(urthermore,)35 b(w)n(e)f(pro)n(vide)f(some)h(general)f(to)r
(ols)h(for)g(the)523 4577 y(kinetization)24 b(of)g(static)f(algorithms)
g(that)h(lead)g(to)g(KDSs)g(that)g(are)f(easy)g(to)h(analyze)f(and)523
4677 y(p)r(erform)k(w)n(ell.)p 523 4742 1146 4 v 615
4796 a Fn(2)650 4819 y Fm(W)-6 b(e)48 b(remark)d(that)j(lo)r(calit)n(y)
f(implies)d(compactness,)53 b(but)48 b(all)e(other)h(qualit)n(y)g
(measures)f(are)523 4898 y(indep)r(enden)n(t.)1934 5147
y Fr(4)p eop
%%Page: 5 5
5 4 bop 523 614 a Fk(1.1)112 b(An)38 b(illustrativ)m(e)c(example)523
803 y Fr(T)-7 b(o)34 b(mak)n(e)f(the)i(issues)f(ab)r(o)n(v)n(e)f(more)g
(concrete,)i(let)g(us)f(consider)f(the)i(follo)n(wing)e(simple)523
903 y(1-D)e(situation.)46 b(Giv)n(en)31 b(a)f(set)h(of)g(p)r(oin)n(ts)g
(mo)n(ving)f(con)n(tin)n(uously)f(along)h(the)h Fq(y)s
Fr(-axis,)g(w)n(e)523 1002 y(are)24 b(in)n(terested)g(in)i(kno)n(wing)d
(at)i(all)g(times)g(whic)n(h)g(is)f(the)i(topmost)e(p)r(oin)n(t)h
(\(the)h(largest,)e(if)523 1102 y(w)n(e)k(think)h(of)g(the)f(p)r(oin)n
(ts)h(as)f(n)n(um)n(b)r(ers\).)39 b(If)29 b(t)n(w)n(o)f(p)r(oin)n(ts)g
(meet,)h(w)n(e)f(allo)n(w)g(them)h(to)f(pass)523 1202
y(eac)n(h)h(other)h(without)g(in)n(teraction.)44 b(Supp)r(ose)30
b(further)g(that)g(w)n(e)g(kno)n(w)g(that)g(the)g(p)r(oin)n(ts)523
1301 y(are)24 b(mo)n(ving)h(with)h(constan)n(t)e(v)n(elo)r(cities)h
(\(but)h(p)r(ossibly)f(a)g(di\013eren)n(t)h(one)f(eac)n(h\),)g
(starting)523 1401 y(from)i(an)h(arbitrary)d(initial)j
(con\014guration.)648 1536 y(If)g(w)n(e)f(dra)n(w)g(the)h(tra)5
b(jectories)26 b(of)h(the)i(p)r(oin)n(ts)e(in)h(the)g
Fq(ty)s Fr(-plane)f(\(where)h(the)g Fq(t)g Fr(axis)e(is)523
1635 y(horizon)n(tal)k(and)h(denotes)g(time\),)i(then)f(our)f(problem)f
(is)i(nothing)f(but)h(computing)f(the)523 1735 y(upp)r(er)20
b(en)n(v)n(elop)r(e)f(of)h(a)f(set)h(of)g(straigh)n(t)f(lines)h(in)g
(the)g(plane)g(\(or)f(at)h(least)f(the)i(part)e(of)h(it)g(that)523
1835 y(is)31 b(after)g(the)h(initial)g(time)g Fq(t)1424
1847 y Fo(0)1461 1835 y Fr(\).)49 b(This)31 b(upp)r(er)h(en)n(v)n(elop)
r(e)e(computation)h(can)g(b)r(e)h(trivially)523 1934
y(done)27 b(in)g Fq(O)r Fr(\()p Fq(n)14 b Fr(log)g Fq(n)p
Fr(\))28 b(time)f(with)g(a)g(divide)g(and)f(conquer)g(algorithm)g
(\(this)h(b)r(ound)h(holds)523 2034 y(ev)n(en)j(if)h(p)r(oin)n(ts)g
(can)f(app)r(ear)g(and)g(disapp)r(ear)g(at)g(arbitrary)f(times,)j(but)f
(then)g(it)g(is)f(not)523 2134 y(trivial)k([24)o(]\).)62
b(In)36 b(the)g(w)n(orst)f(case,)i(the)f(n)n(um)n(b)r(er)f(of)h(times)g
(during)f(the)i(motion)e(that)523 2233 y(the)28 b(topmost)g(p)r(oin)n
(t)g(c)n(hanges)e(is)i(\002\()p Fq(n)p Fr(\).)38 b(Th)n(us)27
b(w)n(e)h(ha)n(v)n(e)e(a)i(metho)r(d)g(for)f(computing)h(the)523
2333 y(con\014guration)21 b(function)i(of)g(in)n(terest)f(in)h(time)g
(that)g(is)f(only)h(a)f(logarithmic)f(factor)h(higher)523
2432 y(than)28 b(the)g(maxim)n(um)f(n)n(um)n(b)r(er)h(of)f(c)n(hanges)f
(in)i(the)g(con\014guration)e(function)i(itself.)648
2568 y(F)-7 b(or)21 b(our)h(purp)r(oses,)h(ho)n(w)n(ev)n(er,)e(this)i
(solution)f(is)h(unsatisfactory)-7 b(,)22 b(b)r(ecause)g(it)h(is)f
(really)523 2667 y(based)31 b(on)h(kno)n(wing)e(in)i(adv)-5
b(ance)32 b(the)g(full)g(motions)g(of)f(the)h(p)r(oin)n(ts.)50
b(What)32 b(w)n(e)f(seek)g(is)523 2767 y(a)36 b(strategy)g(that)h(w)n
(orks)e(on-line)h(and)g(can)h(accommo)r(date)e(\015igh)n(t)i(plan)f(up)
r(dates.)65 b(So)523 2866 y(supp)r(ose)34 b(instead)f(that)h(w)n(e)g
(try)g(to)f(main)n(tain)h(the)g(sorted)f(order)g(of)h(our)f(p)r(oin)n
(ts)h(along)523 2966 y(the)25 b Fq(y)s Fr(-axis,)e(on-line.)36
b(F)-7 b(or)23 b(ev)n(ery)h(pair)f(of)i(p)r(oin)n(ts)f(that)g(are)g
(curren)n(tly)f(consecutiv)n(e)h(along)523 3066 y(the)33
b Fq(y)s Fr(-axis)e(w)n(e)i(sc)n(hedule)f(an)h(ev)n(en)n(t)f(that)h(is)
g(the)g(\014rst)f(time)h(when)g(these)g(p)r(oin)n(ts)g(cross)523
3165 y(\(or)i(if,)i(as)e(ab)r(o)n(v)n(e,)g(our)g(kno)n(wledge)f(of)h
(the)g(motions)g(is)g(incomplete,)i(w)n(e)e(sc)n(hedule)g(an)523
3265 y(ev)n(en)n(t)27 b(based)g(on)g(our)g(estimate)h(of)f(ho)n(w)g
(long)g(w)n(e)g(can)h(b)r(e)g(sure)e(that)i(the)g(relativ)n(e)f(order)
523 3365 y(of)j(the)h(p)r(oin)n(ts)f(do)r(es)g(not)g(c)n(hange\).)45
b(When)30 b(t)n(w)n(o)g(adjacen)n(t)g(p)r(oin)n(ts)g(meet,)h(this)g
(destro)n(ys)523 3464 y(t)n(w)n(o)j(old)g(adjacencies)f(and)h(creates)f
(t)n(w)n(o)h(new)g(ones)g(along)f(the)i(sorted)e(list,)k(as)c(in)i(the)
523 3564 y(plane)g(sw)n(eep)f(algorithm)g(of)g(Ben)n(tley)h(and)g
(Ottmann)g([13)o(])g(mo)r(di\014ed)g(b)n(y)g(Bro)n(wn)e([15)o(].)523
3663 y(Th)n(us)24 b(w)n(e)g(desc)n(hedule)h(\(up)g(to\))f(t)n(w)n(o)g
(ev)n(en)n(ts)g(and)g(sc)n(hedule)g(\(up)h(to\))g(t)n(w)n(o)f(new)g(ev)
n(en)n(ts.)35 b(In)523 3763 y(this)c(pro)r(cess)f(w)n(e)g(alw)n(a)n(ys)
f(main)n(tain)h(the)h(sorted)f(list)h(of)g(p)r(oin)n(ts,)h(and)e(in)h
(particular)f(w)n(e)523 3863 y(alw)n(a)n(ys)24 b(kno)n(w)i(the)h
(topmost)f(one)g(as)f(w)n(ell.)36 b(Unfortunately)-7
b(,)27 b(although)f(the)g(kinetic)h(data)523 3962 y(structure)36
b(obtained)h(is)f(resp)r(onsiv)n(e,)i(lo)r(cal,)g(and)f(compact,)h(it)f
(ma)n(y)f(ha)n(v)n(e)g(to)h(pro)r(cess)523 4062 y(\002\()p
Fq(n)670 4032 y Fo(2)707 4062 y Fr(\))i(ev)n(en)n(ts)f(ev)n(en)g(when)h
(the)g(p)r(oin)n(ts)f(ha)n(v)n(e)f(the)i(simple)g(motion)f(describ)r
(ed)h(ab)r(o)n(v)n(e)523 4162 y(\(imagine)24 b(that)g(half)g(the)g(p)r
(oin)n(ts)g(are)f(stationary)-7 b(,)24 b(and)f(the)i(other)e(half)h
(pass)f(o)n(v)n(er)f(them\).)523 4261 y(Th)n(us)28 b(the)g(n)n(um)n(b)r
(er)g(of)g(in)n(ternal)g(ev)n(en)n(ts)f(here)g(is)h(an)g(order)f(of)h
(magnitude)g(greater)e(than)523 4361 y(those)j(a\013ecting)g(the)g
(con\014guration)f(function)i(w)n(e)e(are)g(in)n(terested)h(in|this)h
(solution)e(is)523 4460 y(not)g(e\016cien)n(t.)648 4596
y(A)22 b(third)h(structure,)g(and)f(one)g(that)h(lets)g(us)f(meet)h
(all)f(our)g(ob)5 b(jectiv)n(es,)22 b(is)g(to)h(main)n(tain)523
4695 y(the)c(mo)n(ving)f(p)r(oin)n(ts)h(in)g(a)f(heap,)j(with)e(the)g
(ro)r(ot)g(b)r(eing)g(the)g(topmost)f(\(maximal\))h(elemen)n(t.)523
4795 y(The)32 b(kinetization)f(of)g(the)h(heap)f(is)g(as)g(follo)n(ws.)
48 b(F)-7 b(or)30 b(eac)n(h)h(link)h(in)f(the)h(heap,)g(w)n(e)g(ha)n(v)
n(e)523 4894 y(a)26 b(certi\014cate)g(that)g(guaran)n(tees)e(that)j
(the)f(c)n(hild)g(p)r(oin)n(t)h(is)f(b)r(elo)n(w)g(the)g(paren)n(t)g(p)
r(oin)n(t,)h(and)1934 5147 y(5)p eop
%%Page: 6 6
6 5 bop 523 614 a Fr(an)36 b(asso)r(ciated)e(ev)n(en)n(t)h(at)h(the)g
(time)h(these)f(p)r(oin)n(ts)f(meet.)62 b(T)-7 b(o)36
b(pro)r(cess)f(an)g(ev)n(en)n(t)h(and)523 714 y(main)n(tain)31
b(a)g(v)-5 b(alid)31 b(heap,)h(it)g(is)f(enough)f(to)i(in)n(terc)n
(hange)d(the)j(paren)n(t)e(and)h(c)n(hild)h(of)f(the)523
814 y(link)e(asso)r(ciated)e(with)i(the)g(ev)n(en)n(t)f(\(Figure)g
(1\),)h(as)f(all)g(the)h(other)f(heap)g(inequalities)g(are)523
913 y(still)38 b(v)-5 b(alid)38 b(at)g(that)g(time)h(\(here,)h(w)n(e)e
(are)f(making)g(strong)g(use)h(of)g(the)g(con)n(tin)n(uit)n(y)f(of)523
1013 y(the)f(motions)f(and)g(of)h(the)g(h)n(yp)r(othesis)f(of)g
(non-degeneracy\).)59 b(When)36 b(a)f(sw)n(ap)g(of)g(t)n(w)n(o)523
1112 y(elemen)n(ts)24 b(happ)r(ens)g(in)g(the)g(heap,)g(up)g(to)g(four)
f(adjacency)g(\(paren)n(t/c)n(hild\))h(relationships)523
1212 y(can)d(c)n(hange)e(in)i(the)h(heap,)g(so)e(w)n(e)h(ma)n(y)f(ha)n
(v)n(e)g(to)g(desc)n(hedule)h(four)f(ev)n(en)n(ts)h(and)f(resc)n
(hedule)523 1312 y(four)f(more.)33 b(This)19 b(describ)r(es)f(our)h
Fp(kinetic)j(he)l(ap)p Fr(,)h(whic)n(h)c(main)n(tains)f(the)h(topmost)g
(elemen)n(t)523 1411 y(at)28 b(all)f(times.)37 b(Again,)27
b(resp)r(onsiv)n(eness,)f(lo)r(calit)n(y)-7 b(,)27 b(and)g(compactness)
g(are)g(immediate.)1365 1527 y
 9323399 9043682 8814755 34403860 21773762 47033958 startTexFig
 1365 1527 a
%%BeginDocument: kinetic-heapchange.ps
%AI5_FileFormat 2.1
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 0 0 552 728
%AI3_DocumentPreview: Header
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 1
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -54 876 1 826 581 18 1 1 126 77
%AI5_OpenViewLayers: 7

% ------------------------------------------------------
% ------------------------------------------------------

userdict /Adobe_level2_AI5 23 dict dup begin
	put

% use packed arrays immediately
	% packedarray emulation
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
		end
		0
	} if
	pop

% activate packing now
	userdict /defaultpacking currentpacking put true setpacking


% initialize, terminate
	% note : no binding loop needed here by design

	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
			end
		} if
	} bind def

% mark for later stack clean-up
	mark

% custom color business
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}	% don't bind 'setcmykcolor in this procedure
		def
	} if

%	new version checks for non-numeric version strings (5.0.1 fix bh 10/25/93)
%	/gt38? {version cvx exec} stopped {pop true} {38 gt} ifelse def
	
%	newer version handles errors on clones with cvx or exec which would leave junk on the stack
%	(bh 12/2/93)
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def

	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put

% test for Level 2 availability
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put


/level2ScreenFreq		%	halftoneDict level2ScreenFreq screenFreq
{
	begin
		60	% 60 lpi is default
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
	end
} bind def

userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put

level2? not
	{
		% LEVEL 1+ EMULATIONS (typesetter/color printer extensions)

		% cmyk => gray conversion emulation
		% note this revision approved by Ed Taft
		% for correcting the out of gamut problem
		% in our current emulations

		% don't bind these guys so 'setgray/currentgray can be overloaded
		/setcmykcolor where not
		{
			% see red book II, pp. 305
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if

		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if


		% LEVEL 2 EMULATIONS

		% setoverprint emulation
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if

		% selectfont emulation
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if

		% cshow emulation
		/cshow where not
		{
			% {proc} (string)
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if

% clean up
	cleartomark

	/anyColor?
	{
		add add add 0 ne
	} bind def

	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def

	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def

	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put

% *** other separation state tests if we're not on a composite page	
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
		end
	} if

	end defaultpacking setpacking


% ------------------------------------------------------
% ------------------------------------------------------

currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize	% varsDict mainDict initialize -
{
	begin	% begin main procset
	begin	% begin vars procset
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
	end

	% take main and vars off the stack
	end
	end

	Adobe_typography_AI5 begin
} def
/terminate	% - terminate -
{
	currentdict Adobe_typography_AI5 eq
	{
		end
	} if
} def

% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]
/modifyEncoding
{
	/_tempEncode exch ddef

	% pointer for sequential encodings
	/_pntr 0 ddef
	{
		% get bottom object
		counttomark -1 roll

		% is it a mark ?
		dup type dup /marktype eq
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....

			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop

	% return the modified encoding
	_tempEncode
} def

/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def

% re-define font
% expected arguments
% for 'normal fonts : 
% [ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ
%
% for cartographic, pictographic, and expert fonts :
% [ ... number value stream ... /_Symbol/Symbol 
%	direction fontScript defaultEncoding TZ
% for blended fonts w/ default encoding :
% [ /_AdobeSans_20ULig1XCond-Bold/AdobeSans 
%	direction fontScript defaultEncoding [ w0 w1 ... wn ] TZ
% for blended fonts w/ special encoding :
% [ ... number value stream ... /_AdobeSans_20ULig1XCond/AdobeSans 
%	direction fontScript defaultEncoding [ w0 w1 ... wn ] TZ
/TZ
{
	% set weight vector (if present)
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse

	% platform dependent coding flag
	/_useNativeEncoding exch def

	% pop fontScript & direction
	pop pop

	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict

	begin

	% copy all the values but the FID
	% into the new dictionary
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	% discard last mark
	pop

	% define FontName
	/FontName exch def

	% if no re-encoding stream is present
	% then if the base encoding vector of the font
	% is the same as StandardEncoding
	% and the use platform encoding flag is true
	% then install AI platform encoding
	% else leave the base encoding in effect

	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		% clean up
		cleartomark
	}
	{
		% custom encoding to be done
		% start off with a copy of the font's standard encoding
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
	end

	% register the new font
	definefont pop
} def

% text painting operators
/tr	% string tr ax ay string 
{
	_ax _ay 3 2 roll
} def
/trj	% string trj cx cy fillchar ax ay string 
{
	_cx _cy _sp _ax _ay 6 5 roll
} def

/a0
{
	/Tx	% text							% textString Tx -
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj	% justified text				% textString Tj -
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx	% text							% textString Tx -
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj	% justified text				% textString Tj -
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def

/e0
{
	/Tx	% text							% textString Tx -
	{
		tr _psf
	} ddef
	/Tj	% justified text				% textString Tj -
	{
		trj _pjsf
	} ddef
} def

/e1
{
	/Tx	% text							% textString Tx -
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj	% justified text				% textString Tj -
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def

/i0
{
	/Tx	% text							% textString Tx -
	{
		tr sp
	} ddef
	/Tj	% justified text				% textString Tj -
	{
		trj jsp
	} ddef
} def

/i1
{
	W N
} def

/o0
{
	/Tx	% text							% textString Tx -
	{
		tr sw rmoveto
	} ddef
	/Tj	% justified text				% textString Tj -
	{
		trj swj rmoveto
	} ddef
} def

/r0
{
	/Tx	% text							% textString Tx -
	{
		tr _ctm _pss
	} ddef
	/Tj	% justified text				% textString Tj -
	{
		trj _ctm _pjss
	} ddef
} def

/r1
{
	/Tx	% text							% textString Tx -
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj	% justified text				% textString Tj -
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def

% font operators

% Binding
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def

/TO	% end text					% TO -
{
	iTe _ctm setmatrix newpath
} def

% Text paths
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def

/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def

% Render mode & matrix operators
/Tr	% begin render					% render Tr - 
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def

/iTm	% internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def

/Tm	% set text matrix				% a b c d tx ty Tm -
{
	_tm astore pop iTm 0 0 moveto
} def

/Td	% translate text matrix 		% tx ty Td -
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def

/iTe	% end render					% - iTe -
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def


% Attributes
/Ta	% set alignment					% alignment Ta -
{
	pop
} def

/Tf	% set font name and size		% fontname size Tf -
{
	dup 1000 div /_fScl exch ddef
% was  (bh 11/23/93)
% 	exch findfont exch scalefont setfont
%
	selectfont
} def

/Tl	% set leading					% leading paragraphLeading Tl -
{
	pop
	0 exch _leading astore pop
} def

/Tt	% set user tracking				% userTracking Tt -
{
	pop
} def

/TW	% set word spacing				% minSpace optSpace maxSpace TW -
{
	3 npop
} def

/Tw	% set computed word spacing		% wordSpace Tw
{
	/_cx exch ddef
} def

/TC	% set character spacing			% minSpace optSpace maxSpace TC -
{
	3 npop
} def

/Tc	% set computed char spacing 	% charSpace Tc -
{
	/_ax exch ddef
} def

/Ts	% set super/subscripting (rise)	% rise Ts -
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def

/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
	3 npop
} def

/Tz	% set horizontal scaling		% scalePercent Tz -
{
	100 div /_hs exch ddef
	iTm
} def

/TA	% set pairwise kerning			% autoKern TA -
%	autoKern = 0 -> no pair kerning
%			 = 1 -> automatic pair kerning
{
	pop
} def

/Tq	% set hanging quotes			% hangingQuotes Tq -
%	hangingQuotes 	= 0 -> no hanging quotes
%			 		= 1 -> hanging quotes
{
	pop
} def

/Th	% set hyphenation				% hyphenate? limitLines? minLead minTail maxLines Th -
% 	hyphenate?	= 0 -> don't hyphenate
%				= 1 -> do hyphenate
% 	limitLines? = 0 -> no limit
%				= 1 -> limit consecutive hyphenated lines
%	minLead		Closest hyphen to beginning of word (0..n)
% 	minTail		Closest hyphen to end of word (0..n)
% 	maxLines	Maximum number of consecutive hyphenated lines (1..n)
{
	pop pop pop pop pop
} def


% Text Bodies
/TX
{
	pop
} def

% /Tx	% non-justified text			% textString Tx -
% /Tj	% justified text				% textString Tj -

/Tk	% kern							% autoKern kernValue Tk -
%  	autoKern = 0 -> manual kern, = 1 -> auto kern
%	kernValue = kern value in em/1000 space
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
	2 npop
} def

/T*	% carriage return & line feed	% - T* -
{
	_leading aload pop neg Td
} def

/T*-	% carriage return & negative line feed	% - T*- -
{
	_leading aload pop Td
} def

/T-	% print a discretionary hyphen	% - T- -
{
	% backup the pen position by the letterspacing so that
	% full-justified, auto-hyphenated lines display properly
	% [John Farmer 11/18/95]
	_ax neg 0 rmoveto
	_hyphen Tx
} def

/T+	% discretionary hyphen hyphen	% - T+ -
{
} def

/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def

/TS	% special chars					% textString justified TS -
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def

% Tab extensions for 5.5 (Glenn Reid 1/26/94)

/Xb % begin tab definitions			% <unused> tabCount Xb -
{
	pop pop
} def
/Tb /Xb load def

/Xe % one tab stop					% leader(char) decimal(char) type(int) distance Xe -
{
	pop pop pop pop
} def
/Te /Xe load def

/XB % end tab definitions			% - XB -
{
} def
/TB /XB load def

currentdict readonly pop
end
setpacking


% ------------------------------------------------------
% ColorImage Emulation and Separation Code for Grayscale, RGB and CMYK images
% Version 1.0 12/25/95
% Copyright (C) 1995-96
% Adobe Systems Incorporated
% All Rights Reserved
% ------------------------------------------------------

userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 17 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin

% ------------------------------------------------------
% Routine Overview
% 
%	String Iterators
%		WalkRGBString (given a single source string, convert each pixel to cmyk and call a proc)
%		WalkCMYKString (given a single source string, get the components and call a proc)
% 
%	Level1 Emulator Routines
%		StuffRGBIntoGrayString
%		RGBToGrayImageProc
%		StuffCMYKIntoGrayString 
%		CMYKToGrayImageProc 
%		ColorImageCompositeEmulator 
% 
%	ColorImage CMYK Separation Hacks (For [Applications] that only support planar images)
%		CMYKToSeparatedCMYKImageProc
% 
%	ColorImage and Utility Routines.
%		FourEqual
%		TestPlateIndex
%		colorimage
% 
% ------------------------------------------------------	

/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def

/terminate { end } def

currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 14 dict def
} if

Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
end

/WalkRGBString null def
/WalkCMYKString null def

/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def

/SeparateCMYKImageProc null def

/FourEqual null def
/TestPlateIndex null def

% define _colorimage if it doesn't already exist
currentdict /_colorimage known not
{
	/colorimage where
	{
		% sourcedictionary (systemdict or a separation proc redefinition)
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if

/_currenttransfer systemdict /currenttransfer get def

/colorimage null def
/XI null def

% ------------------------------------------------------
% rgb proc out --WalkRGBString--
% ------------------------------------------------------

/WalkRGBString
{
	% rgb proc out
	0 3 index

	% rgb proc out outindex rgb
	dup length 1 sub 0 3 3 -1 roll
	{
		% rgb proc out outindex rgb index
		3 getinterval { } forall

		% call the stuff proc
		% rgb proc out outindex r g b
		5 index exec

		% push rgb for the next loop iteration
		% rgb proc out outindex
		3 index
		% rgb proc out outindex rgb
	} for
	
	% clean up the stack
	% rgb proc out outindex rgb
	 5 { pop } repeat

} def

% ------------------------------------------------------
% cmyk proc gray --WalkCMYKString--
% ------------------------------------------------------

/WalkCMYKString
{
	% cmyk proc gray
	0 3 index

	% cmyk proc gray grayindex cmyk
	dup length 1 sub 0 4 3 -1 roll
	{
		% cmyk proc gray grayindex cmyk index
		4 getinterval { } forall
		
		% cmyk proc gray grayindex c m y k
		6 index exec
		
		% cmyk proc gray grayindex
		3 index
		
		% cmyk proc gray grayindex cmyk
	} for
	
	% clean up the stack
	% cmyk proc gray grayindex cmyk
	5 { pop } repeat
	
} def

% ------------------------------------------------------
% gray grayindex r g b --StuffRGBIntoGrayString-- gray grayindex
% ------------------------------------------------------

/StuffRGBIntoGrayString
{
	% gray grayindex r g b
	.11 mul exch
	
	% gray grayindex r bk g
	.59 mul add exch
	
	% gray grayindex bkgk r
	.3 mul add
	
	% gray grayindex k
	cvi 3 copy put
	
	% gray grayindex k
	pop 1 add
} def

% ------------------------------------------------------
% --RGBToGrayImageProc-- string
% ------------------------------------------------------

/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin	
		% call the source proc to get the chunky rgb string
		sourcearray 0 get exec

		% make a grayscale string of the same pixel count (ouch, pull me out of this loop)
		% rgb
		dup length 3 idiv string

		% roll off a copy of the gray string
		% rgb gray
		dup 3 1 roll 
		
		% push the stuff proc that we want called by WalkRGBString
		% gray rgb gray
		/StuffRGBIntoGrayString load exch

		% call the rgb conversion iterator
		% gray rgb proc gray
		WalkRGBString

		% return the gray string
		% gray	
	end
} def

% ------------------------------------------------------
% gray grayindex c m y k --StuffCMYKIntoGrayString-- gray grayindex
% ------------------------------------------------------

/StuffCMYKIntoGrayString
{
	% gray grayindex c m y k
	exch .11 mul add
	
	% gray grayindex c m yk
	exch .59 mul add
	
	% gray grayindex c mkyk
	exch .3 mul add
	
	% pin k to 255
	% gray gray index k
	dup 255 gt { pop 255 } if
	
	% gray grayindex k
	255 exch sub cvi 3 copy put
	
	% gray grayindex k
	pop 1 add
} def

% ------------------------------------------------------
% --CMYKToGrayImageProc-- string
% ------------------------------------------------------

/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		% call the source proc to get the chunky cmyk string
		sourcearray 0 get exec

		% make a grayscale string of the same pixel count (ouch, pull me out of this loop)
		% cmyk
		dup length 4 idiv string

		% roll off a copy of the gray string
		% cmyk gray
		dup 3 1 roll 
		
		% push the stuff proc that we want called by WalkCMYKString
		% gray cmyk gray
		/StuffCMYKIntoGrayString load exch

		% call the cmyk iterator
		% gray cmyk proc gray
		WalkCMYKString

		% return the gray string
		% gray
	end
} def

% ------------------------------------------------------
% width height bitsperpixel matrix firstsource...lastsource multiplesources channelcount --ColorImageCompositeEmulator--
% ------------------------------------------------------

/ColorImageCompositeEmulator
{
	% Channelcount is already saved in Adobe_ColorImage_AI6_Vars. Our data is always in chunky form so punt if someone
	% calls colorimage on a level 1 device with planar data.
	% channelcount and multiplesources are already saved in Adobe_ColorImage_AI6_Vars. The image operator isn't going to use them.
	pop true eq
	{
		% pop off the parameters and return
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				% save off the original chunky source function
				sourcearray 0 3 -1 roll put
			
				% push the appropriate cover proc
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
			end
		} if
		image
	} ifelse
} def

% ------------------------------------------------------
% --SeparateCMYKImageProc-- string
% ------------------------------------------------------

/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin

		sourcecount 0 ne
		{
			% planar case: call the source proc for the current plate and return its result
			sourcearray plateindex get exec
		}
		{			
			% call the source proc to get the chunky cmyk string
			sourcearray 0 get exec
			
			% make a grayscale string of the same pixel count (ouch, pull me out of this loop)
			% cmyk
			dup length 4 idiv string
			
			% cmyk
			0 2 index
			
			% cmyk gray grayindex cmyk
			plateindex 4 2 index length 1 sub
			{
				% cmyk gray grayindex cmyk channelindex
				get 255 exch sub
				
				% cmyk gray grayindex grayvalue
				3 copy put pop 1 add
				
				% cmyk gray grayindex
				2 index
			} for

			% return the gray string
			% cmyk gray grayindex cmyk
			pop pop exch pop
		} ifelse
	end
} def
	
% ------------------------------------------------------
% s1 s2 s3 s4 c1 c2 c3 c4 --FourEqual--
% ------------------------------------------------------

/FourEqual
{
	% s1 s2 s3 s4 c1 c2 c3 c4
	4 index ne
	{
		pop pop pop false
	}
	{
		% s1 s2 s3 s4 c1 c2 c3
		4 index ne
		{
			pop pop false
		}
		{
			% s1 s2 s3 s4 c1 c2
			4 index ne
			{
				pop false
			}
			{
				% s1 s2 s3 s4 c1
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def

% ------------------------------------------------------
%  --TestPlateIndex-- plateindex
% ------------------------------------------------------

/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		% assume we're not separating
		/plateindex -1 def

		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore

			% cyan plate?
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				% magenta plate?
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					% yellow plate?
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						% black plate
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
	end
} def

% ------------------------------------------------------
% width height bitsperpixel matrix firstsource...lastsource multiplesources channelcount --colorimage--
% ------------------------------------------------------

/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def

		% setup for following if statement
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
	end
	
	% is this not 1 or 8 bit?
	{
		% Call the original proc if the image is at a weird bit depth. This will display a composite if we're separating, but too bad.
		/_colorimage load null ne
		{
			% call the original (they probably punt if we're separating)
			_colorimage
		}
		{
			% pop off the parameters and return
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		% Call the saved colorimage operator if this an rgb, we're printing a composite or we're separating
		% an image to a custom plate. The last case assumes that the separation procs surrounding us
		% take care of punching out
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			% Call the colorimage emulator if we're printing to a level 1 device
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				% call image if this is a grayscale so that Quark doesn't die on custom plates
				dup 1 eq
				{
					pop pop image
				}
				{
					% draw to the null device if we're on a custom plate
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						% stolen from PhotoShop
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						% push the appropriate transfer proc (first case is negative
						% second case is positive) and call settransfer
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					% restore from the null device if necessary
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			% Are we separating a grayscale image?
			dup 1 eq
			{
				% let the surrounding separation procset handle the separation
				pop pop
				image
			}
			{
				% pop channelcount and multiplesources since they're not used by the image operator
				pop pop

				% Prepare to call the image operator with a cover proc
				Adobe_ColorImage_AI6_Vars begin
					% save off the source procs for our cover proc
					% width height bitsperpixel matrix firstsource...lastsource
					sourcecount -1 0
					{			
						% width height bitsperpixel matrix firstsource...lastsource index
						exch sourcearray 3 1 roll put
					} for

					/SeparateCMYKImageProc load
				end

				% bypass the separation procset since some applications don't handle chunky and the
				% old separator doesn't handle colorimage
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def

% ------------------------------------------------------
% --XI--
% ------------------------------------------------------

/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			% skip the %BeginBinary comment
			currentfile 128 string readline pop pop
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			% synch the PostScript fill with Illustrator's notion of the current fill
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
			
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			% call image if passed grayscale or bitmap data. Some applications
			% die if colorimage is called with gray data.
			XIChannelCount 1 eq
			{
				% Some applications refuse to separate a grayscale image to the black plate if
				% the currentgray is white. Hack around.
				
				gsave
				0 setgray
				
				image
				
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse

		grestore
	end
} def
	
end


% ------------------------------------------------------
% ------------------------------------------------------

currentpacking true setpacking

% 71 vars, but leave slack of 10 entries for custom Postscript fragments
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put

% paint operands
/_eo false def
/_lp /none def
/_pf
{
} def	% paint fill
/_ps
{
} def	% paint stroke
/_psf
{
} def	% paint string fill
/_pss
{
} def	% paint string stroke
/_pjsf
{
} def	% paint justified string fill
/_pjss
{
} def	% paint justified string stroke
/_pola 0 def
/_doClip 0 def

% paint operators
/cf currentflat def	% - cf flatness

% typography operands
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def	% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def	% y character spacing
/_cx 0 def	% x word spacing
/_cy 0 def	% y word spacing
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def

% typography operators
/Tx
{
} def
/Tj
{
} def

% compound path operators
/CRender
{
} def

% printing
/_AI3_savepage
{
} def

% color operands
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def

% pattern operands
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def

% discard variables (12 total)

/discardSave null def	% holds save used in discard loop
/buffer 256 string def	% line buffer string : assume 256 chars/line
/beginString null def	% begin delimiter
/endString null def	% end delimiter
/endStringLength null def	% holds buffer size for reading by byte technique
/layerCnt 1 def	% internal variables for discard loop
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def

% variable for doing clipping without rendering
/clipForward? false def

% end the vars dictionary
end
% =========================================


userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if

userdict /Adobe_Illustrator_AI5 get begin


% initialization
/initialize	% - initialize -
{
	% pushing main on the stack
	Adobe_Illustrator_AI5 dup begin

	% push the vars dictionary
	Adobe_Illustrator_AI5_vars begin

	% at this point the main and vars dictionaries
	% are in the state we wish them to be
	% on exit from the initialize call

	% bind the procedures in the discard dictionary
	discardDict
	{
		bind pop pop
	} forall

	% begin the nc dictionary
	dup /nc get begin

	% bind the procs in main
	{
		% added a test for type = operatortype so procedures like Ln can be defined as an alias for 'pop
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall

	% turn off 'nc
	end

	newpath

	% on exit we have main and vars on top of dict stack
} def

/terminate	% - terminate -
{
	end
	end
} def

% definition operators
/_	% - _ null
null def
/ddef	% key value ddef -
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput	% key value literal xput -
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
	end
} def
/npop	% integer npop -
{
	{
		pop
	} repeat
} def

% marking operators
/sw	% ax ay string sw x y
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj	% cx cy fillchar ax ay string swj x y
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss	% ax ay string matrix ss -
{
	4 1 roll
	{
		% matrix ax ay char 0 0 {proc} -
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss	% cx cy fillchar ax ay string matrix jss -
{
	4 1 roll
	{
		% cx cy fillchar matrix ax ay char 0 0 {proc} -   
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def

% path operators
/sp	% ax ay string sp -
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp	% cx cy fillchar ax ay string jsp -
{
	{
		% cx cy fillchar ax ay char 0 0 {proc} -
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def

% path construction operators
/pl	% x y pl x y
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def

/setstrokeadjust where
{
	pop true setstrokeadjust
	/c	% x1 y1 x2 y2 x3 y3 c -
	{
		curveto
	} def
	/C
	/c load def
	/v	% x2 y2 x3 y3 v -
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y	% x1 y1 x2 y2 y -
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l	% x y l -
	{
		lineto
	} def
	/L
	/l load def
	/m	% x y m -
	{
		moveto
	} def
}
{
	% else
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse

% graphic state operators
/d	% array phase d -
{
	setdash
} def
/cf
{
} def	% - cf flatness
/i	% flatness i -
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j	% linejoin j -
{
	setlinejoin
} def
/J	% linecap J -
{
	setlinecap
} def
/M	% miterlimit M -
{
	setmiterlimit
} def
/w	% linewidth w -
{
	setlinewidth
} def

% path painting operators
/XR	% flag XR -
{
	0 ne
	/_eo exch ddef
} def
/H	% - H -
{
} def
/h	% - h -
{
	closepath
} def
/N	% - N -
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n	% - n -
{
	N
} def
/F	% - F -
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f	% - f -
{
	closepath
	F
} def
/S	% - S -
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s	% - s -
{
	closepath
	S
} def
/B	% - B -
{
	_pola 0 eq
	{
		_doClip 1 eq	% F clears _doClip
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b	% - b -
{
	closepath
	B
} def
/W	% - W -
{
	/_doClip 1 ddef
} def
/*	% - [string] * -
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	% used to call newpath only if _polo was 0; now newpath is called unconditionally (bh 3/24/94)
	newpath
} def

% group operators
/u	% - u -
{
} def
/U	% - U -
{
} def
/q	% - q -
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q	% - Q -
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u	% - *u -
{
	_pola 1 add /_pola exch ddef
} def
/*U	% - *U -
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D	% polarized D -
{
	pop
} def
/*w	% - *w -
{
} def
/*W	% - *W -
{
} def

% place operators
/`	% matrix llx lly urx ury string ` -
{
	/_i save ddef

% * special case of clipping forward without rendering
	% use 'nulldevice if true
	clipForward?
	{
		nulldevice
	} if

	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~	% - ~ -
{
	end
	_i restore
} def

% color operators
/O	% flag O -
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R	% flag R -
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g	% gray g -
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G	% gray G -
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k	% cyan magenta yellow black k -
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K	% cyan magenta yellow black K -
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x	% cyan magenta yellow black name gray x -
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X	% cyan magenta yellow black name gray X -
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def

% locked object operator
/A	% value A -
{
	pop
} def

% annotate page operator
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def



% object tag operator
% joe holt November 20, 1994

% /name (value) XT
/XT {
	pop pop
} def


% begin layer PostScript implementation

% general purpose discard loop
% works on early level 1 (v.23, v.38) PostScript printers
% version 0.02 04/03/93
% Bill Woodruff

% constraints :

% if nested discards must be handled
% then the begin and end delimiting
% strings must be of equal length

% arguments

% #nestingFlag
% #nestingFlag = 0  				no nesting
% #nestingFlag = 1  				nesting

% non-nested case
% note : since the non-nested case is invoked
% after the ocurrence of a beginning string
% we only have to look for the ending string
% it is not necessary to specify a beginning string

% 0 (endString) 

% nested case

% (beginString) 1 (endString) 

% the discard procedure is defined in the main dictionary
% it turns the discard dictionary on to execute the discard function
/discard
{
	% test for version, hash a key
	% get and execute the discard procedure from dictionary
	% execute it in a stopped context so we can bail with 'stop
	% wrap it in a save so we don't have to reset variables
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
	end
	discardSave restore
} bind def

% build the discard dictionary which will contain only procedures
userdict /discardDict 7 dict dup begin
put

% pre 38 initialization
/pre38Initialize
{
	% used as buffer size for reading by byte technique	
	/endStringLength endString length store

	/newBuff buffer 0 endStringLength getinterval store	%	new buffer equal in length to end string
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	%	pointer to from 2nd to last char in new buffer
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store	%	pointer to last char in new buffer
} def

% for <=38	
/shiftBuffer
{
	% shift last chars of newBuff to start of newBuff
	newBuff 0 newBuffButFirst putinterval
	% new character into last byte of newBuff
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def

% discard procedures

% no nesting, older ps
0
{
	pre38Initialize
	mark
	% fill the buffer
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def

% nesting, older ps
1
{
	pre38Initialize

	/beginString exch store

	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse

			shiftBuffer
		} loop
	} if
} def

% no nesting, newer ps
2
{
	mark
	{
		% read a line : exit if end of file reached
		currentfile buffer readline not
		{
		stop
		} if

		% end of layer ?
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def

% nesting, newer ps
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		% read a line : exit if end of file reached
		currentfile buffer readline not
		{
		stop
		} if

		% start of layer ?
		dup beginString eq
		{
			% update layer counter
			pop /layerCnt dup load 1 add store
		}
		{
			% end of layer ?
			endString eq
			{
				% stop if we're not nested
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					% nested : decrement layer counter
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def

% end discard dictionary
end

% define the dictionary for clipping without rendering

userdict /clipRenderOff 15 dict dup begin
put

% flag for marking this dictionary as active
% so we can test in /` and wrap placed
% elements in nulldevice
% /clipForward? true def

% re-define rendering primitives to clip and newpath
% based on value of /_doClip flag
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall

% modify 'Tr so Tj and Tx are never set up by
% the calls to 'a0, 'e0, etc.
/Tr /pop load def

% special case of 'cshow ?
% is so, we'll have to overload toplevels
% /patternashow /patternawidthshow
% /patternashowstroke
% /patternawidthshowstroke
% /ss /jss /sp /jsp

% perhaps we can bracket out patterns at a higher level ?
% for example, by modifying 'E to pop off its parameters

% call to 'show in 'patternpath ?
% calls to 'ashow in '_psf ?
% calls to 'awidthshow in '_pjsf ?
% calls to 'widthshow in '_jss and '_jsp ?

% disable gradient operators
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def

% end dictionary for clipping without rendering
end

/Lb	% visible preview enabled printing dimmed masks colorIndex red green blue  ==> Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop

	% #masks #printing 

	% assume that
	% masks = 1 masks forward, masks = 0 no masking or only local masking	

	% do the right thing for printing and masking layer
	0 eq
	{
		% non-printing layer

		0 eq
		{
			% no masking forward from this layer
			% nested discard call
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			% masking forward from this layer
			% no printing, but clip path must survive
			
			% set the clipForward? flag in the vars dict
			/clipForward? true def
			
			% redefine Tx and Tj in the vars dict
			/Tx /pop load def
			/Tj /pop load def
			
			% turn on the no rendering dictionary
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		% printing layer

		% encapsulate layer with 'save
		% only if there is no masking forward

		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def

% end layer :
% assume that if discardSave is non-null
% then the layer was bracketed by 'save...restore
% else we must test for clipping forward
/LB	% ==> Lb ==> .....
{
	discardSave dup null ne
	{
		% undo the save
		restore
	}
	{
		pop

		clipForward?
		{
			% assume dictionary stack :

			%		vars			
			%		clipRenderOff			
			%		main

			currentdict
			end
			end
			begin

			% dictionary stack :

			%		vars			
			%		main
					
			/clipForward? false ddef

		} if
	} ifelse
} bind def

% begin palette discard
% assume no nesting
/Pb	% topLeftCell selected Pb -
{
	pop pop
	% non nested discard
	0 (%AI5_EndPalette) discard
} bind def

% other type of discard
% assume no nesting
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def

% express layer name
/Ln /pop load def	% ==> Ln ==> .....

% path center-point flag operator
/Ap	% value Ap -
/pop load def

% device-independent flatness
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def

% multi-layer clipping
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def

% null color operators
/nc 3 dict def
nc begin
/setgray	% gray setgray -
{
	pop
} bind def
/setcmykcolor	% cyan magenta yellow black setcmykcolor -
{
	4 npop
} bind def
/setcustomcolor	% object tint setcustomcolor -
{
	2 npop
} bind def
% exit 'nc dictionary
currentdict readonly pop
end

% exit main dictionary
% currentdict readonly pop
end
setpacking

Adobe_level2_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Times-Italic Times-Italic
[/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding TrueType
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Blue Dots-Transparent)
(Blue Dots-Transparent) 3.88 3.88 32.68 32.68 [
%AI3_Tile
(0 O 0 R 1 0.7 0 0 k 1 0.7 0 0 K) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 0.5 w 4 M []0 d
%AI3_Note:
0 D
32.68 1 m
34.27 1 35.56 2.29 35.56 3.88 c
35.56 5.471 34.27 6.76 32.68 6.76 c
31.089 6.76 29.8 5.471 29.8 3.88 c
29.8 2.29 31.089 1 32.68 1 c
f
18.28 1 m
19.87 1 21.16 2.29 21.16 3.88 c
21.16 5.471 19.87 6.76 18.28 6.76 c
16.689 6.76 15.4 5.471 15.4 3.88 c
15.4 2.29 16.689 1 18.28 1 c
f
3.88 1 m
5.47 1 6.76 2.29 6.76 3.88 c
6.76 5.471 5.47 6.76 3.88 6.76 c
2.29 6.76 1 5.471 1 3.88 c
1 2.29 2.29 1 3.88 1 c
f
32.68 15.4 m
34.27 15.4 35.56 16.69 35.56 18.28 c
35.56 19.871 34.27 21.16 32.68 21.16 c
31.089 21.16 29.8 19.871 29.8 18.28 c
29.8 16.69 31.089 15.4 32.68 15.4 c
f
18.28 15.4 m
19.87 15.4 21.16 16.69 21.16 18.28 c
21.16 19.871 19.87 21.16 18.28 21.16 c
16.689 21.16 15.4 19.871 15.4 18.28 c
15.4 16.69 16.689 15.4 18.28 15.4 c
f
3.88 15.4 m
5.47 15.4 6.76 16.69 6.76 18.28 c
6.76 19.871 5.47 21.16 3.88 21.16 c
2.29 21.16 1 19.871 1 18.28 c
1 16.69 2.29 15.4 3.88 15.4 c
f
32.68 29.8 m
34.27 29.8 35.56 31.09 35.56 32.68 c
35.56 34.271 34.27 35.56 32.68 35.56 c
31.089 35.56 29.8 34.271 29.8 32.68 c
29.8 31.09 31.089 29.8 32.68 29.8 c
f
18.28 29.8 m
19.87 29.8 21.16 31.09 21.16 32.68 c
21.16 34.271 19.87 35.56 18.28 35.56 c
16.689 35.56 15.4 34.271 15.4 32.68 c
15.4 31.09 16.689 29.8 18.28 29.8 c
f
3.88 29.8 m
5.47 29.8 6.76 31.09 6.76 32.68 c
6.76 34.271 5.47 35.56 3.88 35.56 c
2.29 35.56 1 34.271 1 32.68 c
1 31.09 2.29 29.8 3.88 29.8 c
f
11.08 8.2 m
12.67 8.2 13.96 9.49 13.96 11.08 c
13.96 12.671 12.67 13.96 11.08 13.96 c
9.489 13.96 8.2 12.671 8.2 11.08 c
8.2 9.49 9.489 8.2 11.08 8.2 c
f
25.48 8.2 m
27.07 8.2 28.36 9.49 28.36 11.08 c
28.36 12.671 27.07 13.96 25.48 13.96 c
23.889 13.96 22.6 12.671 22.6 11.08 c
22.6 9.49 23.889 8.2 25.48 8.2 c
f
11.08 22.6 m
12.67 22.6 13.96 23.89 13.96 25.48 c
13.96 27.071 12.67 28.36 11.08 28.36 c
9.489 28.36 8.2 27.071 8.2 25.48 c
8.2 23.89 9.489 22.6 11.08 22.6 c
f
25.48 22.6 m
27.07 22.6 28.36 23.89 28.36 25.48 c
28.36 27.071 27.07 28.36 25.48 28.36 c
23.889 28.36 22.6 27.071 22.6 25.48 c
22.6 23.89 23.889 22.6 25.48 22.6 c
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Bricks)
(Bricks) 2.565 5.19 74.565 77.19 [
(0 O 0 R 0.3 0.85 0.85 0 k 0.3 0.85 0.85 0 K) @
_ &
(0 O 0 R 1 g 1 G) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 0.3 w 4 M []0 d
%AI3_Note:
0 D
1.6 73.6 m
75.6 73.6 l
S
1.6 66.399 m
75.6 66.399 L
S
1.6 59.199 m
75.6 59.199 L
S
1.6 51.998 m
75.6 51.998 L
S
1.6 44.798 m
75.6 44.798 L
S
1.6 37.597 m
75.6 37.597 L
S
1.6 30.397 m
75.6 30.397 L
S
1.6 23.196 m
75.6 23.196 L
S
1.6 15.996 m
75.6 15.996 L
S
1.6 8.796 m
75.6 8.796 L
S
70.975 73.6 m
70.975 66.412 l
S
56.575 73.6 m
56.575 66.412 L
S
42.175 73.6 m
42.175 66.412 L
S
27.775 73.6 m
27.775 66.412 L
S
13.375 73.6 m
13.375 66.412 L
S
70.975 59.162 m
70.975 51.975 l
S
56.575 59.162 m
56.575 51.975 L
S
42.175 59.162 m
42.175 51.975 L
S
27.775 59.162 m
27.775 51.975 L
S
13.375 59.162 m
13.375 51.975 L
S
70.975 44.787 m
70.975 37.6 l
S
56.575 44.787 m
56.575 37.6 L
S
42.175 44.787 m
42.175 37.6 L
S
27.775 44.787 m
27.775 37.6 L
S
13.375 44.787 m
13.375 37.6 L
S
70.975 30.412 m
70.975 23.225 l
S
56.575 30.412 m
56.575 23.225 L
S
42.175 30.412 m
42.175 23.225 L
S
27.775 30.412 m
27.775 23.225 L
S
13.375 30.412 m
13.375 23.225 L
S
70.975 15.975 m
70.975 8.787 l
S
56.575 15.975 m
56.575 8.787 L
S
42.175 15.975 m
42.175 8.787 L
S
27.775 15.975 m
27.775 8.787 L
S
13.375 15.975 m
13.375 8.787 L
S
63.762 8.787 m
63.762 1.6 L
S
49.362 8.787 m
49.362 1.6 L
S
34.962 8.787 m
34.962 1.6 L
S
20.562 8.787 m
20.562 1.6 L
S
6.162 8.787 m
6.162 1.6 l
S
63.762 23.225 m
63.762 16.037 L
S
49.362 23.225 m
49.362 16.037 L
S
34.962 23.225 m
34.962 16.037 L
S
20.562 23.225 m
20.562 16.037 L
S
6.162 23.225 m
6.162 16.037 l
S
63.762 37.6 m
63.762 30.412 L
S
49.362 37.6 m
49.362 30.412 L
S
20.562 37.6 m
20.562 30.412 L
S
6.162 37.6 m
6.162 30.412 l
S
63.762 51.975 m
63.762 44.787 L
S
49.362 51.975 m
49.362 44.787 L
S
34.962 51.975 m
34.962 44.787 L
S
20.562 51.975 m
20.562 44.787 L
S
6.162 51.975 m
6.162 44.787 l
S
63.762 66.412 m
63.762 59.225 L
S
49.362 66.412 m
49.362 59.225 L
S
34.962 66.412 m
34.962 59.225 L
S
20.562 66.412 m
20.562 59.225 L
S
6.162 66.412 m
6.162 59.225 l
S
63.762 80.849 m
63.762 73.662 L
S
49.362 80.849 m
49.362 73.662 L
S
34.962 80.849 m
34.962 73.662 L
S
20.562 80.849 m
20.562 73.662 L
S
6.162 80.849 m
6.162 73.662 l
S
34.962 37.6 m
34.962 30.412 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Confetti)
(Confetti) 4.85 3.617 76.85 75.617 [
(0 O 0 R 1 g 1 G) @
_ &
(0 O 0 R 0 g 0 G) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 0.3 w 4 M []0 d
%AI3_Note:
0 D
10.6 64.867 m
7.85 62.867 l
S
9.1 8.617 m
6.85 6.867 l
S
78.1 68.617 m
74.85 67.867 l
S
76.85 56.867 m
74.35 55.117 l
S
79.6 51.617 m
76.6 51.617 l
S
76.35 44.117 m
73.6 45.867 l
S
78.6 35.867 m
76.6 34.367 l
S
76.1 23.867 m
73.35 26.117 l
S
78.1 12.867 m
73.85 13.617 l
S
68.35 14.617 m
66.1 12.867 l
S
76.6 30.617 m
73.6 30.617 l
S
62.85 58.117 m
60.956 60.941 l
S
32.85 59.617 m
31.196 62.181 l
S
47.891 64.061 m
49.744 66.742 l
S
72.814 2.769 m
73.928 5.729 l
S
67.976 2.633 m
67.35 5.909 l
S
61.85 27.617 m
59.956 30.441 l
S
53.504 56.053 m
51.85 58.617 l
S
52.762 1.779 m
52.876 4.776 l
S
45.391 5.311 m
47.244 7.992 l
S
37.062 3.375 m
35.639 5.43 l
S
55.165 34.828 m
57.518 37.491 l
S
20.795 3.242 m
22.12 5.193 l
S
14.097 4.747 m
15.008 8.965 l
S
9.736 1.91 m
8.073 4.225 l
S
31.891 5.573 m
32.005 8.571 l
S
12.1 70.367 m
15.6 68.867 l
S
9.35 54.867 m
9.6 58.117 l
S
12.85 31.867 m
14.35 28.117 l
S
10.1 37.367 m
12.35 41.117 l
S
34.1 71.117 m
31.85 68.617 l
S
38.35 71.117 m
41.6 68.367 l
S
55.1 71.117 m
58.35 69.117 l
S
57.35 65.117 m
55.35 61.867 l
S
64.35 66.367 m
69.35 68.617 l
S
71.85 62.867 m
69.35 61.117 l
S
23.6 70.867 m
23.6 67.867 l
S
20.6 65.867 m
17.35 65.367 l
S
24.85 61.367 m
25.35 58.117 l
S
25.85 65.867 m
29.35 66.617 l
S
14.1 54.117 m
16.85 56.117 l
S
12.35 11.617 m
12.6 15.617 l
S
12.1 19.867 m
14.35 22.367 l
S
26.1 9.867 m
23.6 13.367 l
S
34.6 47.117 m
32.1 45.367 l
S
62.6 41.867 m
59.85 43.367 l
S
31.6 35.617 m
27.85 36.367 l
S
36.35 26.117 m
34.35 24.617 l
S
33.85 14.117 m
31.1 16.367 l
S
37.1 9.867 m
35.1 11.117 l
S
34.35 20.867 m
31.35 20.867 l
S
44.6 56.617 m
42.1 54.867 l
S
47.35 51.367 m
44.35 51.367 l
S
44.1 43.867 m
41.35 45.617 l
S
43.35 33.117 m
42.6 30.617 l
S
43.85 23.617 m
41.1 25.867 l
S
44.35 15.617 m
42.35 16.867 l
S
67.823 31.1 m
64.823 31.1 l
S
27.1 32.617 m
29.6 30.867 l
S
31.85 55.117 m
34.85 55.117 l
S
19.6 40.867 m
22.1 39.117 l
S
16.85 35.617 m
19.85 35.617 l
S
20.1 28.117 m
22.85 29.867 l
S
52.1 42.617 m
54.484 44.178 l
S
52.437 50.146 m
54.821 48.325 l
S
59.572 54.133 m
59.35 51.117 l
S
50.185 10.055 m
53.234 9.928 l
S
51.187 15.896 m
53.571 14.075 l
S
58.322 19.883 m
59.445 16.823 l
S
53.1 32.117 m
50.6 30.367 l
S
52.85 24.617 m
49.6 25.617 l
S
61.85 9.117 m
59.1 10.867 l
S
69.35 34.617 m
66.6 36.367 l
S
67.1 23.617 m
65.1 22.117 l
S
24.435 46.055 m
27.484 45.928 l
S
25.437 51.896 m
27.821 50.075 l
S
62.6 47.117 m
65.321 46.575 l
S
19.85 19.867 m
20.35 16.617 l
S
21.85 21.867 m
25.35 22.617 l
S
37.6 62.867 m
41.6 62.117 l
S
38.323 42.1 m
38.823 38.6 l
S
69.35 52.617 m
66.85 53.867 l
S
14.85 62.117 m
18.1 59.367 l
S
9.6 46.117 m
7.1 44.367 l
S
20.6 51.617 m
18.6 50.117 l
S
46.141 70.811 m
47.994 73.492 l
S
69.391 40.561 m
71.244 43.242 l
S
38.641 49.311 m
39.35 52.117 l
S
25.141 16.811 m
25.85 19.617 l
S
36.6 32.867 m
34.6 31.367 l
S
6.1 68.617 m
2.85 67.867 l
S
4.85 56.867 m
2.35 55.117 l
S
7.6 51.617 m
4.6 51.617 l
S
6.6 35.867 m
4.6 34.367 l
S
6.1 12.867 m
1.85 13.617 l
S
4.6 30.617 m
1.6 30.617 l
S
72.814 74.769 m
73.928 77.729 l
S
67.976 74.633 m
67.35 77.909 l
S
52.762 73.779 m
52.876 76.776 l
S
37.062 75.375 m
35.639 77.43 l
S
20.795 75.242 m
22.12 77.193 l
S
9.736 73.91 m
8.073 76.225 l
S
10.1 23.617 m
6.35 24.367 l
S
73.217 18.276 m
71.323 21.1 l
S
28.823 39.6 m
29.505 42.389 l
S
49.6 38.617 m
47.6 37.117 l
S
60.323 73.6 m
62.323 76.6 l
S
60.323 1.6 m
62.323 4.6 l
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Cross Texture)
(Cross Texture) 1 1 58.6 58.6 [
(0 O 0 R 1 1 0.2 0 k 1 1 0.2 0 K) @
_ &
(0 O 0 R 1 g 1 G) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 0.3 w 4 M []0 d
%AI3_Note:
0 D
53.5 55 m
56.5 55 l
S
39.1 55 m
42.1 55 l
S
24.7 55 m
27.7 55 l
S
10.3 55 m
13.3 55 l
S
46.3 47.8 m
49.3 47.8 l
S
31.9 47.8 m
34.9 47.8 l
S
17.5 47.8 m
20.5 47.8 l
S
3.1 47.8 m
6.1 47.8 l
S
53.5 40.6 m
56.5 40.6 l
S
39.1 40.6 m
42.1 40.6 l
S
24.7 40.6 m
27.7 40.6 l
S
10.3 40.6 m
13.3 40.6 l
S
46.3 33.4 m
49.3 33.4 l
S
31.9 33.4 m
34.9 33.4 l
S
17.5 33.4 m
20.5 33.4 l
S
3.1 33.4 m
6.1 33.4 l
S
53.5 26.2 m
56.5 26.2 l
S
39.1 26.2 m
42.1 26.2 l
S
24.7 26.2 m
27.7 26.2 l
S
10.3 26.2 m
13.3 26.2 l
S
46.3 19 m
49.3 19 l
S
31.9 19 m
34.9 19 l
S
17.5 19 m
20.5 19 l
S
3.1 19 m
6.1 19 l
S
53.5 11.8 m
56.5 11.8 l
S
39.1 11.8 m
42.1 11.8 l
S
24.7 11.8 m
27.7 11.8 l
S
10.3 11.8 m
13.3 11.8 l
S
46.3 4.6 m
49.3 4.6 l
S
31.9 4.6 m
34.9 4.6 l
S
17.5 4.6 m
20.5 4.6 l
S
3.1 4.6 m
6.1 4.6 l
S
55 56.5 m
55 53.5 l
S
40.6 56.5 m
40.6 53.5 l
S
26.2 56.5 m
26.2 53.5 l
S
11.8 56.5 m
11.8 53.5 l
S
47.8 49.3 m
47.8 46.3 l
S
33.4 49.3 m
33.4 46.3 l
S
19 49.3 m
19 46.3 l
S
4.6 49.3 m
4.6 46.3 l
S
55 42.1 m
55 39.1 l
S
40.6 42.1 m
40.6 39.1 l
S
26.2 42.1 m
26.2 39.1 l
S
11.8 42.1 m
11.8 39.1 l
S
47.8 34.9 m
47.8 31.9 l
S
33.4 34.9 m
33.4 31.9 l
S
19 34.9 m
19 31.9 l
S
4.6 34.9 m
4.6 31.9 l
S
55 27.7 m
55 24.7 l
S
40.6 27.7 m
40.6 24.7 l
S
26.2 27.7 m
26.2 24.7 l
S
11.8 27.7 m
11.8 24.7 l
S
47.8 20.5 m
47.8 17.5 l
S
33.4 20.5 m
33.4 17.5 l
S
19 20.5 m
19 17.5 l
S
4.6 20.5 m
4.6 17.5 l
S
55 13.3 m
55 10.3 l
S
40.6 13.3 m
40.6 10.3 l
S
26.2 13.3 m
26.2 10.3 l
S
11.8 13.3 m
11.8 10.3 l
S
47.8 6.1 m
47.8 3.1 l
S
33.4 6.1 m
33.4 3.1 l
S
19 6.1 m
19 3.1 l
S
4.6 6.1 m
4.6 3.1 l
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Parquet Floor)
(Parquet Floor) 3.85 3.85 75.85 75.85 [
(0 O 0 R 0.26 0.497 0.75 0 k 0.26 0.497 0.75 0 K) @
_ &
(0 O 0 R 0 g 0 G) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 0.3 w 4 M []0 d
%AI3_Note:
0 D
37.6 6.1 m
37.6 10.598 L
19.6 10.598 L
19.6 6.1 L
37.6 6.1 L
s
73.6 6.1 m
73.6 10.598 L
55.6 10.598 L
55.6 6.1 L
73.6 6.1 L
s
19.6 24.1 m
19.6 28.598 L
1.6 28.598 L
1.6 24.1 L
19.6 24.1 L
s
55.6 24.1 m
55.6 28.598 L
37.6 28.598 L
37.6 24.1 L
55.6 24.1 L
s
82.6 24.1 m
82.6 28.598 L
73.6 28.598 L
73.6 24.1 L
82.6 24.1 L
s
37.6 42.1 m
37.6 46.598 L
19.6 46.598 L
19.6 42.1 L
37.6 42.1 L
s
73.6 42.1 m
73.6 46.598 L
55.6 46.598 L
55.6 42.1 L
73.6 42.1 L
s
19.6 60.1 m
19.6 64.598 L
1.6 64.598 L
1.6 60.1 L
19.6 60.1 L
s
55.6 60.1 m
55.6 64.598 L
37.6 64.598 L
37.6 60.1 L
55.6 60.1 L
s
82.6 60.1 m
82.6 64.598 L
73.6 64.598 L
73.6 60.1 L
82.6 60.1 L
s
37.6 15.098 m
37.6 19.598 L
19.6 19.598 L
19.6 15.098 L
37.6 15.098 L
s
73.6 15.098 m
73.6 19.598 L
55.6 19.598 L
55.6 15.098 L
73.6 15.098 L
s
19.6 33.098 m
19.6 37.598 L
1.6 37.598 L
1.6 33.098 L
19.6 33.098 L
s
55.6 33.098 m
55.6 37.598 L
37.6 37.598 L
37.6 33.098 L
55.6 33.098 L
s
82.6 33.098 m
82.6 37.598 L
73.6 37.598 L
73.6 33.098 L
82.6 33.098 L
s
37.6 51.098 m
37.6 55.598 L
19.6 55.598 L
19.6 51.098 L
37.6 51.098 L
s
73.6 51.098 m
73.6 55.598 L
55.6 55.598 L
55.6 51.098 L
73.6 51.098 L
s
19.6 69.098 m
19.6 73.598 L
1.6 73.598 L
1.6 69.098 L
19.6 69.098 L
s
55.6 69.098 m
55.6 73.598 L
37.6 73.598 L
37.6 69.098 L
55.6 69.098 L
s
82.6 69.098 m
82.6 73.598 L
73.6 73.598 L
73.6 69.098 L
82.6 69.098 L
s
15.1 19.598 m
10.6 19.598 L
10.6 1.6 L
15.1 1.6 L
15.1 19.598 L
s
51.1 19.598 m
46.6 19.598 L
46.6 1.6 L
51.1 1.6 L
51.1 19.598 L
s
33.1 37.598 m
28.6 37.598 L
28.6 19.6 L
33.1 19.6 L
33.1 37.598 L
s
69.1 37.598 m
64.6 37.598 L
64.6 19.6 L
69.1 19.6 L
69.1 37.598 L
s
15.1 55.598 m
10.6 55.598 L
10.6 37.6 L
15.1 37.6 L
15.1 55.598 L
s
51.1 55.598 m
46.6 55.598 L
46.6 37.6 L
51.1 37.6 L
51.1 55.598 L
s
33.1 73.598 m
28.6 73.598 L
28.6 55.6 L
33.1 55.6 L
33.1 73.598 L
s
69.1 73.598 m
64.6 73.598 L
64.6 55.6 L
69.1 55.6 L
69.1 73.598 L
s
15.1 82.598 m
10.6 82.598 L
10.6 73.6 L
15.1 73.6 L
15.1 82.598 L
s
51.1 82.598 m
46.6 82.598 L
46.6 73.6 L
51.1 73.6 L
51.1 82.598 L
s
19.6 19.598 m
15.1 19.598 L
15.1 1.6 L
19.6 1.6 L
19.6 19.598 L
s
55.6 19.598 m
51.1 19.598 L
51.1 1.6 L
55.6 1.6 L
55.6 19.598 L
s
37.6 37.598 m
33.1 37.598 L
33.1 19.6 L
37.6 19.6 L
37.6 37.598 L
s
73.6 37.598 m
69.1 37.598 L
69.1 19.6 L
73.6 19.6 L
73.6 37.598 L
s
19.6 55.598 m
15.1 55.598 L
15.1 37.6 L
19.6 37.6 L
19.6 55.598 L
s
55.6 55.598 m
51.1 55.598 L
51.1 37.6 L
55.6 37.6 L
55.6 55.598 L
s
37.6 73.598 m
33.1 73.598 L
33.1 55.6 L
37.6 55.6 L
37.6 73.598 L
s
73.6 73.598 m
69.1 73.598 L
69.1 55.6 L
73.6 55.6 L
73.6 73.598 L
s
19.6 82.598 m
15.1 82.598 L
15.1 73.6 L
19.6 73.6 L
19.6 82.598 L
s
55.6 82.598 m
51.1 82.598 L
51.1 73.6 L
55.6 73.6 L
55.6 82.598 L
s
6.1 19.598 m
1.6 19.598 L
1.6 1.6 L
6.1 1.6 L
6.1 19.598 L
s
42.1 19.598 m
37.6 19.598 L
37.6 1.6 L
42.1 1.6 L
42.1 19.598 L
s
78.1 19.598 m
73.6 19.598 L
73.6 1.6 L
78.1 1.6 L
78.1 19.598 L
s
24.1 37.598 m
19.6 37.598 L
19.6 19.6 L
24.1 19.6 L
24.1 37.598 L
s
60.1 37.598 m
55.6 37.598 L
55.6 19.6 L
60.1 19.6 L
60.1 37.598 L
s
6.1 55.598 m
1.6 55.598 L
1.6 37.6 L
6.1 37.6 L
6.1 55.598 L
s
42.1 55.598 m
37.6 55.598 L
37.6 37.6 L
42.1 37.6 L
42.1 55.598 L
s
78.1 55.598 m
73.6 55.598 L
73.6 37.6 L
78.1 37.6 L
78.1 55.598 L
s
24.1 73.598 m
19.6 73.598 L
19.6 55.6 L
24.1 55.6 L
24.1 73.598 L
s
60.1 73.598 m
55.6 73.598 L
55.6 55.6 L
60.1 55.6 L
60.1 73.598 L
s
6.1 82.598 m
1.6 82.598 L
1.6 73.6 L
6.1 73.6 L
6.1 82.598 L
s
42.1 82.598 m
37.6 82.598 L
37.6 73.6 L
42.1 73.6 L
42.1 82.598 L
s
78.1 82.598 m
73.6 82.598 L
73.6 73.6 L
78.1 73.6 L
78.1 82.598 L
s
37.6 1.6 m
37.6 6.098 L
19.6 6.098 L
19.6 1.6 L
37.6 1.6 L
s
73.6 1.6 m
73.6 6.098 L
55.6 6.098 L
55.6 1.6 L
73.6 1.6 L
s
19.6 19.6 m
19.6 24.098 L
1.6 24.098 L
1.6 19.6 L
19.6 19.6 L
s
55.6 19.6 m
55.6 24.098 L
37.6 24.098 L
37.6 19.6 L
55.6 19.6 L
s
82.6 19.6 m
82.6 24.098 L
73.6 24.098 L
73.6 19.6 L
82.6 19.6 L
s
37.6 37.6 m
37.6 42.098 L
19.6 42.098 L
19.6 37.6 L
37.6 37.6 L
s
73.6 37.6 m
73.6 42.098 L
55.6 42.098 L
55.6 37.6 L
73.6 37.6 L
s
19.6 55.6 m
19.6 60.098 L
1.6 60.098 L
1.6 55.6 L
19.6 55.6 L
s
55.6 55.6 m
55.6 60.098 L
37.6 60.098 L
37.6 55.6 L
55.6 55.6 L
s
82.6 55.6 m
82.6 60.098 L
73.6 60.098 L
73.6 55.6 L
82.6 55.6 L
s
37.6 73.6 m
37.6 78.098 L
19.6 78.098 L
19.6 73.6 L
37.6 73.6 L
s
73.6 73.6 m
73.6 78.098 L
55.6 78.098 L
55.6 73.6 L
73.6 73.6 L
s
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Scales)
(Scales) 1.6 9.3475 48.088 55.8355 [
(0 O 0 R 1 g 1 G) @
_ &
(0 O 0 R 0 g 0 G) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 0.3 w 4 M []0 d
%AI3_Note:
0 D
17.0956 9.3475 m
12.8162 9.3475 9.3475 5.8787 9.3475 1.6 C
9.3475 5.8787 5.8787 9.3475 1.6 9.3475 C
1.6 13.6262 5.0687 17.095 9.3475 17.095 c
13.6268 17.095 17.0956 13.6262 17.0956 9.3475 C
s
32.5918 9.3475 m
28.3125 9.3475 24.8437 5.8787 24.8437 1.6 C
24.8437 5.8787 21.3743 9.3475 17.0956 9.3475 C
17.0956 13.6262 20.5644 17.095 24.8437 17.095 c
29.1224 17.095 32.5918 13.6262 32.5918 9.3475 C
s
48.088 9.3475 m
43.8087 9.3475 40.3399 5.8787 40.3399 1.6 C
40.3399 5.8787 36.8705 9.3475 32.5918 9.3475 C
32.5918 13.6262 36.0606 17.095 40.3399 17.095 c
44.6186 17.095 48.088 13.6262 48.088 9.3475 C
s
17.0956 40.3393 m
12.8162 40.3393 9.3475 36.8699 9.3475 32.5912 C
9.3475 36.8699 5.8787 40.3393 1.6 40.3393 C
1.6 44.6181 5.0687 48.0874 9.3475 48.0874 c
13.6268 48.0874 17.0956 44.6181 17.0956 40.3393 C
s
17.0956 24.8431 m
12.8162 24.8431 9.3475 21.3743 9.3475 17.095 C
9.3475 21.3743 5.8787 24.8431 1.6 24.8431 C
1.6 29.1218 5.0687 32.5912 9.3475 32.5912 c
13.6268 32.5912 17.0956 29.1218 17.0956 24.8431 C
s
32.5918 24.8431 m
28.3125 24.8431 24.8437 21.3743 24.8437 17.095 C
24.8437 21.3743 21.3743 24.8431 17.0956 24.8431 C
17.0956 29.1218 20.5644 32.5912 24.8437 32.5912 c
29.1224 32.5912 32.5918 29.1218 32.5918 24.8431 C
s
48.088 24.8431 m
43.8087 24.8431 40.3399 21.3743 40.3399 17.095 C
40.3399 21.3743 36.8705 24.8431 32.5918 24.8431 C
32.5918 29.1218 36.0606 32.5912 40.3399 32.5912 c
44.6186 32.5912 48.088 29.1218 48.088 24.8431 C
s
32.5918 40.3393 m
28.3125 40.3393 24.8437 36.8699 24.8437 32.5912 C
24.8437 36.8699 21.3743 40.3393 17.0956 40.3393 C
17.0956 44.6181 20.5644 48.0874 24.8437 48.0874 c
29.1224 48.0874 32.5918 44.6181 32.5918 40.3393 C
s
48.088 40.3393 m
43.8087 40.3393 40.3399 36.8699 40.3399 32.5912 C
40.3399 36.8699 36.8705 40.3393 32.5918 40.3393 C
32.5918 44.6181 36.0606 48.0874 40.3399 48.0874 c
44.6186 48.0874 48.088 44.6181 48.088 40.3393 C
s
17.0956 55.8355 m
12.8162 55.8355 9.3475 52.3662 9.3475 48.0874 C
9.3475 52.3662 5.8787 55.8355 1.6 55.8355 C
1.6 60.1143 5.0687 63.5836 9.3475 63.5836 c
13.6268 63.5836 17.0956 60.1143 17.0956 55.8355 C
s
32.5918 55.8355 m
28.3125 55.8355 24.8437 52.3662 24.8437 48.0874 C
24.8437 52.3662 21.3743 55.8355 17.0956 55.8355 C
17.0956 60.1143 20.5644 63.5836 24.8437 63.5836 c
29.1224 63.5836 32.5918 60.1143 32.5918 55.8355 C
s
48.088 55.8355 m
43.8087 55.8355 40.3399 52.3662 40.3399 48.0874 C
40.3399 52.3662 36.8705 55.8355 32.5918 55.8355 C
32.5918 60.1143 36.0606 63.5836 40.3399 63.5836 c
44.6186 63.5836 48.088 60.1143 48.088 55.8355 C
s
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Table Cloth)
(Table Cloth) 5 5 77 77 [
(0 O 0 R 1 g 1 G) @
_ &
(0 O 0 R 0 0.4 0.4 0 k 0 0.4 0.4 0 K) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 0.5 w 4 M []0 d
%AI3_Note:
0 D
80 37 m
80 45 L
2 45 L
2 37 L
80 37 L
f
80 55 m
80 63 L
2 63 L
2 55 L
80 55 L
f
80.6667 73 m
80.6667 81 L
2.6667 81 L
2.6667 73 L
80.6667 73 L
f
80 19 m
80 27 L
2 27 L
2 19 L
80 19 L
f
80 1 m
80 9 L
2 9 L
2 1 L
80 1 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0.6 0.6 0 k 0 0.6 0.6 0 K) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 0.5 w 4 M []0 d
%AI3_Note:
0 D
37 2 m
45 2 L
45 80 L
37 80 L
37 2 L
f
55 2 m
63 2 L
63 80 L
55 80 L
55 2 L
f
73 2 m
81 2 L
81 80 L
73 80 L
73 2 L
f
19 2 m
27 2 L
27 80 L
19 80 L
19 2 L
f
1 2 m
9 2 L
9 80 L
1 80 L
1 2 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 1 1 0 k 0 1 1 0 K) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 0.5 w 4 M []0 d
%AI3_Note:
0 D
9 73 m
9 81 L
1 81 L
1 73 L
9 73 L
f
27 73 m
27 81 L
19 81 L
19 73 L
27 73 L
f
45 73 m
45 81 L
37 81 L
37 73 L
45 73 L
f
63 73 m
63 81 L
55 81 L
55 73 L
63 73 L
f
81 73 m
81 81 L
73 81 L
73 73 L
81 73 L
f
9 55 m
9 63 L
1 63 L
1 55 L
9 55 L
f
27 55 m
27 63 L
19 63 L
19 55 L
27 55 L
f
45 55 m
45 63 L
37 63 L
37 55 L
45 55 L
f
63 55 m
63 63 L
55 63 L
55 55 L
63 55 L
f
81 55 m
81 63 L
73 63 L
73 55 L
81 55 L
f
9 37 m
9 45 L
1 45 L
1 37 L
9 37 L
f
27 37 m
27 45 L
19 45 L
19 37 L
27 37 L
f
45 37 m
45 45 L
37 45 L
37 37 L
45 37 L
f
63 37 m
63 45 L
55 45 L
55 37 L
63 37 L
f
81 37 m
81 45 L
73 45 L
73 37 L
81 37 L
f
9 19 m
9 27 L
1 27 L
1 19 L
9 19 L
f
27 19 m
27 27 L
19 27 L
19 19 L
27 19 L
f
45 19 m
45 27 L
37 27 L
37 19 L
45 19 L
f
63 19 m
63 27 L
55 27 L
55 19 L
63 19 L
f
81 19 m
81 27 L
73 27 L
73 19 L
81 19 L
f
9 1 m
9 9 L
1 9 L
1 1 L
9 1 L
f
27 1 m
27 9 L
19 9 L
19 1 L
27 1 L
f
45 1 m
45 9 L
37 9 L
37 1 L
45 1 L
f
63 1 m
63 9 L
55 9 L
55 1 L
63 1 L
f
81 1 m
81 9 L
73 9 L
73 1 L
81 1 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Three Petals)
(Three Petals) 2.912 1.792 98.912 73.792 [
(0 O 0 R 0 g 0 G) @
_ &
(0 O 0 R 1 g 1 G) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 0.5 w 4 M []0 d
%AI3_Note:
0 D
2.912 25.792 m
4.825 28.68 3.325 29.705 2.912 29.705 c
2.5 29.705 1 28.68 2.912 25.792 C
f
50.912 25.792 m
52.825 28.68 51.325 29.705 50.912 29.705 c
50.5 29.705 49 28.68 50.912 25.792 C
f
50.912 1.792 m
52.825 4.68 51.325 5.705 50.912 5.705 c
50.5 5.705 49 4.68 50.912 1.792 C
f
2.912 1.792 m
4.825 4.68 3.325 5.705 2.912 5.705 c
2.5 5.705 1 4.68 2.912 1.792 C
f
26.912 13.792 m
28.825 16.68 27.325 17.705 26.912 17.705 c
26.5 17.705 25 16.68 26.912 13.792 C
f
98.912 25.792 m
100.825 28.68 99.325 29.705 98.912 29.705 c
98.5 29.705 97 28.68 98.912 25.792 C
f
98.912 1.792 m
100.825 4.68 99.325 5.705 98.912 5.705 c
98.5 5.705 97 4.68 98.912 1.792 C
f
74.912 13.792 m
76.825 16.68 75.325 17.705 74.912 17.705 c
74.5 17.705 73 16.68 74.912 13.792 C
f
2.912 49.792 m
4.825 52.68 3.325 53.705 2.912 53.705 c
2.5 53.705 1 52.68 2.912 49.792 C
f
50.912 49.792 m
52.825 52.68 51.325 53.705 50.912 53.705 c
50.5 53.705 49 52.68 50.912 49.792 C
f
26.912 37.792 m
28.825 40.68 27.325 41.705 26.912 41.705 c
26.5 41.705 25 40.68 26.912 37.792 C
f
98.912 49.792 m
100.825 52.68 99.325 53.705 98.912 53.705 c
98.5 53.705 97 52.68 98.912 49.792 C
f
74.912 37.792 m
76.825 40.68 75.325 41.705 74.912 41.705 c
74.5 41.705 73 40.68 74.912 37.792 C
f
2.912 73.792 m
4.825 76.68 3.325 77.705 2.912 77.705 c
2.5 77.705 1 76.68 2.912 73.792 C
f
50.912 73.792 m
52.825 76.68 51.325 77.705 50.912 77.705 c
50.5 77.705 49 76.68 50.912 73.792 C
f
26.912 61.792 m
28.825 64.68 27.325 65.705 26.912 65.705 c
26.5 65.705 25 64.68 26.912 61.792 C
f
98.912 73.792 m
100.825 76.68 99.325 77.705 98.912 77.705 c
98.5 77.705 97 76.68 98.912 73.792 C
f
74.912 61.792 m
76.825 64.68 75.325 65.705 74.912 65.705 c
74.5 65.705 73 64.68 74.912 61.792 C
f
3.949 25.197 m
7.407 25 7.536 26.812 7.329 27.169 c
7.121 27.525 5.479 28.304 3.949 25.197 C
f
51.949 25.197 m
55.407 25 55.536 26.812 55.329 27.169 c
55.121 27.525 53.479 28.304 51.949 25.197 C
f
51.949 1.197 m
55.407 1 55.536 2.812 55.329 3.169 c
55.121 3.525 53.479 4.304 51.949 1.197 C
f
3.949 1.197 m
7.407 1 7.536 2.812 7.329 3.169 c
7.121 3.525 5.479 4.304 3.949 1.197 C
f
27.949 13.197 m
31.407 13 31.536 14.812 31.329 15.169 c
31.121 15.525 29.479 16.304 27.949 13.197 C
f
75.949 13.197 m
79.407 13 79.536 14.812 79.329 15.169 c
79.121 15.525 77.479 16.304 75.949 13.197 C
f
3.949 49.197 m
7.407 49 7.536 50.812 7.329 51.169 c
7.121 51.525 5.479 52.304 3.949 49.197 C
f
51.949 49.197 m
55.407 49 55.536 50.812 55.329 51.169 c
55.121 51.525 53.479 52.304 51.949 49.197 C
f
27.949 37.197 m
31.407 37 31.536 38.812 31.329 39.169 c
31.121 39.525 29.479 40.304 27.949 37.197 C
f
75.949 37.197 m
79.407 37 79.536 38.812 79.329 39.169 c
79.121 39.525 77.479 40.304 75.949 37.197 C
f
3.949 73.197 m
7.407 73 7.536 74.812 7.329 75.169 c
7.121 75.525 5.479 76.304 3.949 73.197 C
f
51.949 73.197 m
55.407 73 55.536 74.812 55.329 75.169 c
55.121 75.525 53.479 76.304 51.949 73.197 C
f
27.949 61.197 m
31.407 61 31.536 62.812 31.329 63.169 c
31.121 63.525 29.479 64.304 27.949 61.197 C
f
75.949 61.197 m
79.407 61 79.536 62.812 79.329 63.169 c
79.121 63.525 77.479 64.304 75.949 61.197 C
f
49.876 25.197 m
48.345 28.304 46.704 27.525 46.496 27.169 c
46.288 26.812 46.418 25 49.876 25.197 C
f
49.876 1.197 m
48.345 4.304 46.704 3.525 46.496 3.169 c
46.288 2.812 46.418 1 49.876 1.197 C
f
25.876 13.197 m
24.345 16.304 22.704 15.525 22.496 15.169 c
22.288 14.812 22.418 13 25.876 13.197 C
f
97.876 25.197 m
96.345 28.304 94.704 27.525 94.496 27.169 c
94.288 26.812 94.418 25 97.876 25.197 C
f
97.876 1.197 m
96.345 4.304 94.704 3.525 94.496 3.169 c
94.288 2.812 94.418 1 97.876 1.197 C
f
73.876 13.197 m
72.345 16.304 70.704 15.525 70.496 15.169 c
70.288 14.812 70.418 13 73.876 13.197 C
f
49.876 49.197 m
48.345 52.304 46.704 51.525 46.496 51.169 c
46.288 50.812 46.418 49 49.876 49.197 C
f
25.876 37.197 m
24.345 40.304 22.704 39.525 22.496 39.169 c
22.288 38.812 22.418 37 25.876 37.197 C
f
97.876 49.197 m
96.345 52.304 94.704 51.525 94.496 51.169 c
94.288 50.812 94.418 49 97.876 49.197 C
f
73.876 37.197 m
72.345 40.304 70.704 39.525 70.496 39.169 c
70.288 38.812 70.418 37 73.876 37.197 C
f
49.876 73.197 m
48.345 76.304 46.704 75.525 46.496 75.169 c
46.288 74.812 46.418 73 49.876 73.197 C
f
25.876 61.197 m
24.345 64.304 22.704 63.525 22.496 63.169 c
22.288 62.812 22.418 61 25.876 61.197 C
f
97.876 73.197 m
96.345 76.304 94.704 75.525 94.496 75.169 c
94.288 74.812 94.418 73 97.876 73.197 C
f
73.876 61.197 m
72.345 64.304 70.704 63.525 70.496 63.169 c
70.288 62.812 70.418 61 73.876 61.197 C
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Waves-Transparent)
(Waves-Transparent) 4 5.89 113.125 31.693 [
%AI3_Tile
(0 O 0 R 1 0 0.35 0 k 1 0 0.35 0 K) @
(
%AI6_BeginPatternLayer
800 Ar
2 J 0 j 1.5 w 4 M []0 d
%AI3_Note:
0 D
113.125 12.602 m
106.95 12.602 102.306 13.907 99.484 14.73 c
96.664 15.553 92.018 16.858 85.844 16.858 c
79.67 16.858 75.024 15.553 72.203 14.73 c
69.382 13.906 64.737 12.602 58.562 12.602 c
52.388 12.602 47.743 13.907 44.922 14.73 c
42.101 15.553 37.455 16.858 31.281 16.858 c
25.107 16.858 20.461 15.553 17.641 14.73 c
14.819 13.907 10.174 12.602 4 12.602 c
S
113.125 8.301 m
106.95 8.301 102.306 9.606 99.484 10.429 c
96.664 11.252 92.018 12.557 85.844 12.557 c
79.67 12.557 75.024 11.252 72.203 10.429 c
69.382 9.606 64.737 8.301 58.562 8.301 c
52.388 8.301 47.743 9.606 44.922 10.429 c
42.101 11.252 37.455 12.557 31.281 12.557 c
25.107 12.557 20.461 11.252 17.641 10.429 c
14.819 9.606 10.174 8.301 4 8.301 c
S
113.125 4 m
106.95 4 102.306 5.305 99.484 6.128 c
96.664 6.951 92.018 8.256 85.844 8.256 c
79.67 8.256 75.024 6.951 72.203 6.128 c
69.382 5.305 64.737 4 58.562 4 c
52.388 4 47.743 5.305 44.922 6.128 c
42.101 6.951 37.455 8.256 31.281 8.256 c
25.107 8.256 20.461 6.951 17.641 6.128 c
14.819 5.305 10.174 4 4 4 c
S
113.125 29.805 m
106.95 29.805 102.306 31.11 99.484 31.933 c
96.664 32.756 92.018 34.061 85.844 34.061 c
79.67 34.061 75.024 32.756 72.203 31.933 c
69.382 31.109 64.737 29.805 58.562 29.805 c
52.388 29.805 47.743 31.11 44.922 31.933 c
42.101 32.756 37.455 34.061 31.281 34.061 c
25.107 34.061 20.461 32.756 17.641 31.933 c
14.819 31.11 10.174 29.805 4 29.805 c
S
113.125 25.504 m
106.95 25.504 102.306 26.809 99.484 27.632 c
96.664 28.455 92.018 29.76 85.844 29.76 c
79.67 29.76 75.024 28.455 72.203 27.632 c
69.382 26.809 64.737 25.504 58.562 25.504 c
52.388 25.504 47.743 26.809 44.922 27.632 c
42.101 28.455 37.455 29.76 31.281 29.76 c
25.107 29.76 20.461 28.455 17.641 27.632 c
14.819 26.809 10.174 25.504 4 25.504 c
S
113.125 21.203 m
106.95 21.203 102.306 22.508 99.484 23.331 c
96.664 24.154 92.018 25.459 85.844 25.459 c
79.67 25.459 75.024 24.154 72.203 23.331 c
69.382 22.508 64.737 21.203 58.562 21.203 c
52.388 21.203 47.743 22.508 44.922 23.331 c
42.101 24.154 37.455 25.459 31.281 25.459 c
25.107 25.459 20.461 24.154 17.641 23.331 c
14.819 22.508 10.174 21.203 4 21.203 c
S
113.125 16.902 m
106.95 16.902 102.306 18.207 99.484 19.03 c
96.664 19.853 92.018 21.158 85.844 21.158 c
79.67 21.158 75.024 19.853 72.203 19.03 c
69.382 18.207 64.737 16.902 58.562 16.902 c
52.388 16.902 47.743 18.207 44.922 19.03 c
42.101 19.853 37.455 21.158 31.281 21.158 c
25.107 21.158 20.461 19.853 17.641 19.03 c
14.819 18.207 10.174 16.902 4 16.902 c
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
3 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Red & Yellow)
(Red & Yellow) 0 2 Bd
[
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
FFFFFEFEFDFDFDFCFCFBFBFBFAFAF9F9F9F8F8F7F7F7F6F6F5F5F5F4F4F3F3F3F2F2F1F1F1F0F0EF
EFEFEEEEEDEDEDECECEBEBEBEAEAE9E9E9E8E8E7E7E7E6E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DF
DFDFDEDEDDDDDDDCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D5D5D5D4D4D3D3D3D2D2D1D1D1D0D0CF
CFCFCECECDCDCDCCCCCBCBCBCACAC9C9C9C8C8C7C7C7C6C6C5C5C5C4C4C3C3C3C2C2C1C1C1C0C0BF
BFBFBEBEBDBDBDBCBCBBBBBBBABAB9B9B9B8B8B7B7B7B6B6B5B5B5B4B4B3B3B3B2B2B1B1B1B0B0AF
AFAFAEAEADADADACACABABABAAAAA9A9A9A8A8A7A7A7A6A6A5A5A5A4A4A3A3A3A2A2A1A1A1A0A09F
9F9F9E9E9D9D9D9C9C9B9B9B9A9A9999
>
0
1 %_Br
[
0 1 0.6 0 1 50 100 %_Bs
0 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Blue Radial)
(Yellow & Blue Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Blue Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
(Yellow Stripe) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
0 0 0 0 k
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
0 0 0 0 k
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
0 0 0 0 k
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
47 4716 m
47 -3924 L
(N) *
267 4716 m
267 -3924 L
(N) *
704 4716 m
704 -3924 L
(N) *
-4014 632.6667 m
4626 632.6667 L
(N) *
0 O
0.97 g
0 R
0 G
146.1285 524.9857 m
146.1285 524.9857 L
146.5535 525.7914 152.5036 530.7283 v
155.0536 532.9723 153.3536 535.6653 147.4035 537.0117 c
146.5535 537.0117 146.5535 539.2557 147.4035 540.1534 c
151.6536 544.6415 154.2036 549.5785 150.8036 554.0666 c
149.9535 555.8618 143.1535 555.413 141.4535 556.3106 c
137.2035 559.9011 144.8535 563.4916 149.9535 567.0821 c
150.8036 567.5309 149.9535 568.8774 149.9535 569.3262 c
147.4035 569.775 143.1535 568.8774 142.3035 569.775 c
140.6035 570.2238 141.4535 572.0191 141.4535 573.3655 c
141.4535 573.8143 143.1535 574.7119 143.1535 575.1607 c
143.1535 576.0583 143.1535 576.956 143.1535 577.4048 c
144.8535 579.6489 148.2535 582.3417 143.1535 584.137 c
140.6035 584.5858 138.9035 585.0346 136.3534 585.9322 c
134.6534 586.381 134.6534 589.0739 136.3534 590.4203 c
139.7535 593.562 145.7035 595.3572 151.6536 597.6013 c
155.6868 599.1224 161.0036 601.1918 156.7536 603.8847 C
150.8036 605.6799 L
329.5 606.5 L
318.0749 597.1049 317.2249 595.3097 v
315.5249 592.6167 316.3749 589.4751 317.2249 586.7823 c
319.7749 582.7429 317.2249 578.7037 315.5249 574.6643 c
315.5249 572.4203 320.6249 570.625 323.1749 568.3809 c
324.0249 567.0345 324.0249 565.6881 323.1749 564.3416 c
321.4749 562.9951 318.0749 562.0975 317.2249 560.3023 c
317.2249 559.4047 316.3749 557.6095 317.2249 557.6095 c
319.7749 556.7118 324.0249 557.6095 324.875 556.7118 c
326.575 556.263 324.875 554.4677 324.875 553.1213 c
323.1749 550.8773 325.725 548.6332 324.875 546.3891 c
323.1749 544.1451 313.6999 542.4069 313.8249 539.2081 c
314.0057 534.5824 319.25 524.3323 y
146.1285 523.9857 L
B
0.68 g
255.8542 564.75 m
258.9375 570.9167 l
259.4375 564.3333 l
265.8542 563.0833 l
260.7709 560.9167 l
261.3909 555.3347 l
257.1042 560.1667 l
252.6353 554.9091 l
254.1875 562.25 l
248.9375 565.9167 l
255.8542 564.75 l
f
0.56 g
0 R
0.56 G
225.6271 599.6224 m
224.39 600.9495 l
231.8125 600.1532 l
230.8847 603.0728 l
240.1626 597.2337 l
229.3383 592.4564 l
231.8125 596.4375 l
225.3178 594.845 l
225.6271 599.6224 l
b
*u
0 g
142.3988 604.2989 m
142.3988 604.1967 142.3637 604.101 142.2936 604.0118 c
142.2233 603.9223 142.1261 603.8778 142.0016 603.8778 c
141.8931 603.8778 141.8038 603.912 141.7337 603.9807 c
141.6634 604.0492 141.6284 604.1298 141.6284 604.2223 c
141.6284 604.286 141.6586 604.3961 141.7193 604.5525 c
141.7193 604.5939 141.6985 604.6306 141.6571 604.6625 c
141.6156 604.6913 141.5614 604.7056 141.4944 604.7056 c
141.1817 604.7056 140.9202 604.4487 140.7097 603.9352 c
140.5915 603.6385 140.4592 603.1392 140.3125 602.4375 C
141.3796 602.4375 L
141.3126 602.1168 L
140.2455 602.1168 L
139.5421 599.0113 l
139.3538 598.1788 139.101 597.5057 138.7836 596.9921 c
138.4662 596.4786 138.0603 596.2217 137.566 596.2217 c
137.3396 596.2217 137.1537 596.2839 137.0085 596.4083 c
136.8635 596.5327 136.7908 596.6715 136.7908 596.8246 c
136.7908 596.9203 136.8219 597.0097 136.8841 597.0926 c
136.9463 597.1756 137.0396 597.217 137.164 597.217 c
137.2726 597.217 137.3642 597.1811 137.4392 597.1093 c
137.5142 597.0375 137.5516 596.949 137.5516 596.8438 c
137.5516 596.7863 137.5349 596.7282 137.5014 596.6691 c
137.4679 596.6102 137.4511 596.5695 137.4511 596.5471 c
137.4511 596.5184 137.4695 596.4944 137.5062 596.4753 c
137.5429 596.4562 137.5899 596.4466 137.6473 596.4466 c
137.9186 596.4466 138.1481 596.6604 138.3362 597.0878 c
138.4351 597.3112 138.526 597.619 138.609 598.0113 C
139.4751 602.1168 L
138.5898 602.1168 L
138.6568 602.4375 L
139.5612 602.4375 l
139.7558 603.1806 139.9742 603.7309 140.2168 604.0883 c
140.5772 604.637 141.0222 604.9114 141.5519 604.9114 c
141.7943 604.9114 141.996 604.8492 142.1572 604.7248 c
142.3182 604.6004 142.3988 604.4583 142.3988 604.2989 c
f
*U
*u
143.8157 528.7747 m
143.7358 528.8496 143.696 528.9494 143.696 529.0738 c
143.696 529.5937 143.897 530.2476 144.2989 531.0357 c
144.7615 531.9416 145.2464 532.3947 145.7536 532.3947 c
145.9513 532.3947 146.1157 532.3205 146.2465 532.1722 c
146.3772 532.0238 146.4427 531.8252 146.4427 531.5764 c
146.4427 531.0276 146.2209 530.4232 145.7776 529.7628 c
145.2862 529.0291 144.7583 528.6623 144.1937 528.6623 c
144.0214 528.6623 143.8953 528.6996 143.8157 528.7747 c
f
143.2414 528.6575 m
143.5157 528.5109 143.8171 528.4375 144.1458 528.4375 c
144.8667 528.4375 145.5637 528.774 146.2369 529.447 c
146.9291 530.1392 147.2753 530.8826 147.2753 531.6769 c
147.2753 532.0181 147.1691 532.3045 146.9571 532.5358 c
146.7449 532.767 146.4633 532.8828 146.1125 532.8828 c
145.7393 532.8828 145.3771 532.7216 145.0263 532.3995 c
144.8253 532.2143 144.5813 531.9177 144.2942 531.5094 c
145.2464 535.127 L
145.256 535.1892 L
145.256 535.2146 145.2488 535.2338 145.2344 535.2466 c
145.2201 535.2593 145.2048 535.2658 145.189 535.2658 c
145.1156 535.2658 144.9935 535.2466 144.8229 535.2084 c
144.6522 535.1701 144.5557 535.1493 144.5334 535.1461 c
144.3292 535.1141 144.1674 535.0919 144.0477 535.0792 c
143.9281 535.0663 143.8171 535.0519 143.7152 535.0361 c
143.7152 534.8686 L
143.8906 534.859 144.0047 534.8526 144.0573 534.8495 c
144.1099 534.8462 144.1473 534.8414 144.1697 534.8351 c
144.2463 534.8127 144.2949 534.7816 144.3157 534.7418 c
144.3363 534.7019 144.3468 534.6612 144.3468 534.6198 c
144.3468 534.5815 144.3428 534.5344 144.3348 534.4786 c
144.3268 534.4227 144.3133 534.3597 144.2942 534.2896 c
142.8634 529.002 l
142.841 528.9159 142.967 528.801 143.2414 528.6575 c
f
*U
*u
136.9816 579.1313 m
137.4346 579.916 137.9035 580.3084 138.3885 580.3084 c
138.583 580.3084 138.7122 580.2446 138.7761 580.117 c
138.8398 579.9893 138.8718 579.8283 138.8718 579.6337 c
138.8718 579.0179 138.6739 578.3656 138.2784 577.6766 c
137.8573 576.9428 137.4186 576.576 136.9625 576.576 c
136.7487 576.576 136.5972 576.6485 136.5079 576.7937 c
136.4185 576.9388 136.3739 577.1087 136.3739 577.3033 c
136.3739 577.8201 136.5764 578.4294 136.9816 579.1313 c
f
136.4792 579.4375 m
135.8411 578.7038 135.5222 577.9891 135.5222 577.2938 c
135.5222 576.8822 135.6258 576.5775 135.8332 576.3798 c
136.0404 576.1821 136.283 576.0833 136.5605 576.0833 c
136.9018 576.0833 137.2168 576.2013 137.5056 576.4372 c
137.7942 576.6732 138.0598 576.9763 138.3023 577.3464 c
138.264 577.1742 138.2353 577.0146 138.2162 576.8679 c
138.197 576.7211 138.1875 576.6143 138.1875 576.5473 c
138.1875 576.3495 138.2528 576.2123 138.3837 576.1359 c
138.4538 576.0976 138.532 576.0785 138.6181 576.0785 c
138.8797 576.0785 139.1747 576.2395 139.5034 576.5616 c
139.6884 576.7435 139.8399 576.922 139.958 577.0976 c
140.025 577.1981 L
139.9149 577.3033 L
139.7427 577.0959 139.607 576.9428 139.5082 576.844 c
139.3391 576.6813 139.2082 576.5999 139.1158 576.5999 c
139.0838 576.5999 139.0464 576.6126 139.0034 576.6382 c
138.9603 576.6636 138.9387 576.7196 138.9387 576.8057 c
138.9387 576.8407 138.9426 576.8799 138.9507 576.9229 c
138.9586 576.966 138.969 577.013 138.9818 577.0641 c
139.6087 579.3418 L
140.5274 582.7824 L
140.537 582.835 L
140.4939 582.8828 L
139.8559 582.7647 139.3566 582.6819 138.9962 582.634 c
138.9962 582.4761 L
139.0727 582.4824 139.134 582.4872 139.1804 582.4905 c
139.2266 582.4936 139.2769 582.4952 139.3311 582.4952 c
139.4173 582.4952 139.4834 582.4793 139.5297 582.4474 c
139.5759 582.4154 139.5991 582.3373 139.5991 582.2129 c
139.5991 582.1809 139.5967 582.1435 139.5919 582.1005 c
139.5871 582.0574 139.5767 582.0087 139.5608 581.9545 c
139.0153 579.9926 L
138.9802 580.1616 138.9323 580.2812 138.8718 580.3515 c
138.7665 580.4726 138.5878 580.5333 138.3358 580.5333 c
137.7329 580.5333 137.114 580.168 136.4792 579.4375 c
f
*U
0 To
1 0 0 1 148.5 551.0429 0 Tp
TP
0 Tr
/_Times-Italic 5.0401 Tf
0 Ts
166.6656 Tz
0 Tt
0 TA
%_ 0 XL
25.1999 0 Xb
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 0 2 2 3 Th
0 Tq
0 0 Tl
0 Tc
0 Tw
(\r) TX 
TO
*u
146.22 550.6848 m
146.3188 550.9241 146.4528 551.1744 146.6219 551.4361 c
146.7813 551.6594 146.9608 551.8596 147.1602 552.0366 c
147.3596 552.2137 147.5629 552.3022 147.7703 552.3022 c
147.8819 552.3022 147.9665 552.2663 148.024 552.1945 c
148.0814 552.1228 148.1101 552.0262 148.1101 551.905 c
148.1101 551.5701 147.9187 551.2327 147.5359 550.893 c
147.1531 550.5532 146.6569 550.3386 146.0477 550.2494 c
146.1082 550.4121 146.1657 550.5571 146.22 550.6848 c
f
145.4113 548.4502 m
145.6664 548.2109 145.963 548.0914 146.3013 548.0914 c
146.7798 548.0914 147.2567 548.262 147.7321 548.6033 c
148 548.7947 148.2058 548.9813 148.3493 549.1631 c
148.2249 549.2732 L
147.9345 549.0339 147.7129 548.868 147.5598 548.7755 c
147.2918 548.616 147.0382 548.5363 146.7989 548.5363 c
146.5468 548.5363 146.3291 548.6143 146.1458 548.7708 c
145.9623 548.927 145.8706 549.1455 145.8706 549.4263 c
145.8706 549.5443 145.8786 549.6424 145.8946 549.7206 c
145.9104 549.7987 145.9391 549.9032 145.9807 550.034 c
146.2534 550.0675 L
146.8468 550.1408 147.4122 550.341 147.9498 550.6681 c
148.4872 550.995 148.7561 551.3882 148.7561 551.8476 c
148.7561 552.074 148.6827 552.2448 148.536 552.3596 c
148.3891 552.4745 148.1914 552.5319 147.9426 552.5319 c
147.2694 552.5319 146.6171 552.2001 145.9855 551.5366 c
145.3474 550.8729 145.0284 550.1872 145.0284 549.479 c
145.0284 549.0323 145.156 548.6894 145.4113 548.4502 c
f
*U
*u
175.8938 619.7896 m
174.2812 619.7896 L
174.2812 620.45 l
174.9033 620.5105 175.3371 620.6118 175.5828 620.7538 c
175.8283 620.8957 176.0118 621.2314 176.1331 621.7611 C
176.8125 621.7611 L
176.8125 614.9375 L
175.8938 614.9375 L
175.8938 619.7896 l
f
*U
*u
285.8125 615.9375 m
285.8444 616.5276 285.9664 617.0412 286.1786 617.4783 c
286.3906 617.9153 286.8045 618.3124 287.4203 618.6698 C
288.3391 619.201 l
288.7506 619.4402 289.0392 619.6443 289.2052 619.8135 c
289.4667 620.0782 289.5976 620.3813 289.5976 620.7227 c
289.5976 621.1213 289.4779 621.438 289.2387 621.6725 c
288.9994 621.907 288.6803 622.0242 288.2816 622.0242 c
287.6914 622.0242 287.283 621.8008 287.0566 621.3543 c
286.9354 621.115 286.8684 620.7832 286.8557 620.359 C
285.98 620.359 l
285.9896 620.9555 286.0996 621.4419 286.3102 621.8185 c
286.6834 622.4819 287.3421 622.8138 288.2864 622.8138 c
289.0712 622.8138 289.6445 622.6016 290.0067 622.1773 c
290.3687 621.753 290.5498 621.2809 290.5498 620.7609 c
290.5498 620.2121 290.3568 619.7432 289.9708 619.3541 c
289.7474 619.1275 289.3471 618.8531 288.7697 618.531 C
288.1142 618.1674 l
287.8015 617.9951 287.5558 617.8308 287.3773 617.6745 c
287.0581 617.397 286.8572 617.0891 286.7743 616.751 C
290.5163 616.751 L
290.5163 615.9375 L
285.8125 615.9375 l
f
*U
u
u
1 Ap
0 R
0 G
173.1289 671.5193 m
173.1289 675.5082 175.7158 678.7419 178.907 678.7419 c
182.0982 678.7419 184.6852 675.5082 184.6852 671.5193 c
184.6852 667.5303 182.0982 664.2966 178.907 664.2966 c
175.7158 664.2966 173.1289 667.5303 173.1289 671.5193 c
s
1 D
161.5424 638.3433 m
164.7336 638.3433 167.3206 641.5771 167.3206 645.566 c
167.3206 649.555 164.7336 652.7887 161.5424 652.7887 c
158.3513 652.7887 155.7642 649.555 155.7642 645.566 c
155.7642 641.5771 158.3513 638.3433 161.5424 638.3433 c
s
194.2091 639.6766 m
197.4002 639.6766 199.9873 642.9104 199.9873 646.8994 c
199.9873 650.8882 197.4002 654.122 194.2091 654.122 c
191.0179 654.122 188.4309 650.8882 188.4309 646.8994 c
188.4309 642.9104 191.0179 639.6766 194.2091 639.6766 c
s
202.1465 690.88 m
205.3376 690.88 207.9247 694.1138 207.9247 698.1026 c
207.9247 702.0916 205.3376 705.3254 202.1465 705.3254 c
198.9553 705.3254 196.3683 702.0916 196.3683 698.1026 c
196.3683 694.1138 198.9553 690.88 202.1465 690.88 c
s
*u
0 Ap
0 O
0 g
0 D
160.6716 642.2355 m
160.6077 642.3104 160.5759 642.4102 160.5759 642.5346 c
160.5759 643.0545 160.7367 643.7084 161.0583 644.4965 c
161.4283 645.4024 161.8162 645.8555 162.222 645.8555 c
162.3802 645.8555 162.5116 645.7813 162.6163 645.633 c
162.7209 645.4846 162.7733 645.286 162.7733 645.0372 c
162.7733 644.4884 162.5959 643.884 162.2412 643.2236 c
161.8481 642.4899 161.4258 642.1231 160.974 642.1231 c
160.8362 642.1231 160.7354 642.1604 160.6716 642.2355 c
f
1 D
160.2122 642.1183 m
160.4317 641.9717 160.6728 641.8983 160.9358 641.8983 c
161.5125 641.8983 162.0701 642.2348 162.6087 642.9078 c
163.1624 643.6 163.4394 644.3434 163.4394 645.1377 c
163.4394 645.4789 163.3544 645.7653 163.1848 645.9966 c
163.015 646.2278 162.7898 646.3436 162.5091 646.3436 c
162.2105 646.3436 161.9208 646.1824 161.6402 645.8603 c
161.4794 645.6751 161.2841 645.3785 161.0544 644.9702 c
161.8162 648.5878 L
161.8239 648.65 L
161.8239 648.6754 161.8182 648.6946 161.8067 648.7074 c
161.7952 648.7201 161.783 648.7266 161.7703 648.7266 c
161.7116 648.7266 161.614 648.7074 161.4774 648.6692 c
161.3408 648.6309 161.2637 648.6101 161.2458 648.6069 c
161.0824 648.5749 160.953 648.5527 160.8573 648.54 c
160.7616 648.5271 160.6728 648.5127 160.5912 648.4969 c
160.5912 648.3294 L
160.7316 648.3198 160.8228 648.3134 160.8649 648.3103 c
160.9071 648.307 160.937 648.3022 160.9549 648.2959 c
161.0162 648.2735 161.055 648.2424 161.0717 648.2026 c
161.0882 648.1627 161.0965 648.122 161.0965 648.0806 c
161.0965 648.0423 161.0933 647.9952 161.087 647.9394 c
161.0805 647.8835 161.0697 647.8205 161.0544 647.7504 c
159.9098 642.4628 l
159.8919 642.3767 159.9927 642.2618 160.2122 642.1183 c
f
*U
*u
0 D
177.3769 670.7555 m
177.7393 671.5402 178.1144 671.9326 178.5024 671.9326 c
178.658 671.9326 178.7614 671.8688 178.8125 671.7412 c
178.8634 671.6135 178.889 671.4525 178.889 671.2579 c
178.889 670.6421 178.7308 669.9898 178.4144 669.3008 c
178.0775 668.567 177.7265 668.2002 177.3616 668.2002 c
177.1905 668.2002 177.0693 668.2727 176.9979 668.4179 c
176.9264 668.563 176.8907 668.7329 176.8907 668.9275 c
176.8907 669.4443 177.0527 670.0536 177.3769 670.7555 c
f
1 D
176.975 671.0617 m
176.4645 670.328 176.2093 669.6133 176.2093 668.918 c
176.2093 668.5064 176.2922 668.2017 176.4582 668.004 c
176.624 667.8063 176.818 667.7075 177.0401 667.7075 c
177.313 667.7075 177.5651 667.8255 177.7961 668.0614 c
178.027 668.2974 178.2395 668.6005 178.4335 668.9706 c
178.4029 668.7984 178.3799 668.6388 178.3646 668.4921 c
178.3493 668.3453 178.3416 668.2385 178.3416 668.1715 c
178.3416 667.9737 178.3939 667.8365 178.4986 667.7601 c
178.5547 667.7218 178.6172 667.7027 178.6861 667.7027 c
178.8954 667.7027 179.1314 667.8637 179.3943 668.1858 c
179.5423 668.3677 179.6635 668.5462 179.758 668.7218 c
179.8116 668.8223 L
179.7236 668.9275 L
179.5858 668.7201 179.4772 668.567 179.3982 668.4682 c
179.2629 668.3055 179.1582 668.2241 179.0843 668.2241 c
179.0587 668.2241 179.0288 668.2368 178.9943 668.2624 c
178.9599 668.2878 178.9426 668.3438 178.9426 668.4299 c
178.9426 668.4649 178.9457 668.5041 178.9522 668.5471 c
178.9585 668.5902 178.9668 668.6372 178.9771 668.6883 c
179.4786 670.966 L
180.2136 674.4066 L
180.2212 674.4592 L
180.1868 674.507 L
179.6763 674.3889 179.2769 674.3061 178.9886 674.2582 c
178.9886 674.1003 L
179.0498 674.1066 179.0989 674.1114 179.136 674.1147 c
179.1729 674.1178 179.2131 674.1194 179.2565 674.1194 c
179.3254 674.1194 179.3783 674.1035 179.4154 674.0716 c
179.4524 674.0396 179.4709 673.9615 179.4709 673.8371 c
179.4709 673.8051 179.469 673.7677 179.4652 673.7247 c
179.4613 673.6816 179.453 673.6329 179.4403 673.5787 c
179.0039 671.6168 L
178.9758 671.7858 178.9375 671.9054 178.889 671.9757 c
178.8048 672.0968 178.6619 672.1575 178.4603 672.1575 c
177.9779 672.1575 177.4828 671.7922 176.975 671.0617 c
f
*U
0.93 g
0 R
0 G
0.6 w [1 ]0 d
0 D
158.5061 639.5898 m
153.7275 629.5098 l
B
165.1142 639.6832 m
168.8849 630.2098 l
B
*u
0 g
1 w []0 d
192.9594 646.2913 m
193.0385 646.5306 193.1457 646.7809 193.281 647.0426 c
193.4085 647.2658 193.552 647.4661 193.7116 647.6431 c
193.8711 647.8202 194.0338 647.9087 194.1997 647.9087 c
194.289 647.9087 194.3567 647.8728 194.4026 647.801 c
194.4485 647.7293 194.4715 647.6327 194.4715 647.5115 c
194.4715 647.1766 194.3184 646.8392 194.0121 646.4995 c
193.7059 646.1597 193.309 645.9451 192.8216 645.8559 c
192.87 646.0186 192.916 646.1636 192.9594 646.2913 c
f
1 D
192.3125 644.0567 m
192.5165 643.8174 192.7539 643.6979 193.0245 643.6979 c
193.4073 643.6979 193.7888 643.8685 194.1691 644.2098 c
194.3835 644.4012 194.5481 644.5878 194.6629 644.7696 c
194.5634 644.8797 L
194.3311 644.6404 194.1538 644.4745 194.0313 644.382 c
193.8169 644.2225 193.614 644.1428 193.4226 644.1428 c
193.2209 644.1428 193.0467 644.2208 192.9001 644.3773 c
192.7533 644.5335 192.6799 644.752 192.6799 645.0328 c
192.6799 645.1508 192.6863 645.2489 192.6991 645.3271 c
192.7118 645.4052 192.7347 645.5097 192.768 645.6405 c
192.9862 645.674 L
193.4609 645.7473 193.9132 645.9475 194.3433 646.2746 c
194.7732 646.6015 194.9883 646.9947 194.9883 647.4541 c
194.9883 647.6805 194.9296 647.8513 194.8122 647.9661 c
194.6947 648.081 194.5366 648.1384 194.3375 648.1384 c
193.799 648.1384 193.2771 647.8066 192.7718 647.1431 c
192.2614 646.4794 192.0062 645.7937 192.0062 645.0855 c
192.0062 644.6388 192.1082 644.2959 192.3125 644.0567 c
f
*U
0.93 g
0 R
0 G
0.6 w [1 ]0 d
0 D
190.959 640.8415 m
186.1803 630.7615 l
B
197.567 640.9348 m
201.3377 631.4615 l
B
206.7997 693.2583 m
214.3125 683.4375 l
B
1 w []0 d
197.7183 693.13 m
183.2091 676.01 l
B
1 D
175.9156 665.8767 m
165.5424 650.3433 l
B
182.4863 664.7566 m
190.5424 651.6766 l
B
0.6 w [1 ]0 d
0 D
214.2195 714.4216 m
204.9835 705.5903 l
B
U
*u
0 g
1 w []0 d
204.4135 700.6432 m
204.4135 700.541 204.3854 700.4453 204.3293 700.3561 c
204.2731 700.2666 204.1953 700.2221 204.0958 700.2221 c
204.0089 700.2221 203.9375 700.2563 203.8814 700.325 c
203.8251 700.3935 203.7972 700.4741 203.7972 700.5666 c
203.7972 700.6303 203.8213 700.7404 203.8699 700.8968 c
203.8699 700.9382 203.8533 700.9748 203.8201 701.0068 c
203.7869 701.0356 203.7436 701.0499 203.69 701.0499 c
203.4398 701.0499 203.2306 700.793 203.0622 700.2795 c
202.9676 699.9828 202.8618 699.4835 202.7444 698.7817 C
203.5981 698.7817 L
203.5445 698.4611 L
202.6908 698.4611 L
202.1281 695.3556 l
201.9775 694.5231 201.7752 693.85 201.5213 693.3364 c
201.2674 692.8229 200.9427 692.566 200.5472 692.566 c
200.3661 692.566 200.2174 692.6282 200.1012 692.7526 c
199.9852 692.877 199.927 693.0158 199.927 693.1689 c
199.927 693.2646 199.9519 693.354 200.0017 693.4369 c
200.0515 693.5199 200.1261 693.5613 200.2256 693.5613 c
200.3125 693.5613 200.3858 693.5254 200.4458 693.4536 c
200.5058 693.3818 200.5357 693.2933 200.5357 693.1881 c
200.5357 693.1306 200.5223 693.0725 200.4955 693.0134 c
200.4687 692.9545 200.4553 692.9138 200.4553 692.8914 c
200.4553 692.8627 200.47 692.8387 200.4993 692.8196 c
200.5288 692.8005 200.5663 692.7909 200.6123 692.7909 c
200.8293 692.7909 201.0129 693.0047 201.1634 693.4321 c
201.2425 693.6555 201.3152 693.9633 201.3816 694.3556 C
202.0745 698.4611 L
201.3663 698.4611 L
201.4199 698.7817 L
202.1434 698.7817 l
202.299 699.5249 202.4738 700.0752 202.6679 700.4326 c
202.9562 700.9813 203.3122 701.2557 203.7359 701.2557 c
203.9298 701.2557 204.0912 701.1935 204.2202 701.0691 c
204.349 700.9447 204.4135 700.8026 204.4135 700.6432 c
f
*U
U
u
u
1 Ap
0 R
0 G
272.1683 669.2179 m
272.1683 673.2068 274.7552 676.4405 277.9463 676.4405 c
281.1376 676.4405 283.7246 673.2068 283.7246 669.2179 c
283.7246 665.2289 281.1376 661.9952 277.9463 661.9952 c
274.7552 661.9952 272.1683 665.2289 272.1683 669.2179 c
s
1 D
260.5818 636.0419 m
263.7729 636.0419 266.36 639.2757 266.36 643.2646 c
266.36 647.2536 263.7729 650.4873 260.5818 650.4873 c
257.3907 650.4873 254.8036 647.2536 254.8036 643.2646 c
254.8036 639.2757 257.3907 636.0419 260.5818 636.0419 c
s
293.2485 637.3752 m
296.4396 637.3752 299.0267 640.609 299.0267 644.598 c
299.0267 648.5868 296.4396 651.8206 293.2485 651.8206 c
290.0572 651.8206 287.4703 648.5868 287.4703 644.598 c
287.4703 640.609 290.0572 637.3752 293.2485 637.3752 c
s
301.1858 688.5786 m
304.3769 688.5786 306.964 691.8124 306.964 695.8012 c
306.964 699.7902 304.3769 703.024 301.1858 703.024 c
297.9947 703.024 295.4076 699.7902 295.4076 695.8012 c
295.4076 691.8124 297.9947 688.5786 301.1858 688.5786 c
s
*u
0 Ap
0 O
0 g
0 D
276.7719 666.1739 m
276.708 666.2488 276.6762 666.3486 276.6762 666.473 c
276.6762 666.9929 276.837 667.6468 277.1586 668.4349 c
277.5286 669.3408 277.9165 669.7939 278.3223 669.7939 c
278.4805 669.7939 278.6119 669.7197 278.7166 669.5714 c
278.8212 669.423 278.8736 669.2244 278.8736 668.9756 c
278.8736 668.4268 278.6962 667.8224 278.3415 667.162 c
277.9484 666.4283 277.5261 666.0615 277.0743 666.0615 c
276.9365 666.0615 276.8357 666.0988 276.7719 666.1739 c
f
1 D
276.3125 666.0567 m
276.532 665.9101 276.7731 665.8367 277.0361 665.8367 c
277.6128 665.8367 278.709 666.8462 y
279.5397 668.2818 279.5397 669.0761 v
279.5397 669.4173 279.4547 669.7037 279.2851 669.935 c
279.1153 670.1662 278.8901 670.282 278.6094 670.282 c
278.3108 670.282 278.0211 670.1208 277.7405 669.7987 c
277.5797 669.6135 277.3844 669.3169 277.1547 668.9086 c
277.9165 672.5262 L
277.9242 672.5884 L
277.9242 672.6138 277.9185 672.633 277.907 672.6458 c
277.8955 672.6585 277.8833 672.665 277.8706 672.665 c
277.8119 672.665 277.7143 672.6458 277.5777 672.6076 c
277.4411 672.5693 277.364 672.5485 277.3461 672.5453 c
277.1827 672.5133 277.0533 672.4911 276.9576 672.4784 c
276.8619 672.4655 276.7731 672.4511 276.6915 672.4353 c
276.6915 672.2678 L
276.8319 672.2582 276.9231 672.2518 276.9652 672.2487 c
277.0074 672.2454 277.0373 672.2406 277.0552 672.2343 c
277.1165 672.2119 277.1553 672.1808 277.172 672.141 c
277.1885 672.1011 277.1968 672.0604 277.1968 672.019 c
277.1968 671.9807 277.1936 671.9336 277.1873 671.8778 c
277.1808 671.8219 277.17 671.7589 277.1547 671.6888 c
276.0101 666.4012 l
275.9922 666.3151 276.093 666.2002 276.3125 666.0567 c
f
*U
*u
0 D
259.3811 642.4172 m
259.7434 643.2019 260.1186 643.5943 260.5066 643.5943 c
260.6622 643.5943 260.7655 643.5305 260.8166 643.4029 c
260.8675 643.2752 260.8932 643.1142 260.8932 642.9196 c
260.8932 642.3038 260.735 641.6515 260.4185 640.9625 c
260.0816 640.2287 259.7306 639.8619 259.3657 639.8619 c
259.1947 639.8619 259.0735 639.9344 259.0021 640.0796 c
258.9306 640.2247 258.8948 640.3946 258.8948 640.5892 c
258.8948 641.106 259.0569 641.7153 259.3811 642.4172 c
f
1 D
258.9792 642.7234 m
258.4687 641.9897 258.2135 641.275 258.2135 640.5797 c
258.2135 640.1681 258.2964 639.8634 258.4624 639.6657 c
258.6282 639.468 258.8222 639.3692 259.0442 639.3692 c
259.3171 639.3692 259.5693 639.4872 259.8002 639.7231 c
260.0312 639.9591 260.2436 640.2622 260.4376 640.6323 c
260.4071 640.4601 260.384 640.3005 260.3688 640.1538 c
260.3535 640.007 260.3457 639.9002 260.3457 639.8332 c
260.3457 639.6354 260.3981 639.4982 260.5028 639.4218 c
260.5588 639.3835 260.6213 639.3644 260.6903 639.3644 c
260.8995 639.3644 261.1356 639.5254 261.3984 639.8475 c
261.5464 640.0294 261.6676 640.2079 261.7622 640.3835 c
261.8157 640.484 L
261.7277 640.5892 L
261.5899 640.3818 261.4813 640.2287 261.4024 640.1299 c
261.2671 639.9672 261.1623 639.8858 261.0885 639.8858 c
261.0628 639.8858 261.033 639.8985 260.9985 639.9241 c
260.964 639.9495 260.9468 640.0055 260.9468 640.0916 c
260.9468 640.1266 260.9499 640.1658 260.9564 640.2088 c
260.9627 640.2519 260.9709 640.2989 260.9812 640.35 c
261.4828 642.6277 L
262.2178 646.0683 L
262.2254 646.1209 L
262.1909 646.1687 L
261.6804 646.0506 261.281 645.9678 260.9927 645.9199 c
260.9927 645.762 L
261.054 645.7683 261.1031 645.7731 261.1401 645.7764 c
261.177 645.7795 261.2173 645.7811 261.2606 645.7811 c
261.3296 645.7811 261.3825 645.7652 261.4196 645.7333 c
261.4566 645.7013 261.475 645.6232 261.475 645.4988 c
261.475 645.4668 261.4732 645.4294 261.4694 645.3864 c
261.4654 645.3433 261.4571 645.2946 261.4445 645.2404 c
261.0081 643.2785 L
260.9799 643.4475 260.9416 643.5671 260.8932 643.6374 c
260.809 643.7585 260.6661 643.8192 260.4644 643.8192 c
259.9821 643.8192 259.4869 643.4539 258.9792 642.7234 c
f
*U
0.93 g
0 R
0 G
0.6 w [1 ]0 d
0 D
257.8163 636.5592 m
253.0377 626.4792 l
B
264.4243 636.6526 m
268.1951 627.1792 l
B
*u
0 g
1 w []0 d
291.9988 643.9899 m
292.0778 644.2292 292.1851 644.4795 292.3204 644.7412 c
292.4479 644.9644 292.5914 645.1647 292.751 645.3417 c
292.9105 645.5188 293.0731 645.6073 293.2391 645.6073 c
293.3283 645.6073 293.3961 645.5714 293.442 645.4996 c
293.4878 645.4279 293.5108 645.3313 293.5108 645.2101 c
293.5108 644.8752 293.3578 644.5378 293.0514 644.1981 c
292.7453 643.8583 292.3484 643.6437 291.861 643.5545 c
291.9094 643.7172 291.9553 643.8622 291.9988 643.9899 c
f
1 D
291.3518 641.7553 m
291.5559 641.516 291.7933 641.3965 292.0639 641.3965 c
292.4467 641.3965 292.8282 641.5671 293.2084 641.9084 c
293.4228 642.0998 293.5875 642.2864 293.7023 642.4682 c
293.6027 642.5783 L
293.3704 642.339 293.1932 642.1731 293.0707 642.0806 c
292.8563 641.9211 292.6533 641.8414 292.462 641.8414 c
292.2602 641.8414 292.0861 641.9194 291.9394 642.0759 c
291.7927 642.2321 291.7192 642.4506 291.7192 642.7314 c
291.7192 642.8494 291.7257 642.9475 291.7384 643.0257 c
291.7512 643.1038 291.7741 643.2083 291.8074 643.3391 c
292.0256 643.3726 L
292.5003 643.4459 292.9526 643.6461 293.3827 643.9732 c
293.8126 644.3001 294.0276 644.6933 294.0276 645.1527 c
294.0276 645.3791 293.969 645.5499 293.8516 645.6647 c
293.7341 645.7796 293.576 645.837 293.3769 645.837 c
292.8384 645.837 292.3164 645.5052 291.8112 644.8417 c
291.3007 644.178 291.0456 643.4923 291.0456 642.7841 c
291.0456 642.3374 291.1475 641.9945 291.3518 641.7553 c
f
*U
0.93 g
0 R
0 G
0.6 w [1 ]0 d
0 D
289.9983 638.5401 m
285.2196 628.4601 l
B
296.6063 638.6334 m
300.3771 629.1601 l
B
305.839 690.9569 m
313.8125 679.9375 l
B
1 w []0 d
296.7577 690.8286 m
282.2485 673.7086 l
B
1 D
274.955 663.5753 m
264.5818 648.0419 l
B
281.5256 662.4552 m
289.5818 649.3752 l
B
0.6 w [1 ]0 d
0 D
313.2588 712.1202 m
304.0229 703.2889 l
B
U
*u
0 g
1 w []0 d
303.3125 700.0567 m
303.3125 699.9545 303.2844 699.8588 303.2283 699.7696 c
303.1721 699.6801 303.0943 699.6356 302.9948 699.6356 c
302.9079 699.6356 302.8365 699.6698 302.7804 699.7385 c
302.7241 699.807 302.6962 699.8876 302.6962 699.9801 c
302.6962 700.0438 302.7203 700.1539 302.7689 700.3103 c
302.7689 700.3517 302.7523 700.3883 302.7191 700.4203 c
302.6859 700.4491 302.6426 700.4634 302.589 700.4634 c
302.3388 700.4634 302.1296 700.2065 301.9612 699.693 c
301.8666 699.3963 301.7608 698.897 301.6434 698.1952 C
302.4971 698.1952 L
302.4435 697.8746 L
301.5898 697.8746 L
301.0271 694.7691 l
300.8765 693.9366 300.6742 693.2635 300.4203 692.7499 c
300.1664 692.2364 299.8417 691.9795 299.4462 691.9795 c
299.2651 691.9795 299.1164 692.0417 299.0002 692.1661 c
298.8842 692.2905 298.826 692.4293 298.826 692.5824 c
298.826 692.6781 298.8509 692.7675 298.9007 692.8504 c
298.9505 692.9334 299.0251 692.9748 299.1246 692.9748 c
299.2115 692.9748 299.2848 692.9389 299.3448 692.8671 c
299.4048 692.7953 299.4347 692.7068 299.4347 692.6016 c
299.4347 692.5441 299.4213 692.486 299.3945 692.4269 c
299.3677 692.368 299.3543 692.3273 299.3543 692.3049 c
299.3543 692.2762 299.369 692.2522 299.3983 692.2331 c
299.4278 692.214 299.4653 692.2044 299.5113 692.2044 c
299.7283 692.2044 299.9119 692.4182 300.0624 692.8456 c
300.1415 693.069 300.2142 693.3768 300.2806 693.7691 C
300.9735 697.8746 L
300.2653 697.8746 L
300.3189 698.1952 L
301.0424 698.1952 l
301.198 698.9384 301.3728 699.4887 301.5669 699.8461 c
301.8552 700.3948 302.2112 700.6692 302.6349 700.6692 c
302.8288 700.6692 302.9902 700.607 303.1192 700.4826 c
303.248 700.3582 303.3125 700.2161 303.3125 700.0567 c
f
*U
U
0.56 g
0 R
0.56 G
255.7747 668.6815 m
255.6544 670.3089 l
260.3125 666.0567 l
261.2796 668.7573 l
264.4407 659.7165 l
254.3851 661.3499 l
258.2709 663.1986 l
252.9376 665.1587 l
255.7747 668.6815 l
b
q
315.875 524.7073 m
318.875 525.7073 L
319.1937 526.8293 316.5166 535.6415 313.1166 538.7832 c
313.1166 539.232 314.8166 540.1296 314.8166 541.0272 c
317.3666 542.8225 322.4666 543.7201 324.1667 545.9641 c
325.0167 548.2082 322.4666 550.4523 324.1667 552.6963 c
324.1667 554.0428 325.8667 555.838 324.1667 556.2868 c
323.3166 557.1844 319.0666 556.2868 316.5166 557.1844 c
315.6666 557.1844 316.5166 558.9797 316.5166 559.8773 c
317.3666 561.6725 320.7666 562.5702 322.4666 563.9166 c
323.3166 565.263 323.3166 566.6095 322.4666 567.9559 c
319.9166 570.2 314.8166 571.9952 314.8166 574.2393 c
316.5166 578.2786 319.0666 582.3179 316.5166 586.3572 c
315.6666 589.0501 314.8166 592.1917 316.5166 594.8846 c
317.3666 596.6799 327.6667 606 Y
150.0953 605.2549 L
156.0453 603.4597 L
160.2953 600.7668 154.9785 598.6974 150.9453 597.1763 c
144.9952 594.9323 139.0452 593.137 135.6451 589.9953 c
133.9451 588.6489 133.9451 585.956 135.6451 585.5072 c
138.1952 584.6096 139.8952 584.1607 142.4452 583.7119 c
147.5452 581.9167 144.1452 579.2238 142.4452 576.9797 c
142.4452 576.5309 142.4452 575.6333 142.4452 574.7357 c
142.4452 574.2869 140.7452 573.3893 140.7452 572.9405 c
140.7452 571.594 139.8952 569.7988 141.5952 569.3499 c
142.4452 568.4523 146.6952 569.3499 149.2452 568.9011 c
149.2452 568.4523 150.0953 567.1059 149.2452 566.6571 c
144.1452 563.0666 136.4952 559.4761 140.7452 555.8856 c
142.4452 554.9879 149.2452 555.4368 150.0953 553.6415 c
153.4953 549.1534 150.9453 544.2165 146.6952 539.7283 c
145.8452 538.8307 145.8452 536.5867 146.6952 536.5867 c
152.6453 535.2402 154.3453 532.5473 151.7953 530.3033 c
145.8452 525.3664 147.25 524.2573 Y
315.875 524.7073 L
h
W
n
u
0 O
0.81 g
0 R
0.81 G
293.1276 605.1818 m
284.5026 519.8306 l
B
283.7729 599.0199 m
279.9979 527.5283 l
295.3528 526.2676 l
298.0311 598.5996 l
283.7729 599.0199 l
b
U
u
183.1276 605.1818 m
174.5026 519.8306 l
B
173.7729 599.0199 m
169.9979 527.5283 l
185.3528 526.2676 l
188.0311 598.5996 l
173.7729 599.0199 l
b
U
u
0 G
1.2 w
144.1667 550.4828 m
350.612 545.0703 l
S
344.8125 584.7708 m
141.1458 531.1042 l
S
136.1458 583.1042 m
336.1458 547.7708 l
S
136.1667 596.4832 m
350.612 576.9905 l
S
U
Q
0 A
u
0 R
0 G
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
287.4583 608.5834 m
278.8333 523.2322 l
S
0 O
1 g
278.1036 602.4215 m
274.3286 530.9299 l
289.6835 529.6692 l
292.3618 602.0012 l
278.1036 602.4215 l
b
U
u
177.4583 608.5834 m
168.8333 523.2322 l
S
0 O
1 g
168.1036 602.4215 m
164.3286 530.9299 l
179.6835 529.6692 l
182.3618 602.0012 l
168.1036 602.4215 l
b
U
LB
%AI5_EndLayer--
gsave annotatepage grestore showpage
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EndDocument

 endTexFig
 523 2855 a Fr(Figure)18 b(1:)32 b(Main)n(tenance)18
b(of)h(a)f(kinetic)h(heap:)32 b(on)18 b(the)h(left,)j(the)d(link)g
Fq(bd)f Fr(has)g(an)h(asso)r(ciated)523 2955 y(ev)n(en)n(t.)49
b(T)-7 b(o)31 b(pro)r(cess)g(this)h(ev)n(en)n(t,)g(it)g(is)g(enough)f
(to)g(in)n(terc)n(hange)g Fq(b)g Fr(and)g Fq(d)h Fr(in)g(the)h(heap,)
523 3055 y(and)21 b(adjust)h(the)g(certi\014cates)f(and)g(ev)n(en)n(ts)
g(that)h(dep)r(end)g(on)f(them.)36 b(When)22 b Fq(b)f
Fr(and)h Fq(e)f Fr(meet,)523 3154 y(there)27 b(is)h(no)f(ev)n(en)n(t)g
(as)g(there)h(is)f(no)g(c)n(hange)g(in)h(the)g(heap)f(structure.)648
3354 y(But)36 b(ho)n(w)f(man)n(y)g(ev)n(en)n(ts)g(do)r(es)h(the)g
(kinetic)g(heap)f(ha)n(v)n(e)g(to)h(pro)r(cess)e(in)i(the)h(w)n(orst)
523 3453 y(case,)32 b(when)g(the)g(p)r(oin)n(ts)g(mo)n(v)n(e)e(with)i
(constan)n(t)f(v)n(elo)r(cities?)49 b(This)31 b(question)h(turns)f(out)
523 3553 y(to)j(b)r(e)h(surprisingly)e(non-trivial;)k(w)n(e)d(can)g
(sho)n(w)f(b)n(y)i(a)f(p)r(oten)n(tial)g(argumen)n(t)f(that)i(the)523
3652 y(kinetic)30 b(heap)f(under)g(linear)g(p)r(oin)n(t)g(motions)g
(pro)r(cesses)f Fq(O)r Fr(\()p Fq(n)14 b Fr(log)2629
3615 y Fo(2)2680 3652 y Fq(n)p Fr(\))30 b(ev)n(en)n(ts,)f(and)g(th)n
(us)523 3752 y(is)f(a)f(data)g(structure)g(meeting)h(our)e(requiremen)n
(ts)h(\(the)h(pro)r(of)f(app)r(ears)f(in)i([10)o(]\).)648
3887 y(T)-7 b(o)26 b(prepare)g(ourselv)n(es)f(for)h(the)h(solutions)f
(to)h(the)g(other)f(problems)g(w)n(e)h(will)g(presen)n(t)523
3987 y(b)r(elo)n(w,)d(let)h(us)e(also)g(consider)g(the)h(follo)n(wing)f
(fourth)h(solution)f(to)h(the)g(kinetic)h(maxim)n(um)523
4086 y(main)n(tenance)e(problem.)35 b(Consider)22 b(\014rst)h(an)f
(algorithm)h(that)g(computes)g(the)h(maxim)n(um)523 4186
y(of)33 b Fq(n)g Fr(\(static\))h(n)n(um)n(b)r(ers.)52
b(The)34 b(algorithm)e(computes)h(the)g(maxim)n(um)g(recursiv)n(ely)-7
b(,)33 b(b)n(y)523 4286 y(partitioning)d(the)h(n)n(um)n(b)r(ers)f(in)n
(to)h(t)n(w)n(o)f(appro)n(ximately)e(equal-sized)i(groups)f
(\(arbitrar-)523 4385 y(ily\),)34 b(computing)f(the)g(maxim)n(um)f(of)g
(eac)n(h)g(subgroup,)h(and)f(then)h(comparing)e(the)i(t)n(w)n(o)523
4485 y(winners)d(to)g(select)h(the)g(\014nal)f(true)g(maxim)n(um.)46
b(If)31 b(view)n(ed)f(from)g(the)h(b)r(ottom)f(up,)i(this)523
4585 y(is)e(exactly)f(a)g(tournamen)n(t)g(for)h(computing)f(the)i
(global)d(leader.)43 b(In)30 b(the)g(end)g(this)g(algo-)523
4684 y(rithm)21 b(has)f(p)r(erformed)g Fq(O)r Fr(\()p
Fq(n)p Fr(\))i(comparisons)c(that)j(altogether)f(pro)n(v)n(e)f(that)i
(the)g(maxim)n(um)523 4784 y(it)26 b(computed)h(is)e(indeed)i(the)f
(true)g(maxim)n(um.)36 b(No)n(w)26 b(imagine)f(that)h(our)f(n)n(um)n(b)
r(ers)h(start)523 4883 y(v)-5 b(arying|our)19 b(p)r(oin)n(ts)i(can)f
(mo)n(v)n(e.)33 b(As)21 b(long)f(as)h(eac)n(h)f(of)g(the)i(comparisons)
c(the)k(algorithm)1934 5147 y(6)p eop
%%Page: 7 7
7 6 bop 523 614 a Fr(made)27 b(sta)n(ys)g(v)-5 b(alid,)28
b(the)g(iden)n(tit)n(y)f(of)h(the)g(maxim)n(um)f(elemen)n(t)h(cannot)f
(c)n(hange.)648 749 y(A)f(general)e(kinetization)h(strategy)f(w)n(e)i
(will)f(use)h(consists)f(of)g(taking)g(the)h(certi\014cates)523
849 y(of)g(correctness)e(in)h(the)i(computation)e(p)r(erformed)g(b)n(y)
h(our)f(static)g(algorithm|the)g(com-)523 949 y(parisons)g(in)j(this)f
(case|and)f(asso)r(ciating)f(with)j(eac)n(h)e(of)h(them)h(an)e(ev)n(en)
n(t)h(in)g(the)h(global)523 1048 y(queue)g(that)g(describ)r(es)f(when)g
(that)h(certi\014cate)g(will)f(\(ma)n(y\))h(b)r(e)g(violated)f(in)h
(the)g(future.)523 1148 y(When)36 b(a)g(violation)e(happ)r(ens,)k(w)n
(e)d(hop)r(e)h(that)g(there)g(will)g(b)r(e)g(a)f(simple)h(and)f
(e\016cien)n(t)523 1248 y(w)n(a)n(y)i(to)i(up)r(date)g(the)g(output)g
(of)f(the)h(algorithm)e(and)i(the)g(set)f(of)h(certi\014cates)f(to)g(b)
r(e)523 1347 y(main)n(tained.)k(In)30 b(our)f(example,)g(supp)r(ose)g
(that)h(a)f(particular)f(comparison)g(in)n(v)n(olv)n(ed)g(in)523
1447 y(the)d(maxim)n(um)f(computation)g(\015ips.)35 b(This)25
b(comparison)d(is)i(b)r(et)n(w)n(een)g(the)h(leaders)e(of)h(t)n(w)n(o)
523 1546 y(subgroups)f(at)h(a)g(certain)f(lev)n(el)h(of)g(the)g
(tournamen)n(t)g(tree.)35 b(If)25 b(the)f(winner)g(c)n(hanges,)g(then)
523 1646 y(this)f(winner)f(has)g(to)g(b)r(e)h(p)r(ercolated)e(up)i(the)
g(tournamen)n(t)f(tree,)h(till)g(it)g(is)f(either)g(defeated)523
1746 y(or)29 b(declared)f(the)i(o)n(v)n(erall)d(maxim)n(um.)43
b(But)30 b(b)r(ecause)f(a)g(tournamen)n(t)f(tree)i(is)f(balanced,)523
1845 y(this)h(computation)g(tak)n(es)e(only)i Fq(O)r
Fr(\(log)15 b Fq(n)p Fr(\))30 b(time)g(and)g(can)f(a\013ect)h(at)f
(most)h Fq(O)r Fr(\(log)15 b Fq(n)p Fr(\))30 b(ex-)523
1945 y(isting)37 b(certi\014cates)f(\(a)h(constan)n(t)f(n)n(um)n(b)r
(er)g(of)h(desc)n(hedulings)f(and)h(resc)n(hedulings)e(p)r(er)523
2045 y(lev)n(el\).)i(W)-7 b(e)28 b(call)f(this)h(fourth)f(structure)g
(a)h Fp(kinetic)i(tournament)p Fr(.)648 2180 y(If)23
b(our)f(p)r(oin)n(ts)g(mo)n(v)n(e)g(with)h(constan)n(t)f(v)n(elo)r
(cities,)h(ho)n(w)f(man)n(y)g(ev)n(en)n(ts)g(will)h(our)f(kinetic)523
2279 y(tournamen)n(t)39 b(ha)n(v)n(e)g(to)g(pro)r(cess?)72
b(The)40 b(k)n(ey)f(insigh)n(t)h(to)f(answ)n(ering)f(this)i(question)f
(is)523 2379 y(to)f(realize)g(that)h(the)f(kinetic)h(tournamen)n(t)f
(is)g(implemen)n(ting)h(a)f(divide-and-conquer)523 2479
y(algorithm)29 b(for)h(the)h(computation)g(of)f(the)h(upp)r(er)g(en)n
(v)n(elop)r(e)e(of)i Fq(n)f Fr(straigh)n(t)g(lines)g(in)h(the)523
2578 y Fq(ty)s Fr(-plane)25 b(\(the)i(p)r(oin)n(t)g(tra)5
b(jectories\).)35 b(F)-7 b(or)25 b(example,)h(the)h(comparisons)d(p)r
(erformed)i(o)n(v)n(er)523 2678 y(time)32 b(at)e(the)i(top)f(lev)n(el)f
(for)h(declaring)e(the)j(\014nal)e(leader)h(are)e(exactly)i(those)f
(needed)i(to)523 2777 y(merge)e(the)g(upp)r(er)h(en)n(v)n(elop)r(es)e
(of)i(the)g(t)n(w)n(o)e(subgroups)g(of)i(the)g(lines.)45
b(The)31 b(o)n(v)n(erall)d(cost)523 2877 y(of)35 b(the)g(merge)f(is)g
(easily)g(seen)h(to)g(b)r(e)g Fq(O)r Fr(\()p Fq(n)p Fr(\).)59
b(Th)n(us)35 b(this)g(divide-and-conquer)e(w)n(a)n(y)g(of)523
2977 y(implemen)n(ting)c(the)h(upp)r(er)f(en)n(v)n(elop)r(e)f
(computation)h(has)f(a)h(w)n(orst-case)e(cost)h(satisfying)523
3076 y(the)38 b(recurrence)e Fq(C)6 b Fr(\()p Fq(n)p
Fr(\))40 b(=)f(2)p Fq(C)6 b Fr(\()p Fq(n=)p Fr(2\))24
b(+)h(\002\()p Fq(n)p Fr(\),)40 b(whic)n(h)d(solv)n(es)f(to)h
Fq(C)6 b Fr(\()p Fq(n)p Fr(\))40 b(=)f Fq(O)r Fr(\()p
Fq(n)14 b Fr(log)h Fq(n)p Fr(\).)523 3176 y(The)31 b(n)n(um)n(b)r(er)f
(of)g(kinetic)h(tournamen)n(t)e(ev)n(en)n(ts)h(\(resc)n(hedulings,)g
(etc.\))46 b(is)30 b(prop)r(ortional)523 3276 y(to)40
b(the)h(n)n(um)n(b)r(er)g(of)f(times)h(the)g(iden)n(tit)n(y)g(of)f(one)
g(of)h(the)g(con)n(testan)n(ts)e(at)i(a)f(no)r(de)g(of)523
3375 y(the)g(tournamen)n(t)f(tree)h(c)n(hanges.)72 b(Eac)n(h)38
b(suc)n(h)i(iden)n(tit)n(y)g(c)n(hange)e(corresp)r(onds)g(to)i(an)523
3475 y(in)n(tersection)35 b(in)i(one)e(of)h(the)h(sub-en)n(v)n(elop)r
(es)e(computed)h(b)n(y)g(the)g(divide-and-conquer)523
3574 y(algorithm,)21 b(and)f(hence)h(is)g(coun)n(ted)f(b)n(y)g(the)h
Fq(O)r Fr(\()p Fq(n)14 b Fr(log)h Fq(n)p Fr(\))21 b(b)r(ound)g(on)f
Fq(C)6 b Fr(\()p Fq(n)p Fr(\).)36 b(Therefore)19 b(the)523
3674 y(kinetic)28 b(tournamen)n(t)e(accomplishes)h(our)f(goal)h(of)g
(main)n(taining)g(on-line)g(the)h(maxim)n(um)523 3774
y(of)33 b(a)f(set)h(of)g(mo)n(ving)f(p)r(oin)n(ts,)i(and)e(it)i(is)e(a)
h(resp)r(onsiv)n(e,)f(e\016cien)n(t,)j(compact,)e(and)g(lo)r(cal)523
3873 y(KDS.)64 b(If)37 b(w)n(e)f(use)h(a)f(priorit)n(y)f(queue)i(to)f
(store)g(the)h(relev)-5 b(an)n(t)35 b(ev)n(en)n(ts)h(and)h(p)r(erform)f
(a)523 3973 y(discrete-time)29 b(sim)n(ulation,)g(then)h(the)f(ev)n(en)
n(t)g(coun)n(ts)g(for)g(all)g(the)g(structures)g(describ)r(ed)523
4073 y(here)37 b(can)h(b)r(e)g(made)f(in)n(to)h(run-times)f(with)h(an)g
(extra)f Fq(O)r Fr(\(log)15 b Fq(n)p Fr(\))37 b(factor)g(\(the)i
(priorit)n(y)523 4172 y(queue)28 b(cost\).)523 4440 y
Fk(1.2)112 b(Previous)37 b(results)g(and)h(summary)f(of)h(the)f(w)m
(ork)523 4629 y Fr(A)c(n)n(um)n(b)r(er)g(of)g(w)n(orks)e(in)j(the)f
(early)f(eigh)n(ties)g([7,)h(19)o(,)g(28)o(])h(considered)e(the)h
(problem)f(of)523 4728 y Fp(c)l(omputing)g Fr(a)f(con\014guration)g
(function)h(of)g(mo)n(ving)f(p)r(oin)n(ts.)49 b(In)32
b(all)g(cases,)f(the)i(motion)523 4828 y(w)n(as)18 b(considered)h
(fully)g(kno)n(wn,)i(and)e(the)g(problem)g(w)n(as)f(t)n(ypically)h
(cast)g(and)g(solv)n(ed)f(in)i(one)1934 5147 y(7)p eop
%%Page: 8 8
8 7 bop 523 614 a Fr(dimension)32 b(higher.)50 b(The)32
b(metho)r(d)h(of)f(Edelsbrunner)f(and)h(W)-7 b(elzl)32
b([19])g(for)f(computing)523 714 y(the)j Fq(k)s Fr(-th)f(order)f
(statistic)h(of)h(a)e(set)i(of)f(p)r(oin)n(ts)g(mo)n(ving)g(at)g
(constan)n(t)f(sp)r(eed)i(along)e(the)523 814 y Fq(x)p
Fr(-axis)25 b(\(in)n(tro)r(duced)g(as)g(a)g(motiv)-5
b(ation)25 b(for)g(computing)h(the)f Fq(k)s Fr(-lev)n(el)g(of)g(an)h
(arrangemen)n(t)523 913 y(of)i(lines\))f(is)h(most)f(similar)g(to)h(a)f
(KDS.)648 1048 y(More)21 b(recen)n(tly)-7 b(,)22 b(questions)f
(concerning)g(the)h(main)n(tenance)f(of)h(the)g(V)-7
b(oronoi)21 b(diagram)523 1148 y(of)27 b(mo)n(ving)g(p)r(oin)n(ts)g
(\(or)g(its)g(dual,)h(the)f(Delauna)n(y)g(triangulation\))f(ha)n(v)n(e)
g(receiv)n(ed)h(exten-)523 1248 y(siv)n(e)i(atten)n(tion)h([18)o(,)g
(21)o(,)f(23)o(,)h(32)o(].)44 b(The)29 b(signi\014cance)g(of)h(our)f(w)
n(ork)f(is)i(b)r(est)g(understo)r(o)r(d)523 1347 y(in)h(comparison.)45
b(The)31 b(Delauna)n(y)f(triangulation)g(con)n(tains)g(a)g(pro)r(of)g
(of)h(its)g(correctness)523 1447 y(in)n(v)n(olving)d(only)g(four-p)r
(oin)n(t)h(certi\014cates)f(for)h(eac)n(h)f(of)h(the)h(edges)e(of)h
(the)h(triangulation.)523 1546 y(In)i(that)g(sense,)g(it)g(is)g(what)f
(w)n(e)h(migh)n(t)f(call)h(a)f Fp(self-c)l(ertifying)i
Fr(structure.)49 b(As)32 b(suc)n(h,)g(its)523 1646 y(kinetization)g(is)
h(immediate:)47 b(w)n(e)33 b(need)f(only)h(main)n(tain)f(a)g
(certi\014cate)g(for)g(eac)n(h)g(of)h(the)523 1746 y(edges.)j(Whenev)n
(er)26 b(an)n(y)g(certi\014cate)g(c)n(hanges)g(sign,)g(w)n(e)h(kno)n(w)
f(that)h(w)n(e)f(can)h(up)r(date)g(the)523 1845 y(triangulation)19
b(\(and)i(the)g(corresp)r(onding)e(certi\014cate)h(structure\))h(b)n(y)
f(an)g(edge-\015ip)h(on)f(the)523 1945 y(failing)29 b(edge.)41
b(The)29 b(structure)g(has)g(no)f(in)n(ternal)h(ev)n(en)n(ts,)g(hence)g
(the)h(issue)e(of)i(e\016ciency)523 2045 y(do)r(es)k(not)h(arise.)57
b(It)35 b(is)f(also)f(w)n(ell)i(kno)n(wn)f(that)h(the)g(Delauna)n(y)e
(triangulation)h(can)g(b)r(e)523 2144 y(used)d(to)g(compute)g(b)r(oth)g
(the)h(con)n(v)n(ex)d(h)n(ull)i(and)g(the)h(closest)e(pair,)h(so)f
(that)i(w)n(e)e(readily)523 2244 y(ha)n(v)n(e)23 b(a)g(common)g
(kinetic)h(data)f(structure)g(to)h(main)n(tain)f(these)h
(con\014guration)e(functions)523 2343 y(\(closest)i(pair)h(main)n
(tenance)f(requires)f(in)j(addition)e(a)h(kinetic)g(tournamen)n(t)f(on)
h(the)g(edge)523 2443 y(lengths\),)35 b(but)f(this)f(solution)g(has)g
(t)n(w)n(o)g(dra)n(wbac)n(ks:)45 b(it)34 b(is)f(not)h(lo)r(cal)e(\(a)i
(p)r(oin)n(t)f(can)g(b)r(e)523 2543 y(a)27 b(v)n(ertex)g(of)h(linearly)
f(man)n(y)g(triangles\),)g(nor)g(kno)n(wn)g(to)h(b)r(e)g(e\016cien)n(t)
g(\(the)h(tigh)n(test)e(up-)523 2642 y(p)r(er)33 b(b)r(ound)g(kno)n(wn)
e(on)i(the)g(n)n(um)n(b)r(er)f(of)h(c)n(hanges)e(to)h(the)h(Delauna)n
(y)f(triangulation)f(of)523 2742 y(p)r(oin)n(ts)22 b(in)h(algebraic)d
(motion)i(is)g(roughly)f(cubic)h(in)g(the)h(n)n(um)n(b)r(er)f(of)g(p)r
(oin)n(ts)g([23)o(],)i(whereas)523 2842 y(the)29 b(con)n(v)n(ex)d(h)n
(ull)j(and)f(the)g(closest)g(pair)f(can)h(c)n(hange)f(roughly)g(a)g
(quadratic)h(n)n(um)n(b)r(er)f(of)523 2941 y(times)f(in)g(the)g(w)n
(orst)e(case\).)36 b(In)25 b(general,)g(one)g(can)g(view)h(the)g(pro)r
(cess)e(of)i(kinetization)f(as)523 3041 y(\\su\016cien)n(tly)i(augmen)n
(ting)g(a)g(con\014guration)f(function)i(to)g(mak)n(e)e(it)i
(self-certifying.")648 3176 y(Algorithms)19 b(for)h(collision)f
(detection)i(in)g(rob)r(otics)e(b)n(y)h(Lin)g(and)g(Cann)n(y)g([27)o(])
h(and)f(P)n(on-)523 3276 y(amgi)29 b(et)i(al.)e([30])h(exploit)g(temp)r
(oral)f(coherence)g(to)h(main)n(tain)g(the)g(minim)n(um)h(distance)523
3375 y(b)r(et)n(w)n(een)f(all)f(pairs)g(of)g(mo)n(ving)g(ob)5
b(jects,)30 b(but)g(their)f(approac)n(h)f(re-tests)h(the)h(v)-5
b(alidit)n(y)29 b(of)523 3475 y(separating)f(planes)g(at)h(ev)n(ery)f
(step,)i(and)f(recalculates)e(these)i(separators)e(from)i(scratc)n(h)
523 3574 y(when)f(the)g(old)f(ones)g(fail.)648 3709 y(W)-7
b(e)26 b(ha)n(v)n(e)e(applied)i(the)g(metho)r(dology)f(describ)r(ed)g
(ab)r(o)n(v)n(e)g(to)h(a)f(n)n(um)n(b)r(er)g(of)h(problems)523
3809 y(in)j(2-D)f(computational)g(geometry)-7 b(.)39
b(In)28 b(this)h(pap)r(er,)g(w)n(e)f(presen)n(t)g(resp)r(onsiv)n(e,)f
(e\016cien)n(t,)523 3909 y(compact,)f(and)g(lo)r(cal)f(kinetic)h(data)g
(structures)f(for)g(t)n(w)n(o)g(imp)r(ortan)n(t)h(and)g(common)f(con-)
523 4008 y(\014guration)g(functions,)i(giving)f(represen)n(tativ)n(e)e
(examples)i(of)g(the)g(kinetization)g(pro)r(cess.)523
4108 y(Con)n(v)n(ex)h(h)n(ull)i(main)n(tenance)f(\(Section)g(2\))h
(calls)f(up)r(on)g(some)g(deep)h(theorems)f(of)g(com)n(bi-)523
4208 y(natorial)g(geometry)h(to)g(pro)n(v)n(e)f(the)i(e\016ciency)g(of)
g(the)g(structures)e(w)n(e)i(dev)n(elop.)42 b(Closest)523
4307 y(pair)33 b(main)n(tenance)h(\(Section)g(3\))g(requires)e(the)j
(dev)n(elopmen)n(t)e(of)h(a)f(no)n(v)n(el)g(static)h(algo-)523
4407 y(rithm,)26 b(and)g(sp)r(ecialized)f(data)g(structures)g(to)g
(handle)g(ev)n(en)n(ts)g(e\016cien)n(tly)-7 b(.)37 b(In)25
b(Section)h(4,)523 4506 y(w)n(e)d(tak)n(e)f(up)h(some)g(further)g
(issues)f(generated)g(b)n(y)h(this)g(framew)n(ork)e(for)i(mobile)g
(data)g(and)523 4606 y(presen)n(t)k(plans)g(for)g(further)h(w)n(ork.)
648 4741 y(F)-7 b(ollo)n(wing)25 b(the)j(publication)f(of)g(the)g
(conference)g(v)n(ersion)e(of)i(this)h(pap)r(er)e([9],)h(sev)n(eral)523
4841 y(kinetic)g(data)f(structures)f(ha)n(v)n(e)h(b)r(een)h(dev)n(elop)
r(ed)f(for)g(the)g(main)n(tenance)g(of)h(a)f(v)-5 b(ariet)n(y)25
b(of)1934 5147 y(8)p eop
%%Page: 9 9
9 8 bop 523 614 a Fr(structures:)47 b(binary)32 b(space)g(partitions)g
([1,)h(3],)h(closest)e(pair)h(and)f(minim)n(um)i(spanning)523
714 y(trees)28 b(in)g(arbitrary)e(dimensions)i([12)o(],)g(and)g
(diameter)g(and)f(width)i([2].)38 b(The)28 b(framew)n(ork)523
814 y(has)e(also)f(b)r(een)i(applied)g(to)f(the)h(problem)f(of)g
(collision)g(detection)g(b)r(et)n(w)n(een)h(p)r(olygons)e(in)523
913 y(t)n(w)n(o)i(dimensions)g([8,)g(20)o(].)523 1223
y Fs(2)135 b(2-D)45 b(con)l(v)l(ex)g(h)l(ull)523 1440
y Fr(In)35 b(this)g(section,)h(w)n(e)e(presen)n(t)g(an)g(e\016cien)n(t)
h(kinetic)f(data)g(structure)g(to)h(main)n(tain)f(the)523
1540 y(con)n(v)n(ex)19 b(h)n(ull)i(of)f(a)h(set)f(of)h(mo)n(ving)e(p)r
(oin)n(ts)i(in)g(the)g(plane.)34 b(F)-7 b(ollo)n(wing)20
b(our)g(general)f(strategy)523 1640 y(for)k(kinetization,)i(w)n(e)e
(\014rst)h(describ)r(e)f(a)h(static)f(algorithm)g(and)h(its)g
(certi\014cate)f(structure,)523 1739 y(simplify)29 b(these)g
(certi\014cates)e(to)i(attain)f(certain)g(desirable)g(prop)r(erties,)g
(and)g(then)h(sho)n(w)523 1839 y(ho)n(w)e(to)g(main)n(tain)h(the)g
(certi\014cate)f(structure)g(once)g(the)h(p)r(oin)n(ts)f(start)g(mo)n
(ving.)648 1974 y(Before)c(w)n(e)g(pro)r(ceed,)h(w)n(e)g(dualize)f(the)
i(problem,)f(as)f(the)h(algorithm)f(is)h(more)f(natural)523
2074 y(to)29 b(describ)r(e)g(in)h(the)f(dual)h(setting.)42
b(W)-7 b(e)29 b(fo)r(cus)h(here)e(on)h(computing)h(the)f(upp)r(er)h
(con)n(v)n(ex)523 2173 y(h)n(ull,)25 b(and)g(dualize)f(eac)n(h)g(p)r
(oin)n(t)h(\()p Fq(p;)14 b(q)s Fr(\))25 b(to)f(the)h(line)g
Fq(y)g Fr(=)e Fq(px)12 b Fr(+)g Fq(q)s Fr(.)37 b(In)24
b(the)h(dual,)g(the)g(goal)e(is)523 2273 y(to)j(main)n(tain)f(the)h
(upp)r(er)g(en)n(v)n(elop)r(e)f(of)h(a)g(family)g(of)f(lines)h(whose)f
(parameters)f(c)n(hange)h(in)523 2373 y(a)i(con)n(tin)n(uous,)f
(predictable)g(fashion.)36 b(W)-7 b(e)28 b(will)f(p)r(erform)f(the)i
(kinetization)e(in)h(the)h(st)n(yle)523 2472 y(of)d(the)g
Fq(O)r Fr(\()p Fq(n)14 b Fr(log)h Fq(n)p Fr(\))25 b(divide)g(and)g
(conquer)f(algorithm)g(men)n(tioned)h(in)g(Section)g(1.1)g(for)f(the)
523 2572 y(analysis)g(of)i(the)g(kinetic)g(tournamen)n(t:)35
b(w)n(e)26 b(divide)g(the)g(set)f(of)h Fq(n)g Fr(lines)f(in)n(to)h(t)n
(w)n(o)f(subsets)523 2671 y(of)c(roughly)e(equal)i(size,)h(compute)e
(their)h(upp)r(er)g(en)n(v)n(elop)r(es)f(recursiv)n(ely)-7
b(,)20 b(and)h(then)g(merge)523 2771 y(the)29 b(t)n(w)n(o)e(en)n(v)n
(elop)r(es.)37 b(T)-7 b(o)28 b(fo)r(cus)g(on)g(the)h(merge)e(step,)h(w)
n(e)g(\014rst)g(study)g(ho)n(w)g(to)g(main)n(tain)523
2871 y(the)g(upp)r(er)g(en)n(v)n(elop)r(e)e(of)i(t)n(w)n(o)f(con)n(v)n
(ex)f(piecewise)h(linear)g(univ)-5 b(ariate)27 b(functions.)523
3139 y Fk(2.1)112 b(Upp)s(er)38 b(en)m(v)m(elop)s(e)g(of)g(t)m(w)m(o)e
(c)m(hains)523 3327 y Fr(W)-7 b(e)35 b(represen)n(t)d(a)i(piecewise)g
(linear)f(function)i(b)n(y)f(a)g(doubly)g(link)n(ed)g(list)g(of)g
(edges)g(and)523 3427 y(v)n(ertices)c(ordered)g(from)h(left)h(to)f
(righ)n(t,)g(and)h(w)n(e)e(call)h(this)h(represen)n(tation)d(a)i
Fp(chain)p Fr(.)49 b(In)523 3526 y(this)29 b(section,)g(w)n(e)g
(consider)f(t)n(w)n(o)g(c)n(hains|a)g(red)h(and)g(a)f(blue|and)h
(presen)n(t)g(a)f(KDS)i(to)523 3626 y(main)n(tain)f(the)g(purple)h(c)n
(hain)e(that)i(represen)n(ts)d(the)j(upp)r(er)f(en)n(v)n(elop)r(e)f(of)
i(the)f(t)n(w)n(o)g(input)523 3726 y(c)n(hains.)648 3861
y(As)21 b(the)g(supp)r(orting)g(lines)g(are)f(the)h(primary)f(ob)5
b(jects)21 b(in)g(our)f(problem,)i(w)n(e)f(denote)g(b)n(y)523
3960 y(a)28 b(lo)n(w)n(ercase)f(letter)i(an)f(edge)g(or)g(its)h(supp)r
(orting)g(line,)g(and)g(b)n(y)f Fq(ab)g Fr(the)i(v)n(ertex)d(b)r(et)n
(w)n(een)523 4060 y(edges)i Fq(a)g Fr(and)g Fq(b)p Fr(.)42
b(F)-7 b(or)29 b(a)g(v)n(ertex)f Fq(ab)p Fr(,)h(the)h(edge)f(from)g
(the)h(other)f(c)n(hain)f(that)i(is)f(ab)r(o)n(v)n(e)f(or)523
4160 y(b)r(elo)n(w)f Fq(ab)g Fr(is)g(called)g(the)h Fp(c)l(ontender)h
(e)l(dge)f Fr(of)g Fq(ab)f Fr(and)g(denoted)g Fj(ce)o
Fr(\()p Fq(ab)p Fr(\);)h(w)n(e)f(add)g(to)g(eac)n(h)523
4259 y(v)n(ertex)k(a)h(p)r(oin)n(ter)g(to)g(its)h(con)n(tender)e(edge.)
51 b(W)-7 b(e)32 b(denote)h(b)n(y)f Fq(\037)p Fr(\()p
Fi(\001)14 b(\001)g(\001)p Fr(\))32 b(the)h(color)e(\(red)h(or)523
4359 y(blue\))c(of)f(an)g(input)i(v)n(ertex)d(or)g(edge.)37
b(Finally)-7 b(,)27 b(w)n(e)g(denote)h(b)n(y)f Fq(ab:)p
Fj(prev)e Fr(\(resp.)i Fq(ab:)p Fj(next)n Fr(\))523 4459
y(the)h(red)e(or)g(blue)i(v)n(ertex)e(closest)g(to)h
Fq(ab)g Fr(on)g(its)g(left)h(\(resp.)e(righ)n(t\).)37
b(This)27 b(is)g(easily)f(found)523 4558 y(b)n(y)i(comparing)f(the)h
Fq(x)p Fr(-co)r(ordinate)g(of)g(the)g(neigh)n(b)r(or)f(v)n(ertex)h(in)g
(the)h(c)n(hain)f(to)g(whic)n(h)g Fq(ab)523 4658 y Fr(b)r(elongs)f
(with)h(that)g(of)g(one)f(of)g(the)h(endp)r(oin)n(ts)g(of)g(the)f(con)n
(tender)g(edge)g(of)h Fq(ab)p Fr(.)648 4793 y(The)34
b(comparisons)f(done)h(b)n(y)h(a)f(standard)g(sw)n(eep)g(for)g(merging)
f(the)i(red)g(and)f(blue)523 4892 y(c)n(hains)k(lead)g(to)g
(certi\014cates)g(of)h(t)n(w)n(o)e(t)n(yp)r(es:)59 b
Fq(x)p Fr(-certi\014cates)38 b(pro)n(ving)f(the)i(horizon)n(tal)1934
5147 y(9)p eop
%%Page: 10 10
10 9 bop 523 614 a Fr(ordering)28 b(of)i(v)n(ertices,)g(denoted)g(b)n
(y)g Fq(<)1776 626 y Fl(x)1817 614 y Fr(,)h(and)f Fq(y)s
Fr(-certi\014cates)e(pro)n(ving)g(the)j(v)n(ertical)e(p)r(o-)523
714 y(sition)36 b(of)f(a)g(v)n(ertex)g(with)h(resp)r(ect)g(to)f(an)g
(edge,)j(denoted)d(b)n(y)h Fq(<)2652 726 y Fl(y)2691
714 y Fr(.)61 b(Unfortunately)-7 b(,)38 b(if)523 814
y(w)n(e)26 b(w)n(ere)g(to)h(k)n(eep)f(all)g(these)h(comparisons)e(as)h
(certi\014cates,)g(the)h(kinetic)g(data)f(structure)523
913 y(th)n(us)36 b(obtained)f(w)n(ould)h(not)f(b)r(e)i(lo)r(cal,)g(as)e
(a)g(giv)n(en)g(edge)h(could)f(b)r(e)h(the)g(con)n(tender)f(of)523
1013 y(linearly)d(man)n(y)h(v)n(ertices)f(from)h(the)h(other)f(en)n(v)n
(elop)r(e.)53 b(W)-7 b(e)33 b(th)n(us)h(build)g(an)f(alternativ)n(e)523
1112 y(list)g(of)g(certi\014cates)g(that)g(also)f(in)n(v)n(olv)n(es)f
(comparisons)g(b)r(et)n(w)n(een)i(line)g(slop)r(es,)h(denoted)523
1212 y(b)n(y)27 b Fq(<)703 1224 y Fl(s)766 1212 y Fr(\(Figure)g(2\).)
648 1347 y(The)i(follo)n(wing)f(table)h(giv)n(es)f(this)h(mo)r
(di\014ed)h(list)f(of)g(certi\014cates.)41 b(The)29 b(\014rst)g(column)
523 1447 y(con)n(tains)g(the)h(name)f(of)h(a)f(certi\014cate,)h(the)g
(second)f(column)g(con)n(tains)g(the)h(comparison)523
1546 y(that)h(this)g(certi\014cate)f(guaran)n(tees,)f(and)h(the)h
(third)g(column)g(con)n(tains)e(additional)h(con-)523
1646 y(ditions)e(for)f(this)h(certi\014cate)f(to)h(b)r(e)g(presen)n(t)g
(in)g(the)g(KDS.)38 b(F)-7 b(or)27 b(instance,)g(the)i(\014rst)e(line)
523 1746 y(in)32 b(the)h(table)f(sa)n(ys)f(that)h(there)g(is)g(a)g
(certi\014cate)f(called)h Fj(x)p Fr([)p Fq(ab)p Fr(])f(in)i(the)f(KDS)g
(only)g(when)523 1845 y Fq(ab)i Fr(and)g(its)h(righ)n(t)f(neigh)n(b)r
(or)f(are)h(of)g(di\013eren)n(t)h(colors)e(\(the)i Fp(c)l(ondition)p
Fr(\).)59 b(In)34 b(this)h(case,)523 1945 y(the)26 b
Fp(c)l(omp)l(arison)g Fr(certi\014es)f(the)h(lo)r(cal)e
Fq(x)p Fr(-ordering.)35 b(The)25 b(equation)g(asso)r(ciated)e(with)j
(this)523 2045 y(comparison)31 b(has)i(to)g(b)r(e)h(solv)n(ed)e(for)g
Fq(t)i Fr(in)f(order)f(to)h(\014nd)h(the)f(\014rst)g(time)h(at)f(whic)n
(h)g(the)523 2144 y(certi\014cate)27 b(fails.)p 1009
2274 1892 4 v 1007 2374 4 100 v 1051 2344 a Fq(C)6 b(er)r(t:)p
1347 2374 V 143 w(C)g(ompar)r(ison)p 2116 2374 V 308
w(C)g(ondition)p Fr(\()p Fq(s)p Fr(\))p 2899 2374 V 1009
2377 1892 4 v 1007 2477 4 100 v 1051 2447 a Fj(x)p Fr([)p
Fq(ab)p Fr(])p 1347 2477 V 169 w Fq(ab)23 b(<)1558 2459
y Fl(x)1622 2447 y Fq(ab:)p Fj(next)p 2116 2477 V 258
w Fq(\037)p Fr(\()p Fq(ab)p Fr(\))g Fi(6)p Fr(=)g Fq(\037)p
Fr(\()p Fq(ab:)p Fj(next)n Fr(\))p 2899 2477 V 1009 2480
1892 4 v 1007 2580 4 100 v 1051 2550 a Fj(yli)o Fr([)p
Fq(ab)p Fr(])p 1347 2580 V 82 w Fq(ab)g(<)1558 2562 y
Fl(y)1620 2550 y Fr(or)f Fq(>)1782 2562 y Fl(y)1845 2550
y Fj(ce)o Fr(\()p Fq(ab)p Fr(\))p 2116 2580 V 83 w Fq(b)c
Fi(\\)h Fj(ce)o Fr(\()p Fq(ab)p Fr(\))24 b Fi(6)p Fr(=)e
Fi(;)p 2899 2580 V 1009 2583 1892 4 v 1007 2683 4 100
v 1051 2653 a Fj(yri)o Fr([)p Fq(ab)p Fr(])p 1347 2683
V 82 w Fq(ab)h(<)1558 2665 y Fl(y)1620 2653 y Fr(or)f
Fq(>)1782 2665 y Fl(y)1845 2653 y Fj(ce)o Fr(\()p Fq(ab)p
Fr(\))p 2116 2683 V 83 w Fq(a)d Fi(\\)f Fj(ce)p Fr(\()p
Fq(ab)p Fr(\))23 b Fi(6)p Fr(=)f Fi(;)p 2899 2683 V 1009
2686 1892 4 v 1007 2786 4 100 v 1051 2756 a Fj(yt)o Fr([)p
Fq(ab)p Fr(])p 1347 2786 V 126 w Fj(ce)o Fr(\()p Fq(ab)p
Fr(\))i Fq(<)1710 2768 y Fl(y)1772 2756 y Fq(ab)p 2116
2786 V 307 w(a)f(<)2291 2768 y Fl(s)2349 2756 y Fj(ce)p
Fr(\()p Fq(ab)p Fr(\))g Fq(<)2669 2768 y Fl(s)2727 2756
y Fq(b)p 2899 2786 V 1009 2789 1109 4 v 1007 2885 4 100
v 1051 2855 a Fj(slt)o Fr([)p Fq(ab)p Fr(])p 1347 2885
V 82 w Fq(a)g(<)1522 2867 y Fl(s)1580 2855 y Fj(ce)p
Fr(\()p Fq(ab)p Fr(\))p 2116 2885 V 347 w Fj(ce)o Fr(\()p
Fq(ab)p Fr(\))h Fq(<)2479 2867 y Fl(y)2541 2855 y Fq(ab)p
2899 2885 V 1009 2889 1109 4 v 1007 2985 4 100 v 1051
2955 a Fj(srt)o Fr([)p Fq(ab)p Fr(])p 1347 2985 V 82
w Fj(ce)o Fr(\()p Fq(ab)p Fr(\))g Fq(<)1710 2967 y Fl(s)1768
2955 y Fq(b)p 2116 2985 V 2899 2985 V 1009 2988 1892
4 v 1007 3088 4 100 v 1051 3058 a Fj(sl)o Fr([)p Fq(ab)p
Fr(])p 1347 3088 V 126 w Fq(b)f(<)1514 3070 y Fl(s)1572
3058 y Fj(ce)o Fr(\()p Fq(ab)p Fr(\))p 2116 3088 V 356
w Fq(b)g(<)2283 3070 y Fl(s)2341 3058 y Fj(ce)o Fr(\()p
Fq(ab)p Fr(\))p 2899 3088 V 1007 3188 V 1347 3188 V 2116
3188 V 2159 3158 a Fq(ab)g(<)2327 3170 y Fl(y)2389 3158
y Fj(ce)p Fr(\()p Fq(ab)p Fr(\))p 2899 3188 V 1007 3287
V 1347 3287 V 2116 3287 V 2159 3257 a Fq(\037)p Fr(\()p
Fq(ab)p Fr(\))g Fi(6)p Fr(=)g Fq(\037)p Fr(\()p Fq(ab:)p
Fj(next)n Fr(\))p 2899 3287 V 1009 3290 1892 4 v 1007
3390 4 100 v 1051 3360 a Fj(sr)o Fr([)p Fq(ab)p Fr(])p
1347 3390 V 126 w Fj(ce)o Fr(\()p Fq(ab)p Fr(\))h Fq(<)1710
3372 y Fl(s)1768 3360 y Fq(a)p 2116 3390 V 347 w Fj(ce)o
Fr(\()p Fq(ab)p Fr(\))g Fq(<)2479 3372 y Fl(s)2537 3360
y Fq(a)p 2899 3390 V 1007 3490 V 1347 3490 V 2116 3490
V 2159 3460 a(ab)f(<)2327 3472 y Fl(y)2389 3460 y Fj(ce)p
Fr(\()p Fq(ab)p Fr(\))p 2899 3490 V 1007 3589 V 1347
3589 V 2116 3589 V 2159 3559 a Fq(\037)p Fr(\()p Fq(ab)p
Fr(\))g Fi(6)p Fr(=)g Fq(\037)p Fr(\()p Fq(ab:)p Fj(prev)n
Fr(\))p 2899 3589 V 1009 3593 1892 4 v 648 3782 a(The)37
b(certi\014cates)g(ha)n(v)n(e)g(the)h(follo)n(wing)e(meaning:)57
b(\(1\))37 b(The)h(exact)f Fq(x)p Fr(-ordering)f(of)523
3881 y(v)n(ertices)28 b(is)h(recorded)e(with)i Fj(x)p
Fr([)p Fi(\001)14 b(\001)g(\001)p Fr(])29 b(certi\014cates.)40
b(\(2\))29 b(Eac)n(h)f(in)n(tersection)g(is)g(surrounded)523
3981 y(b)n(y)h Fj(yli)o Fr([)p Fi(\001)14 b(\001)g(\001)o
Fr(])30 b(and)e Fj(yri)o Fr([)p Fi(\001)14 b(\001)g(\001)p
Fr(])29 b(certi\014cates)f(\(\\)p Fq(y)k Fr(left/righ)n(t)c(in)n
(tersection"\).)41 b(\(3\))29 b(If)g(an)g(edge)523 4081
y(is)40 b(not)h(part)f(of)g(the)h(upp)r(er)g(en)n(v)n(elop)r(e,)i(the)e
(certi\014cates)e(place)h(its)h(slop)r(e)f(in)h(the)g(se-)523
4180 y(quence)d(of)h(slop)r(es)f(of)g(the)h(edges)f(co)n(v)n(ering)e
(it:)59 b(either)39 b(three)f(\\tangen)n(t")f(certi\014cates)523
4280 y(\()p Fj(yt)o Fr([)p Fi(\001)14 b(\001)g(\001)p
Fr(])p Fq(;)g Fj(slt)o Fr([)p Fi(\001)g(\001)g(\001)p
Fr(])p Fq(;)g Fj(srt)o Fr([)p Fi(\001)g(\001)g(\001)p
Fr(]\),)26 b(or)f(one)h(certi\014cate)f(pro)n(ving)f(there)i(is)g(no)f
(tangen)n(t)h(\()p Fj(sl)o Fr([)p Fi(\001)14 b(\001)g(\001)p
Fr(])523 4379 y(or)24 b(its)h(symmetric)g Fj(sr)o Fr([)p
Fi(\001)14 b(\001)g(\001)p Fr(]\).)37 b(Illustrations)24
b(of)h(the)g(certi\014cates)f(app)r(ear)g(in)i(Figure)e(2.)36
b(T)-7 b(o)523 4479 y(b)r(e)31 b(complete,)g(w)n(e)g(need)f(to)h(add)f
(slop)r(e)h(certi\014cates)f(b)r(et)n(w)n(een)g(the)h(t)n(w)n(o)f
(leftmost)h(edges)523 4579 y(and)c(b)r(et)n(w)n(een)h(the)g(t)n(w)n(o)f
(righ)n(tmost)f(edges.)523 4797 y Fh(Lemma)k(2.1)40 b
Fp(Consider)f(a)e(c)l(on\014gur)l(ation)g Fi(C)k Fp(of)d(two)f(c)l
(onvex)g(pie)l(c)l(ewise)i(line)l(ar)f(func-)523 4896
y(tions)f(and)g(the)g(c)l(erti\014c)l(ate)g(list)g Fi(L)g
Fp(for)h(their)g(upp)l(er)f(envelop)l(e)h(as)f(de\014ne)l(d)g(ab)l
(ove.)62 b(L)l(et)1914 5147 y Fr(10)p eop
%%Page: 11 11
11 10 bop 995 570 a
 15156103 9093660 5920358 34009169 25325977 45718323 startTexFig
 995 570 a
%%BeginDocument: kinetic-chcertificates2.ps
%AI5_FileFormat 1.2
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Header
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 0
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: 54 744 2 748 712 18 0 1 2 40
%AI5_OpenViewLayers: 7
userdict /Adobe_level2_AI5 21 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	
	/gt38? mark {version cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
	level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI5_vars 70 dict dup begin
put
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_IllustratorA_AI5 74 dict dup begin
put
/initialize
{
	Adobe_IllustratorA_AI5 dup begin
	Adobe_IllustratorA_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_IllustratorA_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			clip /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore clip newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore clip newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore clip newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef clip
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
			
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
currentdict readonly pop
end
setpacking
Adobe_level2_AI5 /initialize get exec
Adobe_IllustratorA_AI5_vars Adobe_IllustratorA_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_IllustratorA_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Courier Courier
[/_Courier/Courier 0 0 1 TZ
%AI3_EndEncoding TrueType
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding TrueType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding TrueType
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @
(
800 Ar
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
3 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Red & Yellow)
(Red & Yellow) 0 2 Bd
[
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
FFFFFEFEFDFDFDFCFCFBFBFBFAFAF9F9F9F8F8F7F7F7F6F6F5F5F5F4F4F3F3F3F2F2F1F1F1F0F0EF
EFEFEEEEEDEDEDECECEBEBEBEAEAE9E9E9E8E8E7E7E7E6E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DF
DFDFDEDEDDDDDDDCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D5D5D5D4D4D3D3D3D2D2D1D1D1D0D0CF
CFCFCECECDCDCDCCCCCBCBCBCACAC9C9C9C8C8C7C7C7C6C6C5C5C5C4C4C3C3C3C2C2C1C1C1C0C0BF
BFBFBEBEBDBDBDBCBCBBBBBBBABAB9B9B9B8B8B7B7B7B6B6B5B5B5B4B4B3B3B3B2B2B1B1B1B0B0AF
AFAFAEAEADADADACACABABABAAAAA9A9A9A8A8A7A7A7A6A6A5A5A5A4A4A3A3A3A2A2A1A1A1A0A09F
9F9F9E9E9D9D9D9C9C9B9B9B9A9A9999
>
0
1 %_Br
[
0 1 0.6 0 1 50 100 %_Bs
0 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Blue Radial)
(Yellow & Blue Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 2 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Blue Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
(Yellow Stripe) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
0 0 0 0 k
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
0 0 0 0 k
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
0 0 0 0 k
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
1 Ap
0 R
0 G
800 Ar
0 J 0 j 0.25 w 4 M []0 d
%AI3_Note:
0 D
384.0004 517.4994 m
384.0004 693.9998 L
90.7518 693.9998 L
90.7518 517.4994 L
384.0004 517.4994 L
s
u
u
0 Ap
0.5 G
1 J 3 w
101.6761 645.4032 m
158.0397 643.3248 l
S
137.6079 637.0895 m
214 684.5 l
S
U
u
0 G
127 677 m
198.4629 637.6091 l
S
180.8493 637.6091 m
232.5 645.5 l
S
U
0 To
1 0 0 1 98.0625 655.6875 0 Tp
TP
0 Tr
0 O
0 g
0 J 1 w
/_Courier 12 Tf
0 Ts
100 Tz
0 Tt
0 TA
%_ 0 XL
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 0 2 2 3 Th
0 Tq
0 0 Tl
0 Tc
0 Tw
(yli) Tx 
/_Helvetica 12 Tf
([) Tx 
/_Times-Italic 12 Tf
(ab) Tx 
/_Helvetica 12 Tf
(] ) Tx 
(\r) TX 
TO
0 To
1 0 0 1 157.0625 612.6875 0 Tp
TP
0 Tr
/_Courier 12 Tf
(x) Tx 
/_Helvetica 12 Tf
([) Tx 
/_Times-Italic 12 Tf
(ab) Tx 
/_Helvetica 12 Tf
(] ) Tx 
(\r) TX 
TO
0 To
1 0 0 1 197.0625 655.1875 0 Tp
TP
0 Tr
/_Courier 12 Tf
(yri) Tx 
/_Helvetica 12 Tf
([) Tx 
/_Times-Italic 12 Tf
(a'b') Tx 
/_Helvetica 12 Tf
(]) Tx 
(\r) TX 
TO
u
0 R
0 G
0.5 w [2 2 ]0 d
193.4624 664.0337 m
193.4624 646.5757 l
S
0 O
0 g
1 w []0 d
193.8815 645.7945 m
194.0856 646.3413 194.2737 646.6967 194.4914 647.1355 c
192.4288 647.1355 l
192.5209 646.9784 192.8346 646.3413 193.0386 645.7945 c
193.2573 645.2093 193.4067 644.6787 193.4601 644.3345 c
193.5135 644.6787 193.6629 645.2093 193.8815 645.7945 c
f
193.0433 664.8149 m
192.8392 664.2681 192.6511 663.9127 192.4334 663.474 c
194.496 663.474 l
194.4039 663.631 194.0902 664.2681 193.8862 664.8149 c
193.6675 665.4001 193.518 665.9308 193.4647 666.275 c
193.4113 665.9308 193.2619 665.4001 193.0433 664.8149 c
f
U
u
0 R
0 G
0.5 w [2 2 ]0 d
150.4985 624.3738 m
188.3364 624.3738 l
S
0 O
0 g
1 w []0 d
189.4536 624.7974 m
188.6716 625.0037 188.1634 625.1938 187.5359 625.4139 c
187.5359 623.3291 l
187.7605 623.4221 188.6716 623.7393 189.4536 623.9455 c
190.2905 624.1665 191.0494 624.3176 191.5417 624.3715 c
191.0494 624.4254 190.2905 624.5765 189.4536 624.7974 c
f
149.3812 623.9502 m
150.1632 623.7439 150.6715 623.5538 151.2989 623.3338 c
151.2989 625.4185 l
151.0744 625.3255 150.1632 625.0083 149.3812 624.8022 c
148.5444 624.5812 147.7854 624.43 147.2932 624.3761 c
147.7854 624.3222 148.5444 624.1711 149.3812 623.9502 c
f
U
u
0 R
0 G
0.5 w [2 2 ]0 d
144.7126 660.4501 m
144.7126 649.1484 l
S
0 O
0 g
1 w []0 d
145.1331 648.49 m
145.3378 648.9508 145.5265 649.2504 145.7449 649.6202 c
143.6757 649.6202 l
143.768 649.4879 144.0828 648.9508 144.2875 648.49 c
144.5068 647.9967 144.6568 647.5494 144.7103 647.2593 c
144.7639 647.5494 144.9138 647.9967 145.1331 648.49 c
f
144.2922 661.1086 m
144.0874 660.6477 143.8987 660.3481 143.6803 659.9783 c
145.7496 659.9783 l
145.6572 660.1107 145.3424 660.6477 145.1378 661.1086 c
144.9184 661.6018 144.7684 662.0491 144.7149 662.3393 c
144.6614 662.0491 144.5114 661.6018 144.2922 661.1086 c
f
U
0 To
1 0 0 1 108.5 636.5 0 Tp
TP
0 Tr
/_Times-Italic 12 Tf
(a) Tx 
(\r) TX 
TO
0 To
1 0 0 1 216.5 681 0 Tp
TP
0 Tr
(b) Tx 
(\r) TX 
TO
0 To
1 0 0 1 115 676 0 Tp
TP
0 Tr
(a') Tx 
(\r) TX 
TO
0 To
1 0 0 1 232 638.5 0 Tp
TP
0 Tr
(b') Tx 
(\r) TX 
TO
U
u
0 To
1 0 0 1 157.25 553.375 0 Tp
TP
0 Tr
/_Courier 12 Tf
(slt) Tx 
/_Helvetica 12 Tf
([) Tx 
/_Times-Italic 12 Tf
(ab) Tx 
/_Helvetica 12 Tf
(] ) Tx 
(\r) TX 
TO
0 To
1 0 0 1 210.75 529.875 0 Tp
TP
0 Tr
/_Courier 12 Tf
(yt) Tx 
/_Helvetica 12 Tf
([) Tx 
/_Times-Italic 12 Tf
(ab) Tx 
/_Helvetica 12 Tf
(] ) Tx 
(\r) TX 
TO
0 To
1 0 0 1 248.75 551.875 0 Tp
TP
0 Tr
/_Courier 12 Tf
(srt) Tx 
/_Helvetica 12 Tf
([) Tx 
/_Times-Italic 12 Tf
(ab) Tx 
/_Helvetica 12 Tf
(]) Tx 
(\r) TX 
TO
0 To
1 0 0 1 202.6875 571.6875 0 Tp
TP
0 Tr
/_Times-Italic 12 Tf
(a) Tx 
(\r) TX 
TO
0 To
1 0 0 1 241.6875 569.6875 0 Tp
TP
0 Tr
(b) Tx 
(\r) TX 
TO
u
0 R
0 G
3 w
134.1874 572.4803 m
164.1874 537.147 l
S
150.8541 545.147 m
328.5207 539.8137 l
S
303.1874 531.147 m
336.5207 565.147 l
S
U
u
0.5 G
151.9375 591.3125 m
195.1875 566.1875 l
S
171.1874 573.8137 m
236.1875 562.1875 l
S
216.6875 562.1875 m
276.6874 570.3137 l
S
252.6875 564.6875 m
311.5 586.5 l
S
282.5625 570.375 m
327.5625 602.25 l
S
U
u
0 G
0.5 w [2 2 ]0 d
204.5787 560.7791 m
204.5787 551.2019 l
S
0 O
0 g
1 w []0 d
204.8981 550.2524 m
205.0537 550.917 205.1971 551.349 205.3631 551.8822 c
203.7907 551.8822 l
203.8609 551.6914 204.1001 550.917 204.2556 550.2524 c
204.4223 549.5411 204.5362 548.896 204.5769 548.4777 c
204.6176 548.896 204.7315 549.5411 204.8981 550.2524 c
f
204.2592 561.7287 m
204.1036 561.0641 203.9602 560.632 203.7942 560.0988 c
205.3666 560.0988 l
205.2964 560.2897 205.0572 561.0641 204.9017 561.7287 c
204.735 562.44 204.6211 563.085 204.5804 563.5034 c
204.5397 563.085 204.4258 562.44 204.2592 561.7287 c
f
U
u
0 R
0 G
0.5 w [2 2 ]0 d
226.347 556.6794 m
226.347 548.3604 l
S
0 O
0 g
1 w []0 d
226.758 547.1305 m
226.9582 547.9913 227.1426 548.5509 227.3561 549.2416 c
225.3333 549.2416 l
225.4236 548.9944 225.7313 547.9913 225.9313 547.1305 c
226.1458 546.2091 226.2924 545.3737 226.3447 544.8318 c
226.397 545.3737 226.5436 546.2091 226.758 547.1305 c
f
225.936 557.9093 m
225.7358 557.0484 225.5513 556.4889 225.3378 555.7982 c
227.3607 555.7982 l
227.2704 556.0454 226.9627 557.0484 226.7626 557.9093 c
226.5482 558.8306 226.4015 559.6661 226.3492 560.208 c
226.2969 559.6661 226.1503 558.8306 225.936 557.9093 c
f
U
u
0 R
0 G
0.5 w [2 2 ]0 d
243.4527 558.3974 m
243.4527 549.0151 l
S
0 O
0 g
1 w []0 d
243.8637 548.1067 m
244.0639 548.7425 244.2483 549.1558 244.4618 549.6659 c
242.439 549.6659 l
242.5293 549.4833 242.837 548.7425 243.0371 548.1067 c
243.2515 547.4263 243.3981 546.8092 243.4504 546.409 c
243.5028 546.8092 243.6493 547.4263 243.8637 548.1067 c
f
243.0417 559.3058 m
242.8415 558.67 242.657 558.2567 242.4435 557.7466 c
244.4664 557.7466 l
244.3761 557.9292 244.0684 558.67 243.8683 559.3058 c
243.6539 559.9862 243.5073 560.6033 243.4549 561.0035 c
243.4026 560.6033 243.256 559.9862 243.0417 559.3058 c
f
U
U
u
0 To
1 0 0 1 297.1042 636.8125 0 Tp
TP
0 Tr
/_Courier 12 Tf
(sl) Tx 
/_Helvetica 12 Tf
([) Tx 
/_Times-Italic 12 Tf
(a'b') Tx 
/_Helvetica 12 Tf
(]) Tx 
(\r) TX 
TO
u
0 R
0 G
0.5 w [2 2 ]0 d
288.9801 650.7139 m
288.9801 634.5052 l
S
0 O
0 g
1 w []0 d
289.3969 633.8199 m
289.5999 634.2996 289.787 634.6113 290.0035 634.9962 c
287.9522 634.9962 l
288.0438 634.8584 288.3558 634.2996 288.5587 633.8199 c
288.7761 633.3066 288.9248 632.8411 288.9779 632.5391 c
289.0309 632.8411 289.1796 633.3066 289.3969 633.8199 c
f
288.5634 651.3991 m
288.3603 650.9195 288.1733 650.6078 287.9568 650.2229 c
290.0081 650.2229 l
289.9165 650.3607 289.6045 650.9195 289.4016 651.3991 c
289.1842 651.9125 289.0355 652.378 288.9824 652.6799 c
288.9293 652.378 288.7807 651.9125 288.5634 651.3991 c
f
U
0 To
1 0 0 1 256.7083 634.7917 0 Tp
TP
0 Tr
/_Times-Italic 12 Tf
(a') Tx 
(\r) TX 
TO
0 To
1 0 0 1 361.375 623.9583 0 Tp
TP
0 Tr
(b') Tx 
(\r) TX 
TO
u
0 R
0 G
3 w
271.5417 631.4583 m
362.6667 628.6667 l
S
U
u
0.5 G
269.2918 652.853 m
329.2917 660.9792 l
S
305.2918 655.353 m
352.7917 672.4792 l
S
334.9167 662.2917 m
364.875 682.9375 l
S
U
0 G
283.0417 624.4583 m
267.0417 646.9583 l
S
U
LB
%AI5_EndLayer--
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI5 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EndDocument

 endTexFig
 523 1905 a Fr(Figure)22 b(2:)34 b(Dep)r(ending)24 b(on)e(the)i
(relativ)n(e)d(p)r(ositions)i(of)f(the)i(red)e(and)h(blue)g(con)n(v)n
(ex)e(c)n(hains,)523 2004 y(di\013eren)n(t)26 b(certi\014cates)f(are)g
(used)h(to)g(certify)g(the)g(in)n(tersection)g(structure)f(\(top)h
(left)h(case\))523 2104 y(or)33 b(the)h(absence)g(of)g(in)n(tersection)
f(\(top)h(righ)n(t)f(and)h(b)r(ottom)g(cases\).)55 b(Arro)n(ws)32
b(p)r(oin)n(t)j(to)523 2204 y(the)28 b(elemen)n(ts)f(b)r(eing)h
(compared)f(\(v)n(ertices)f(or)h(edges\).)995 2369 y
 15156103 16520152 4341596 23089397 24931287 45718323 startTexFig

995 2369 a
%%BeginDocument: kinetic-chevents.ps
%AI5_FileFormat 1.2
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Header
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 0
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: 98 564 3 748 712 18 0 1 2 40
%AI5_OpenViewLayers: 7
userdict /Adobe_level2_AI5 21 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	
	/gt38? mark {version cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
	level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI5_vars 70 dict dup begin
put
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_IllustratorA_AI5 74 dict dup begin
put
/initialize
{
	Adobe_IllustratorA_AI5 dup begin
	Adobe_IllustratorA_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_IllustratorA_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			clip /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore clip newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore clip newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore clip newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef clip
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
			
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
currentdict readonly pop
end
setpacking
Adobe_level2_AI5 /initialize get exec
Adobe_IllustratorA_AI5_vars Adobe_IllustratorA_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_IllustratorA_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Courier Courier
[/_Courier/Courier 0 0 1 TZ
%AI3_EndEncoding TrueType
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding TrueType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding TrueType
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @
(
800 Ar
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
3 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Red & Yellow)
(Red & Yellow) 0 2 Bd
[
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
FFFFFEFEFDFDFDFCFCFBFBFBFAFAF9F9F9F8F8F7F7F7F6F6F5F5F5F4F4F3F3F3F2F2F1F1F1F0F0EF
EFEFEEEEEDEDEDECECEBEBEBEAEAE9E9E9E8E8E7E7E7E6E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DF
DFDFDEDEDDDDDDDCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D5D5D5D4D4D3D3D3D2D2D1D1D1D0D0CF
CFCFCECECDCDCDCCCCCBCBCBCACAC9C9C9C8C8C7C7C7C6C6C5C5C5C4C4C3C3C3C2C2C1C1C1C0C0BF
BFBFBEBEBDBDBDBCBCBBBBBBBABAB9B9B9B8B8B7B7B7B6B6B5B5B5B4B4B3B3B3B2B2B1B1B1B0B0AF
AFAFAEAEADADADACACABABABAAAAA9A9A9A8A8A7A7A7A6A6A5A5A5A4A4A3A3A3A2A2A1A1A1A0A09F
9F9F9E9E9D9D9D9C9C9B9B9B9A9A9999
>
0
1 %_Br
[
0 1 0.6 0 1 50 100 %_Bs
0 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Blue Radial)
(Yellow & Blue Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 2 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Blue Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
(Yellow Stripe) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
0 0 0 0 k
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
0 0 0 0 k
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
0 0 0 0 k
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
1 Ap
0 R
0 G
800 Ar
0 J 0 j 0.25 w 4 M []0 d
%AI3_Note:
0 D
377.9996 351.9966 m
377.9996 693.9998 L
67.001 693.9998 L
67.001 351.9966 L
377.9996 351.9966 L
s
0 To
1 0 0 1 151.9375 624.0625 0 Tp
TP
0 Tr
0 O
0 g
1 w
/_Times-Italic 12 Tf
0 Ts
100 Tz
0 Tt
0 TA
%_ 0 XL
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 0 2 2 3 Th
0 Tq
0 0 Tl
0 Tc
0 Tw
(d) Tx 
(\r) TX 
TO
0 Ap
0 R
0 G
0.25 w [1 ]0 d
166.625 621.6277 m
294.625 621.6277 l
S
166.625 554.3581 m
294.625 554.3581 l
S
166.625 487.0885 m
294.625 487.0885 l
S
166.625 419.8189 m
294.625 419.8189 l
S
u
u
u
0 To
1 0 0 1 212.7418 668.0491 0 Tp
TP
0 Tr
0 O
0 g
1 w []0 d
/_Courier 12 Tf
(sl) Tx 
/_Helvetica 12 Tf
([) Tx 
/_Times-Italic 12 Tf
(cd) Tx 
/_Helvetica 12 Tf
(] ) Tx 
(\r) TX 
TO
0 To
1 0 0 1 210.4728 634.6741 0 Tp
TP
0 Tr
/_Courier 12 Tf
(slt) Tx 
/_Helvetica 12 Tf
([) Tx 
/_Times-Italic 12 Tf
(ab) Tx 
/_Helvetica 12 Tf
(]) Tx 
(\r) TX 
TO
u
0 R
0 G
209.6562 656.7991 m
249.6562 656.7991 l
S
0 O
0 g
251.5521 656.2991 m
246.2187 656.2991 l
237.7187 662.7991 l
251.5521 656.2991 l
f
U
u
0 R
0 G
251.5521 652.9869 m
211.5521 652.9863 l
S
0 O
0 g
209.6562 653.4862 m
214.9896 653.4863 l
223.4897 646.9864 l
209.6562 653.4862 l
f
U
U
u
0 R
0.5 G
1 J 3 w
115 648.8054 m
178.0389 660.6829 l
S
157.0389 650.4954 m
187.0389 672.4954 l
S
u
0 G
108.4877 647.6412 m
129.9764 630.2454 l
S
118.8514 634.6204 m
179.8514 635.6204 l
S
U
0 To
1 0 0 1 140.8514 659.6204 0 Tp
TP
0 Tr
0 O
0 g
0 J 1 w
/_Times-Italic 12 Tf
(a) Tx 
(\r) TX 
TO
0 To
1 0 0 1 170.8514 670.6204 0 Tp
TP
0 Tr
(b) Tx 
(\r) TX 
TO
0 To
1 0 0 1 103.7889 632.6829 0 Tp
TP
0 Tr
(c) Tx 
(\r) TX 
TO
u
0 R
0 G
3 w [2 1 ]0 d
124.6014 654.1204 m
123.3514 658.3704 124.3514 661.3704 127.6014 665.6204 c
S
0 O
0 g
1 w []0 d
128.1228 657.9263 m
127.1719 665.0587 l
120.0395 664.1077 l
122.6613 667.5362 l
129.7937 668.4872 l
130.7447 661.3548 l
128.1228 657.9263 l
f
U
U
u
u
0 R
0.5 G
1 J 3 w
286 672.8054 m
346.9611 663.0592 l
S
335.0236 659.33 m
355.9611 674.8717 l
S
U
u
0 G
277.4099 650.0175 m
298.8986 632.6217 l
S
287.7736 636.9967 m
348.7736 637.9967 l
S
U
0 To
1 0 0 1 309.6903 673.33 0 Tp
TP
0 Tr
0 O
0 g
0 J 1 w
(a) Tx 
(\r) TX 
TO
0 To
1 0 0 1 348.0236 676.9967 0 Tp
TP
0 Tr
(b) Tx 
(\r) TX 
TO
0 To
1 0 0 1 272.6278 640.3925 0 Tp
TP
0 Tr
(c) Tx 
(\r) TX 
TO
0 To
1 0 0 1 324.6277 625.3925 0 Tp
TP
0 Tr
(d) Tx 
(\r) TX 
TO
u
0 R
0 G
3 w [2 1 ]0 d
298.4531 667.4783 m
297.2031 663.2283 298.2031 660.2283 301.4531 655.9783 c
S
0 O
0 g
1 w []0 d
301.9746 663.6724 m
301.0236 656.54 l
293.8912 657.491 l
296.513 654.0624 l
303.6454 653.1115 l
304.5964 660.2439 l
301.9746 663.6724 l
f
U
U
U
0 To
1 0 0 1 82.266 651.1946 0 Tp
TP
0 Tr
(\(i\)) Tx 
(\r) TX 
TO
U
u
u
u
u
0 To
1 0 0 1 212.4049 602.2795 0 Tp
TP
0 Tr
/_Courier 12 Tf
(sl) Tx 
/_Helvetica 12 Tf
([) Tx 
/_Times-Italic 12 Tf
(ab) Tx 
/_Helvetica 12 Tf
(] ) Tx 
(\r) TX 
TO
0 To
1 0 0 1 214.4088 568.9045 0 Tp
TP
0 Tr
/_Courier 12 Tf
(sr) Tx 
/_Helvetica 12 Tf
([) Tx 
/_Times-Italic 12 Tf
(bc) Tx 
/_Helvetica 12 Tf
(]) Tx 
(\r) TX 
TO
u
0 R
0 G
209.6562 591.0295 m
249.6562 591.0295 l
S
0 O
0 g
251.5521 590.5295 m
246.2187 590.5295 l
237.7187 597.0295 l
251.5521 590.5295 l
f
U
u
0 R
0 G
251.5521 587.2173 m
211.5521 587.2167 l
S
0 O
0 g
209.6562 587.7166 m
214.9896 587.7167 l
223.4897 581.2168 l
209.6562 587.7166 l
f
U
U
u
u
0 R
0.5 G
1 J 3 w
114.5321 593.1337 m
185.5321 606.1337 l
S
U
u
0 G
114.5321 584.1337 m
130.5321 575.1337 l
S
116.8957 578.1129 m
177.8957 579.1129 l
S
164.5321 574.1337 m
181.5321 588.1337 l
S
U
0 To
1 0 0 1 104.5321 580.1337 0 Tp
TP
0 Tr
0 O
0 g
0 J 1 w
/_Times-Italic 12 Tf
(a) Tx 
(\r) TX 
TO
0 To
1 0 0 1 139.5321 567.1337 0 Tp
TP
0 Tr
(b) Tx 
(\r) TX 
TO
0 To
1 0 0 1 182.4696 582.1962 0 Tp
TP
0 Tr
(c) Tx 
(\r) TX 
TO
u
0 R
0 G
3 w [2 1 ]0 d
117.7196 597.5087 m
116.4696 601.7587 117.4696 604.7587 120.7196 609.0087 c
S
0 O
0 g
1 w []0 d
121.241 601.3146 m
120.29 608.447 l
113.1576 607.496 l
115.7795 610.9245 l
122.9119 611.8755 l
123.8628 604.7431 l
121.241 601.3146 l
f
U
U
U
u
u
0 R
0.5 G
1 J 3 w
283.4126 603.3212 m
351.4126 595.3212 l
S
U
u
0 G
283.4126 582.3212 m
299.4126 573.3212 l
S
285.7763 576.3004 m
346.7763 577.3004 l
S
333.4126 572.3212 m
350.4126 586.3212 l
S
U
0 To
1 0 0 1 273.4126 578.3212 0 Tp
TP
0 Tr
0 O
0 g
0 J 1 w
(a) Tx 
(\r) TX 
TO
0 To
1 0 0 1 308.4126 565.3212 0 Tp
TP
0 Tr
(b) Tx 
(\r) TX 
TO
0 To
1 0 0 1 351.3501 580.3837 0 Tp
TP
0 Tr
(c) Tx 
(\r) TX 
TO
u
0 R
0 G
3 w [2 1 ]0 d
348.4126 599.3212 m
349.6625 603.5712 348.6625 606.5712 345.4124 610.8212 c
S
0 O
0 g
1 w []0 d
344.8911 603.127 m
345.8419 610.2595 l
352.9744 609.3086 l
350.3525 612.7371 l
343.2201 613.688 l
342.2692 606.5555 l
344.8911 603.127 l
f
U
U
U
0 To
1 0 0 1 78.932 583.925 0 Tp
TP
0 Tr
(\(ii\)) Tx 
(\r) TX 
TO
U
u
u
u
0 To
1 0 0 1 208.8058 533.5099 0 Tp
TP
0 Tr
/_Courier 12 Tf
(yli) Tx 
/_Helvetica 12 Tf
([) Tx 
/_Times-Italic 12 Tf
(ab) Tx 
/_Helvetica 12 Tf
(] ) Tx 
(\r) TX 
TO
0 To
1 0 0 1 210.4728 500.1349 0 Tp
TP
0 Tr
/_Courier 12 Tf
(yri) Tx 
/_Helvetica 12 Tf
([) Tx 
/_Times-Italic 12 Tf
(ab) Tx 
/_Helvetica 12 Tf
(]) Tx 
(\r) TX 
TO
u
0 R
0 G
209.6562 522.2599 m
249.6562 522.2599 l
S
0 O
0 g
251.5521 521.7599 m
246.2187 521.7599 l
237.7187 528.2599 l
251.5521 521.7599 l
f
U
u
0 R
0 G
251.5521 518.4477 m
211.5521 518.4471 l
S
0 O
0 g
209.6562 518.947 m
214.9896 518.9471 l
223.4897 512.4472 l
209.6562 518.947 l
f
U
U
u
u
0 R
0.5 G
1 J 3 w
123.4139 500.9054 m
161.8514 512.9679 l
S
145.4139 500.9054 m
165.4139 534.9054 l
S
U
0 To
1 0 0 1 113.4139 496.8221 0 Tp
TP
0 Tr
0 O
0 g
0 J 1 w
/_Times-Italic 12 Tf
(a) Tx 
(\r) TX 
TO
0 To
1 0 0 1 168.4139 534.1554 0 Tp
TP
0 Tr
(b) Tx 
(\r) TX 
TO
u
0 R
0 G
3 w [2 1 ]0 d
125.5389 504.9054 m
125.6486 513.8706 l
S
0 O
0 g
1 w []0 d
120.5684 508.0689 m
125.6496 513.1635 l
130.7442 508.0824 l
130.7385 512.3984 l
125.6439 517.4796 l
120.5627 512.3849 l
120.5684 508.0689 l
f
U
0 R
0 G
1 J 3 w
126.4139 522.0304 m
177.4139 523.9054 l
S
U
u
0 To
1 0 0 1 342.5444 535.8017 0 Tp
TP
0 Tr
0 O
0 g
0 J 1 w
(b) Tx 
(\r) TX 
TO
0 To
1 0 0 1 281.5444 502.8017 0 Tp
TP
0 Tr
(a) Tx 
(\r) TX 
TO
u
0 R
0 G
3 w [2 1 ]0 d
299.4337 507.0598 m
299.5435 498.0946 l
S
0 O
0 g
1 w []0 d
294.4632 503.8963 m
299.5444 498.8017 l
304.6391 503.8829 l
304.6333 499.5668 l
299.5387 494.4857 l
294.4575 499.5803 l
294.4632 503.8963 l
f
U
u
0 R
0.5 G
1 J 3 w
292.5444 507.8017 m
339.5444 528.8017 l
S
318.5444 503.8017 m
338.5444 540.8017 l
S
U
0 G
287.7944 514.4267 m
338.7944 516.3017 l
S
U
U
0 To
1 0 0 1 75.598 516.6554 0 Tp
TP
0 Tr
0 O
0 g
0 J 1 w
(\(iii\)) Tx 
(\r) TX 
TO
U
u
u
u
0 To
1 0 0 1 208.8058 466.2403 0 Tp
TP
0 Tr
/_Courier 12 Tf
(yli) Tx 
/_Helvetica 12 Tf
([) Tx 
/_Times-Italic 12 Tf
(ab) Tx 
/_Helvetica 12 Tf
(] ) Tx 
(\r) TX 
TO
0 To
1 0 0 1 214.0719 432.8653 0 Tp
TP
0 Tr
/_Courier 12 Tf
(yt) Tx 
/_Helvetica 12 Tf
([) Tx 
/_Times-Italic 12 Tf
(ab) Tx 
/_Helvetica 12 Tf
(]) Tx 
(\r) TX 
TO
u
0 R
0 G
209.6562 454.9903 m
249.6562 454.9903 l
S
0 O
0 g
251.5521 454.4903 m
246.2187 454.4903 l
237.7187 460.9903 l
251.5521 454.4903 l
f
U
u
0 R
0 G
251.5521 451.1781 m
211.5521 451.1775 l
S
0 O
0 g
209.6562 451.6774 m
214.9896 451.6775 l
223.4897 445.1776 l
209.6562 451.6774 l
f
U
U
u
0 R
0.5 G
1 J 3 w
115.9139 461.1241 m
152.9139 432.1241 l
S
135.9139 432.1241 m
173.9139 466.1241 l
S
0 To
1 0 0 1 105.9139 461.1241 0 Tp
TP
0 Tr
0 O
0 g
0 J 1 w
/_Times-Italic 12 Tf
(a) Tx 
(\r) TX 
TO
0 To
1 0 0 1 175.9139 465.1241 0 Tp
TP
0 Tr
(b) Tx 
(\r) TX 
TO
u
0 R
0 G
3 w [2 1 ]0 d
122.5292 460.762 m
129.0162 466.9512 l
S
0 O
0 g
1 w []0 d
128.2315 459.2796 m
128.498 466.47 l
121.3076 466.7366 l
124.4705 469.6733 l
131.6609 469.4067 l
131.3943 462.2163 l
128.2315 459.2796 l
f
U
0 R
0 G
1 J 3 w
115.9139 450.1241 m
184.9139 450.1241 l
S
U
u
0 To
1 0 0 1 295.2944 465.6241 0 Tp
TP
0 Tr
0 O
0 g
0 J 1 w
(a) Tx 
(\r) TX 
TO
0 To
1 0 0 1 349.2944 466.6241 0 Tp
TP
0 Tr
(b) Tx 
(\r) TX 
TO
u
0 R
0 G
3 w [2 1 ]0 d
308.3606 460.6575 m
301.8737 454.4682 l
S
0 O
0 g
1 w []0 d
302.6583 462.1398 m
302.3919 454.9494 l
309.5823 454.6829 l
306.4194 451.7462 l
299.2291 452.0127 l
299.4955 459.2031 l
302.6583 462.1398 l
f
U
0 R
0.5 G
1 J 3 w
306.2944 466.6241 m
332.2319 446.3741 l
S
303.2944 430.6241 m
348.2944 469.6241 l
S
0 G
276.2944 442.6241 m
345.2944 442.6241 l
S
U
U
0 To
1 0 0 1 76.9398 449.3858 0 Tp
TP
0 Tr
0 O
0 g
0 J 1 w
(\(iv\)) Tx 
(\r) TX 
TO
U
u
u
u
0 To
1 0 0 1 210.7418 398.9707 0 Tp
TP
0 Tr
/_Courier 12 Tf
(slt) Tx 
/_Helvetica 12 Tf
([) Tx 
/_Times-Italic 12 Tf
(bc) Tx 
/_Helvetica 12 Tf
(] ) Tx 
(\r) TX 
TO
0 To
1 0 0 1 212.0719 365.5957 0 Tp
TP
0 Tr
/_Courier 12 Tf
(srt) Tx 
/_Helvetica 12 Tf
([) Tx 
/_Times-Italic 12 Tf
(ab) Tx 
/_Helvetica 12 Tf
(]) Tx 
(\r) TX 
TO
u
0 R
0 G
209.6562 387.7207 m
249.6562 387.7207 l
S
0 O
0 g
251.5521 387.2207 m
246.2187 387.2207 l
237.7187 393.7207 l
251.5521 387.2207 l
f
U
u
0 R
0 G
251.5521 383.9085 m
211.5521 383.9079 l
S
0 O
0 g
209.6562 384.4078 m
214.9896 384.4079 l
223.4897 377.908 l
209.6562 384.4078 l
f
U
U
u
0 R
0.5 G
1 J 3 w
115.2889 406.5278 m
133.4139 374.8403 l
S
119.4139 387.8403 m
175.4139 371.8403 l
S
0 To
1 0 0 1 105.0806 403.507 0 Tp
TP
0 Tr
0 O
0 g
0 J 1 w
/_Times-Italic 12 Tf
(a) Tx 
(\r) TX 
TO
0 To
1 0 0 1 137.4139 369.8403 0 Tp
TP
0 Tr
(b) Tx 
(\r) TX 
TO
0 To
1 0 0 1 180.3514 386.9028 0 Tp
TP
0 Tr
(c) Tx 
(\r) TX 
TO
u
0 R
0 G
3 w [2 1 ]0 d
156.9354 381.0345 m
158.1853 385.2845 157.1853 388.2845 153.9352 392.5345 c
S
0 O
0 g
1 w []0 d
153.4139 384.8403 m
154.3648 391.9727 l
161.4972 391.0219 l
158.8753 394.4504 l
151.7429 395.4012 l
150.792 388.2688 l
153.4139 384.8403 l
f
U
0 R
0 G
1 J 3 w
115.4139 365.8403 m
184.4139 365.8403 l
S
0.5 G
157.9139 371.3403 m
180.9139 398.2778 l
S
U
u
281 383 m
347 389 l
S
0 To
1 0 0 1 273.5792 404.1111 0 Tp
TP
0 Tr
0 O
0 g
0 J 1 w
(a) Tx 
(\r) TX 
TO
0 To
1 0 0 1 309.9126 371.7778 0 Tp
TP
0 Tr
(b) Tx 
(\r) TX 
TO
0 To
1 0 0 1 351.8501 394.8403 0 Tp
TP
0 Tr
(c) Tx 
(\r) TX 
TO
u
0 R
0 G
3 w [2 1 ]0 d
304.3286 387.0344 m
303.5 391.8838 304.0786 394.2844 307.3286 398.5344 c
S
0 O
0 g
1 w []0 d
307.8501 390.8403 m
306.8991 397.9727 l
299.7667 397.0218 l
302.3885 400.4503 l
309.5209 401.4013 l
310.4719 394.2689 l
307.8501 390.8403 l
f
U
0 R
0.5 G
1 J 3 w
283.7251 406.5278 m
302.8501 374.8403 l
S
0 G
283.8501 365.8403 m
352.8501 365.8403 l
S
0.5 G
326.3501 371.3403 m
349.3501 398.2778 l
S
U
U
0 To
1 0 0 1 80.2738 382.1162 0 Tp
TP
0 Tr
0 O
0 g
0 J 1 w
(\(v\)) Tx 
(\r) TX 
TO
U
LB
%AI5_EndLayer--
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI5 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EndDocument

 endTexFig
 523 4644 a Fr(Figure)g(3:)36 b(A)28 b(partial)f(list)g(of)h(ev)n(en)n
(ts.)36 b(The)27 b(certi\014cate)g(that)h(c)n(hanges)e(sign)h(is)g
(indicated)523 4744 y(for)f(eac)n(h)h(transition.)36
b(There)26 b(are)g(three)h(additional)f(cases)g(not)h(sho)n(wn:)36
b Fp(\(i\))27 b Fr(and)g Fp(\(iii\))h Fr(in)523 4843
y(mirror)e(image,)h(and)g(the)h(ev)n(en)n(t)f(corresp)r(onding)f(to)i
(the)g Fq(x)p Fr(-certi\014cate.)1914 5147 y(11)p eop
%%Page: 12 12
12 11 bop 523 614 a Fi(C)572 584 y Fg(0)631 614 y Fp(b)l(e)37
b(a)g(c)l(on\014gur)l(ation)f(for)h(which)h(al)t(l)f(the)g(c)l
(erti\014c)l(ates)f(of)i Fi(L)e Fp(hold.)60 b(Then)37
b(the)g(upp)l(er)523 714 y(envelop)l(e)c(of)g Fi(C)1005
684 y Fg(0)1060 714 y Fp(has)g(the)f(same)g(c)l(ombinatorial)j
(description)e(\(i.e.,)i(the)d(same)h(se)l(quenc)l(e)523
814 y(of)e(vertic)l(es)f(and)g(e)l(dges\))g(as)h(that)e(of)i
Fi(C)5 b Fp(.)523 1032 y Fh(Pro)s(of:)648 1167 y Fr(First,)24
b(the)h Fq(x)p Fr(-certi\014cates)e(pro)n(v)n(e)g(the)h(correctness)e
(of)j(the)f(con)n(tender)f(edge)h(p)r(oin)n(ters.)523
1266 y(An)n(y)33 b(v)n(ertex)f(that)i(has)e(a)h Fq(y)s
Fr(-certi\014cate)f(in)i Fi(L)f Fr(is)g(also)f(guaran)n(teed)g(to)h(b)r
(e)g(placed)g(in)g Fi(C)3364 1236 y Fg(0)523 1366 y Fr(as)f(in)h
Fi(C)5 b Fr(.)51 b(It)33 b(remains)f(to)h(sho)n(w)e(that)i(those)g(v)n
(ertices)e(without)i(a)f Fq(y)s Fr(-certi\014cate)g(cannot)523
1466 y(b)r(e)g(placed)f(di\013eren)n(tly)g(in)h Fi(C)k
Fr(and)31 b Fi(C)1695 1436 y Fg(0)1718 1466 y Fr(.)49
b(F)-7 b(or)31 b(this,)h(w)n(e)f(consider)g(a)g(maximal)g(con)n
(tiguous)523 1565 y(sequence)f Fq(S)35 b Fr(of)30 b(v)n(ertices)f
(without)h Fq(y)s Fr(-certi\014cates)f(in)h Fi(L)p Fr(,)i(and)d(w)n(e)h
(assume)g(without)g(loss)523 1665 y(of)f(generalit)n(y)f(that)i(the)g
(red)f(function)h(is)f(ab)r(o)n(v)n(e)f(the)i(blue)g(function)g(in)f
(this)h(stretc)n(h)f(in)523 1765 y Fi(C)5 b Fr(.)52 b(Let)33
b(\001\()p Fq(x)p Fr(\))h(b)r(e)f(the)g(di\013erence)g(b)r(et)n(w)n
(een)f(the)h(red)g(slop)r(e)f(and)h(the)g(blue)g(slop)r(e)f(at)h
Fq(x)p Fr(.)523 1864 y(This)27 b(function)g(can)f(only)h(increase)e(at)
i(red)f(v)n(ertices)g(and)h(decrease)e(at)h(blue)i(v)n(ertices.)35
b(It)523 1964 y(cannot)29 b(c)n(hange)f(sign)h(at)h(a)f(red)g(v)n
(ertex)f(of)i Fq(S)5 b Fr(,)29 b(as)g(there)g(w)n(ould)g(b)r(e)h(a)f
Fj(yt)o Fr([)p Fi(\001)14 b(\001)g(\001)p Fr(])30 b(certi\014cate)523
2063 y(in)25 b(this)h(case.)35 b(Hence,)26 b(on)f(the)g(in)n(terv)-5
b(al)25 b(de\014ned)g(b)n(y)g Fq(S)5 b Fr(,)26 b(\001\()p
Fq(x)p Fr(\))g(increases)e(up)h(to)g(a)g(certain)523
2163 y(blue)j(v)n(ertex,)f(then)h(decreases.)36 b(If)29
b(the)f(con)n(tender)f(edge)g(of)h(this)g(v)n(ertex)f(is)h
Fq(a)p Fr(,)g(there)f(will)523 2263 y(b)r(e)g Fj(sl)o
Fr([)p Fi(\001)14 b(\001)g(\001)p Fr(])27 b(certi\014cates)f(to)g(the)h
(left)g(of)g(the)g(left)g(endp)r(oin)n(t)g(of)f Fq(a)h
Fr(and)f Fj(sr)p Fr([)p Fi(\001)14 b(\001)g(\001)o Fr(])27
b(certi\014cates)523 2362 y(to)e(the)g(righ)n(t)f(of)g(the)h(righ)n(t)f
(endp)r(oin)n(t)h(of)g Fq(a)p Fr(.)36 b(These)24 b(certi\014cates)g
(guaran)n(tee)f(that)i(the)g(red)523 2462 y(function)j(remains)f(ab)r
(o)n(v)n(e)f(the)i(blue)g(function)g(on)f(the)h(in)n(terv)-5
b(al)28 b(de\014ned)f(b)n(y)h Fq(S)5 b Fr(.)245 b Ff(2)648
2622 y Fr(Our)26 b(certi\014cate)g(list)i(certi\014es)e(the)i
(correctness)d(of)i(the)g(upp)r(er)h(en)n(v)n(elop)r(e.)36
b(As)27 b(in)g(the)523 2721 y(case)32 b(of)i(an)n(y)e(kinetic)i(data)f
(structure,)h(all)f(these)g(certi\014cates)g(are)f(placed)h(in)h(a)f
(global)523 2821 y(ev)n(en)n(t)27 b(queue,)g(where)f(eac)n(h)g
(certi\014cate)h(is)g(stamp)r(ed)g(with)g(its)h(failure)e(time.)37
b(When)28 b(it)f(is)523 2921 y(time)32 b(to)f(pro)r(cess)g(the)h
(\014rst)f(ev)n(en)n(t)g(in)h(the)f(queue,)i(w)n(e)e(need)h(to)f(up)r
(date)h(the)g(certi\014cate)523 3020 y(list.)60 b(Belo)n(w)34
b(is)h(the)g(list)h(of)f(c)n(hanges)e(that)j(need)f(to)g(b)r(e)h(p)r
(erformed)e(for)h(eac)n(h)f(t)n(yp)r(e)h(of)523 3120
y(ev)n(en)n(t.)h(A)28 b(pictorial)f(description)g(is)h(sho)n(wn)e(in)i
(Figure)f(3.)523 3333 y Fh(Ev)m(en)m(t:)37 b Fr(failure)27
b(of)h Fq(y)s(l)r(i)p Fr([)p Fq(ab)p Fr(])677 3432 y
Fh(Delete)j Fj(yri)o Fr([)p Fq(ab:)p Fj(next)n Fr(])p
Fq(;)14 b Fj(yli)o Fr([)p Fq(ab)p Fr(];)677 3532 y Fh(if)32
b Fi(9)p Fj(yri)o Fr([)p Fq(ab)p Fr(])765 3632 y Fh(then)g(b)s(egin)855
3731 y(Delete)f Fj(yli)o Fr([)p Fq(ab:)p Fj(prev)n Fr(])p
Fq(;)14 b Fj(yri)n Fr([)p Fq(ab)p Fr(])855 3831 y Fh(Create)32
b Fj(slt)o Fr([)p Fq(ab)p Fr(])p Fq(;)14 b Fj(srt)n Fr([)p
Fq(ab)p Fr(])p Fq(;)g Fj(yt)o Fr([)p Fq(ab)p Fr(])855
3930 y(Remo)n(v)n(e)26 b Fj(ce)p Fr(\()p Fq(ab)p Fr(\))h(from)h(output)
765 4030 y Fh(end)p Fr(;)765 4130 y Fh(else)e(b)s(egin)855
4229 y(Create)32 b Fj(yri)o Fr([)p Fq(ab)p Fr(])p Fq(;)14
b Fj(yli)n Fr([)p Fq(ab:)p Fj(prev)n Fr(])855 4329 y(Add)28
b Fq(a)g Fr(or)e(remo)n(v)n(e)g Fq(b)i Fr(in)f(output)765
4429 y Fh(end)p Fr(;)1914 5147 y(12)p eop
%%Page: 13 13
13 12 bop 523 720 a Fh(Ev)m(en)m(t:)37 b Fr(failure)27
b(of)h Fq(y)s(t)p Fr([)p Fq(ab)p Fr(])677 819 y Fh(Delete)j
Fj(yt)o Fr([)p Fq(ab)p Fr(])p Fq(;)14 b Fj(slt)o Fr([)p
Fq(ab)p Fr(])p Fq(;)g Fj(srt)n Fr([)p Fq(ab)p Fr(];)677
919 y Fh(Create)32 b Fj(yli)o Fr([)p Fq(ab)p Fr(])p Fq(;)14
b Fj(yri)n Fr([)p Fq(ab:)p Fj(next)n Fr(];)677 1018 y
Fh(Create)32 b Fj(yri)o Fr([)p Fq(ab)p Fr(])p Fq(;)14
b Fj(yli)n Fr([)p Fq(ab:)p Fj(prev)n Fr(];)677 1118 y(Add)28
b Fj(ce)p Fr(\()p Fq(ab)p Fr(\))f(to)h(output)523 1549
y Fh(Ev)m(en)m(t:)37 b Fr(failure)27 b(of)h Fj(slt)o
Fr([)p Fq(ab)p Fr(])677 1648 y Fh(Delete)j Fj(slt)o Fr([)p
Fq(ab)p Fr(])p Fq(;)14 b Fj(srt)n Fr([)p Fq(ab)p Fr(])p
Fq(;)g Fj(yt)o Fr([)p Fq(ab)p Fr(];)677 1748 y Fq(cd)23
b Fi( )h Fq(ab:)p Fj(prev)m Fr(;)677 1848 y Fh(if)k Fq(d)23
b Fr(=)g Fq(a)k Fr(/*)g(i.e.,)h(same)f(color)f(*/)761
1947 y Fh(then)h(Create)32 b Fj(slt)o Fr([)p Fq(cd)p
Fr(])p Fq(;)14 b Fj(srt)o Fr([)p Fq(cd)p Fr(])p Fq(;)g
Fj(yt)o Fr([)p Fq(cd)p Fr(];)761 2047 y Fh(else)26 b(Create)32
b Fj(sl)o Fr([)p Fq(cd)p Fr(];)523 2265 y Fh(Ev)m(en)m(t:)37
b Fr(failure)27 b(of)h Fj(sl)o Fr([)p Fq(ab)p Fr(])677
2364 y Fh(Delete)j Fj(sl)o Fr([)p Fq(ab)p Fr(];)677 2464
y Fq(cd)23 b Fi( )h Fq(ab:)p Fj(next)m Fr(;)677 2564
y Fh(if)k Fq(\037)p Fr(\()p Fq(cd)p Fr(\))23 b Fi(6)p
Fr(=)g Fq(\037)p Fr(\()p Fq(ab)p Fr(\))761 2663 y Fh(then)k(Create)32
b Fj(slt)o Fr([)p Fq(cd)p Fr(])p Fq(;)14 b Fj(srt)o Fr([)p
Fq(cd)p Fr(])p Fq(;)g Fj(yt)o Fr([)p Fq(cd)p Fr(];)761
2763 y Fh(else)26 b(Create)32 b Fj(sr)o Fr([)p Fq(cd)p
Fr(];)523 2981 y Fh(Ev)m(en)m(t:)37 b Fr(failure)27 b(of)h
Fj(x)p Fr([)p Fq(ab)p Fr(])677 3081 y Fh(Delete)j Fj(x)p
Fr([ab];)677 3180 y Fq(cd)23 b Fi( )h Fq(ab:)p Fj(next)m
Fr(;)677 3280 y Fj(ce)o Fr(\()p Fq(ab)p Fr(\))g Fi( )f
Fq(d)p Fr(;)677 3380 y Fj(ce)o Fr(\()p Fq(cd)p Fr(\))h
Fi( )f Fq(a)p Fr(;)677 3479 y(/*)k Fq(cd:)p Fj(prev)f
Fr(and)i Fq(ab:)p Fj(next)d Fr(no)n(w)i(ha)n(v)n(e)g(new)g(v)-5
b(alues)27 b(*/)677 3579 y Fh(if)h Fq(\037)p Fr(\()p
Fq(cd:)p Fj(prev)n Fr(\))c(=)e Fq(\037)p Fr(\()p Fq(cd)p
Fr(\))761 3678 y Fh(then)27 b(Delete)k Fj(x)p Fr([)p
Fq(cd:)p Fj(prev)n Fr(];)761 3778 y Fh(else)26 b(Create)32
b Fj(x)p Fr([)p Fq(cd:)p Fj(prev)n Fr(];)677 3878 y Fh(if)c
Fq(\037)p Fr(\()p Fq(ab:)p Fj(next)n Fr(\))23 b(=)g Fq(\037)p
Fr(\()p Fq(ab)p Fr(\))761 3977 y Fh(then)k(Delete)k Fj(x)p
Fr([)p Fq(cd)p Fr(];)761 4077 y Fh(else)26 b(Create)32
b Fj(x)p Fr([)p Fq(ab)p Fr(];)677 4177 y(/*)27 b(No)n(w)g(up)r(date)h
(in)n(tersection)f(certi\014cates)g(*/)677 4276 y Fh(if)h
Fi(9)p Fj(yri)o Fr([)p Fq(ab)p Fr(])761 4376 y Fh(then)f(Delete)k
Fj(yri)o Fr([)p Fq(ab)p Fr(];)c Fh(Create)33 b Fj(yri)n
Fr([)p Fq(cd)p Fr(];)677 4475 y Fh(if)28 b Fi(9)p Fj(yli)o
Fr([)p Fq(cd)p Fr(])761 4575 y Fh(then)f(Delete)k Fj(yli)o
Fr([)p Fq(cd)p Fr(];)d Fh(Create)k Fj(yli)o Fr([)p Fq(ab)p
Fr(];)677 4675 y(/*)27 b(Up)r(date)h(slop)r(e)f(certi\014cates)g(if)h
Fq(ab)g Fr(is)f(b)r(elo)n(w)g Fq(cd)h Fr(*/)677 4774
y Fh(if)g Fi(9)p Fj(sl)o Fr([)p Fq(ab)p Fr(])f Fh(then)h(Up)s(date)k
Fj(sl)o Fr([)p Fq(ab)p Fr(])c(to)f(p)r(oin)n(t)h(to)f(new)h
Fj(ce)o Fr(\()p Fq(ab)p Fr(\);)677 4874 y Fh(elseif)e
Fi(9)p Fj(yt)p Fr([)p Fq(cd)p Fr(])1914 5147 y(13)p eop
%%Page: 14 14
14 13 bop 785 614 a Fh(then)28 b(Delete)j Fj(slt)o Fr([)p
Fq(cd)p Fr(])p Fq(;)14 b Fj(srt)n Fr([)p Fq(cd)p Fr(])p
Fq(;)g Fj(yt)p Fr([)p Fq(cd)p Fr(];)28 b Fh(Create)k
Fj(sl)o Fr([)p Fq(ab)p Fr(];)677 714 y Fh(elseif)26 b
Fi(9)p Fj(sr)p Fr([)p Fq(ab)p Fr(])h Fh(then)h(if)f Fq(a)c(<)1629
726 y Fl(s)1687 714 y Fq(d)1497 814 y Fh(then)28 b(Delete)j
Fj(sr)o Fr([)p Fq(ab)p Fr(];)c Fh(Create)32 b Fj(slt)o
Fr([)p Fq(cd)p Fr(])p Fq(;)14 b Fj(srt)o Fr([)p Fq(cd)p
Fr(])p Fq(;)g Fj(yt)o Fr([)p Fq(cd)p Fr(];)1497 913 y
Fh(else)26 b(Up)s(date)33 b Fj(sr)o Fr([)p Fq(ab)p Fr(])27
b(to)h(p)r(oin)n(t)f(to)h(new)f Fj(ce)p Fr(\()p Fq(ab)p
Fr(\);)677 1013 y(/*)g(Symmetric)h(treatmen)n(t)f(if)h
Fq(cd)g Fr(is)f(b)r(elo)n(w)h Fq(ab)f Fr(\(not)h(sho)n(wn\))f(*/)648
1217 y(As)34 b(an)g(example,)i(consider)e(the)h(ev)n(en)n(t)f
Fj(yt)o Fr([)p Fq(ab)p Fr(],)i(whic)n(h)e(corresp)r(onds)f(to)h(case)g
(\(iv\),)523 1317 y(righ)n(t)d(to)h(left,)i(of)d(Figure)h(3:)45
b(a)31 b(red)g(edge)h(mo)n(v)n(es)e(ab)r(o)n(v)n(e)h(a)g(blue)h(v)n
(ertex.)49 b(In)32 b(this)g(case,)523 1416 y(w)n(e)e(remo)n(v)n(e)g
(the)h(three)f(certi\014cates)g(pro)n(ving)g(that)h(the)g(red)f(edge)h
(w)n(as)e(b)r(elo)n(w)i(the)g(blue)523 1516 y(c)n(hain)e(\(b)r(ottom)g
(case)g(of)g(Figure)f(2\),)i(and)f(add)g(certi\014cates)f(to)h(brac)n
(k)n(et)f(the)h(t)n(w)n(o)f(newly)523 1616 y(formed)i(in)n
(tersections.)44 b(Finally)-7 b(,)31 b(the)g(new)f(edge)g(on)g(the)g
(upp)r(er)h(en)n(v)n(elop)r(e)e(is)h(added)h(to)523 1715
y(the)d(output.)648 1850 y(Ev)n(en)n(ts)e(corresp)r(onding)h(to)g
(certi\014cates)h Fj(yri)n Fr([)p Fq(ab)p Fr(],)g Fj(sr)p
Fr([)p Fq(ab)p Fr(],)g(and)f Fj(srt)o Fr([)p Fq(ab)p
Fr(])h(are)f(exactly)523 1950 y(symmetric)g(to)h Fj(yli)o
Fr([)p Fq(ab)p Fr(])p Fq(;)14 b Fj(sl)n Fr([)p Fq(ab)p
Fr(],)28 b(and)f Fj(slt)o Fr([)p Fq(ab)p Fr(].)523 2154
y Fh(Lemma)j(2.2)40 b Fp(The)31 b(pr)l(e)l(c)l(e)l(ding)g(pr)l(o)l(c)l
(e)l(dur)l(es)f(c)l(orr)l(e)l(ctly)h(up)l(date)f(the)g(c)l(erti\014c)l
(ate)h(list)f(when)523 2254 y(the)g(c)l(orr)l(esp)l(onding)h(events)e
(happ)l(en.)523 2458 y Fh(Pro)s(of:)68 b Fr(By)27 b(examination)g(of)h
(eac)n(h)f(case,)f(omitted)i(in)g(this)g(pap)r(er.)595
b Ff(2)648 2615 y Fr(In)22 b(general,)f(when)h(a)g Fq(y)s
Fr(-certi\014cate)f(c)n(hanges)f(sign,)j(this)f(mo)r(di\014es)g(the)g
(output:)35 b(either)523 2715 y(t)n(w)n(o)f(neigh)n(b)r(or)f(v)n
(ertices)g(merge)h(in)n(to)g(one,)i(or)d(the)i(rev)n(erse.)55
b(Hence,)36 b(for)e(the)h(purp)r(ose)523 2815 y(of)j(the)g(recursiv)n
(e)d(construction,)40 b(it)e(is)f(necessary)f(to)h(b)r(e)h(able)g(to)f
(handle)h(suc)n(h)f(lo)r(cal)523 2914 y(structural)c(c)n(hanges)g(in)i
(the)f(input,)j(and)d(it)g(can)g(b)r(e)h(c)n(hec)n(k)n(ed)e(that)h
(this)h(also)e(c)n(hanges)523 3014 y Fq(O)r Fr(\(1\))28
b(certi\014cates.)523 3279 y Fk(2.2)112 b(Divide)36 b(and)j(conquer)f
(upp)s(er)g(en)m(v)m(elop)s(e)523 3468 y Fr(T)-7 b(o)34
b(kinetize)h(the)g(divide)g(and)f(conquer)g(algorithm,)h(w)n(e)g(k)n
(eep)f(a)g(record)f(of)i(the)g(en)n(tire)523 3568 y(computation)k(in)g
(a)g(balanced)g(binary)f(tree.)71 b(A)40 b(no)r(de)f(in)g(this)h(tree)f
(is)g(in)g(c)n(harge)e(of)523 3667 y(main)n(taining)24
b(the)i(upp)r(er)f(en)n(v)n(elop)r(e)g(of)g(the)g(t)n(w)n(o)f(upp)r(er)
i(sub)r(en)n(v)n(elop)r(es)e(computed)h(b)n(y)g(its)523
3767 y(c)n(hildren.)36 b(If)26 b(an)f(ev)n(en)n(t)g(triggers)e(a)i(c)n
(hange)g(in)g(the)h(output)g(of)f(a)g(no)r(de,)h(this)g(no)r(de)g
(passes)523 3867 y(on)j(the)g(ev)n(en)n(t)g(to)g(its)g(paren)n(t,)g(as)
g(a)f(lo)r(cal)h(structural)f(c)n(hange)g(in)h(the)h(input,)g(and)f(so)
g(on)523 3966 y(to)f(upp)r(er)f(lev)n(els)g(of)h(the)g(computation)f
(tree)g(while)h(this)g(c)n(hange)e(remains)h(visible.)648
4101 y(As)f(in)h(the)g(case)f(of)h(the)g(one-dimensional)e(kinetic)i
(tournamen)n(t)f(data)h(structure)f(for)523 4201 y(kno)n(wn)21
b(motions,)i(w)n(e)f(analyze)f(e\016ciency)h(b)n(y)g(considering)e
(time)j(as)e(an)h(additional)g(static)523 4301 y(dimension)i(and)f(c)n
(harging)f(eac)n(h)h(ev)n(en)n(t)h(to)f(a)h(feature)f(of)h(a)f
(three-dimensional)g(structure)523 4400 y(with)36 b(kno)n(wn)g(w)n
(orst-case)d(complexit)n(y)-7 b(.)61 b(The)36 b(primal)g(v)n(ersion)e
(of)i(the)g(problem)g(is)f(ill-)523 4500 y(suited)27
b(for)g(suc)n(h)g(an)f(analysis,)g(as)h(the)g(static)g(structure)g
(describ)r(ed)f(b)n(y)h(the)h(con)n(v)n(ex)d(h)n(ull)523
4599 y(o)n(v)n(er)f(time)h(is)h(not)f(the)h(con)n(v)n(ex)e(h)n(ull)h
(of)g(the)h(tra)5 b(jectories)24 b(of)h(the)h(underlying)f(p)r(oin)n
(ts.)36 b(On)523 4699 y(the)26 b(other)f(hand,)i(in)f(the)g(dual,)g
(the)g(structure)f(describ)r(ed)h(b)n(y)f(the)h(upp)r(er)g(en)n(v)n
(elop)r(e)f(o)n(v)n(er)523 4799 y(time)30 b(is)g(exactly)f(the)i(upp)r
(er)f(en)n(v)n(elop)r(e)f(of)g(the)i(surfaces)d(describ)r(ed)i(b)n(y)g
(the)g(underlying)523 4898 y(lines.)37 b(W)-7 b(e)28
b(can)f(th)n(us)g(use)h(results)f(pro)n(ving)e(near-quadratic)h
(complexit)n(y)g(for)h(the)h(upp)r(er)1914 5147 y(14)p
eop
%%Page: 15 15
15 14 bop 523 614 a Fr(en)n(v)n(elop)r(e)35 b(of)h(algebraic)f
(surfaces)g([33)o(].)62 b(W)-7 b(e)37 b(also)e(mak)n(e)g(use)h(of)g
(the)h(recen)n(t)f(result)f(of)523 714 y(Agarw)n(al,)f(Sc)n(h)n(w)n
(arzk)n(opf,)g(and)g(Sharir)f([4])h(ab)r(out)g(the)h(near-quadratic)d
(complexit)n(y)h(of)523 814 y(the)h(o)n(v)n(erla)n(y)d(of)j(the)g(pro)5
b(jections)32 b(of)i(t)n(w)n(o)e(upp)r(er-en)n(v)n(elop)r(es)h(to)g
(obtain)h(sharp)e(b)r(ounds)523 913 y(on)27 b(the)h(n)n(um)n(b)r(er)g
(of)f(ev)n(en)n(ts)g(due)h(to)f Fq(x)p Fr(-certi\014cates.)648
1048 y(The)38 b(results)g(men)n(tioned)g(ab)r(o)n(v)n(e)f(are)g(curren)
n(tly)h(pro)n(v)n(en)e(only)i(in)h(the)g(con)n(text)e(of)523
1148 y Fp(algebr)l(aic)29 b Fr(surfaces)d(of)h(b)r(ounded)g(degree,)f
(since)h(a)f(general)g(theory)g(of)h(t)n(w)n(o-dimensional)523
1248 y(Da)n(v)n(enp)r(ort-Sc)n(hinzel)e(sequences)g(is)h(still)h(lac)n
(king.)35 b(Hence,)27 b(in)f(this)h(section,)f(w)n(e)g(assume)523
1347 y(that)36 b(the)g(p)r(osition)f(of)h(a)f(p)r(oin)n(t)g(is)h(giv)n
(en,)h(as)d(a)i(function)g(of)f(time,)j(b)n(y)d(t)n(w)n(o)g(algebraic)
523 1447 y(functions)28 b(of)g(b)r(ounded)g(degree.)523
1665 y Fh(Theorem)i(2.3)41 b Fp(The)23 b(KDS)e(for)i(maintaining)h(the)
e(c)l(onvex)g(hul)t(l)h(is)f(e\016cient,)j(r)l(esp)l(onsive.)523
1765 y(c)l(omp)l(act,)31 b(and)f(lo)l(c)l(al.)523 1983
y Fh(Pro)s(of:)88 b Fr(The)34 b(KDS)g(is)f(clearly)g(resp)r(onsiv)n(e,)
h(lo)r(cal,)h(and)e(compact.)55 b(W)-7 b(e)34 b(turn)g(to)g(the)523
2082 y(pro)r(of)27 b(of)h(e\016ciency)-7 b(.)648 2217
y(W)g(e)28 b(\014rst)g(fo)r(cus)h(on)f(the)g(ev)n(en)n(ts)g(attac)n
(hed)g(to)g(a)g(sp)r(eci\014c)g(no)r(de)h(of)f(the)h(computation)523
2317 y(tree)36 b(that)h(in)n(v)n(olv)n(es)e(a)i(total)f(of)h
Fq(n)f Fr(red)h(and)f(blue)h(lines.)64 b(Consider)36
b(time)h(as)f(a)h(static)523 2417 y(third)k(dimension:)64
b(a)41 b(line)h(whose)e(parameters)g(are)g(p)r(olynomial)g(functions)i
(of)f(time)523 2516 y(describ)r(es)36 b(an)h(algebraic)e(surface)g(in)i
(three)g(dimensions.)64 b(The)37 b(blue)g(\(red\))g(family)f(of)523
2616 y(lines)i(is)f(no)n(w)g(a)h(family)g(of)f(biv)-5
b(ariate)37 b(algebraic)f(functions.)68 b(Lo)r(oking)36
b(at)i(the)g(upp)r(er)523 2715 y(en)n(v)n(elop)r(es)g(of)g(the)i(blue)f
(and)f(red)h(families,)i(and)e(at)g(their)f(join)n(t)h(upp)r(er)g(en)n
(v)n(elop)r(e)f(in)523 2815 y(turn,)g(w)n(e)d(observ)n(e)f(that)i(a)f
(purple)h(v)n(ertex)e(on)h(this)h(upp)r(er)g(en)n(v)n(elop)r(e)f
(corresp)r(onds)e(to)523 2915 y(a)i(c)n(hange)g(of)g(sign)g(of)h(a)f
Fq(y)s Fr(-certi\014cate)f(\(a)i(\\)p Fq(y)s Fr(-ev)n(en)n(t"\))e(in)i
(the)g(kinetic)f(in)n(terpretation.)523 3014 y(A)h(mono)r(c)n(hromatic)
f(v)n(ertex)f(corresp)r(onds)g(to)i(the)h(app)r(earance/disapp)r
(earance)32 b(of)k(an)523 3114 y(edge)f(triggered)e(b)n(y)i(some)f
(descendan)n(t)g(in)i(the)f(computation)g(tree.)58 b(As)35
b(our)f(surfaces)523 3214 y(are)29 b(algebraic)e(of)j(b)r(ounded)g
(degree,)f(their)h(upp)r(er)g(en)n(v)n(elop)r(e)e(has)h(complexit)n(y)g
Fq(O)r Fr(\()p Fq(n)3238 3183 y Fo(2+)p Fl(\017)3355
3214 y Fr(\))523 3313 y(for)g(an)n(y)f Fq(\017)e(>)g
Fr(0)j([33)o(],)h(and)f(therefore)f(the)i(n)n(um)n(b)r(er)f(of)g(ev)n
(en)n(ts)g(due)g(to)h Fq(y)s Fr(-certi\014cate)e(sign)523
3413 y(c)n(hanges)e(is)i(b)r(ounded)g(b)n(y)f(this)h(quan)n(tit)n(y)
1835 3383 y Fo(3)1872 3413 y Fr(.)648 3548 y(Consider)23
b(no)n(w)g(the)h(ev)n(en)n(ts)f(corresp)r(onding)f(to)i(the)g
Fq(x)h Fr(reordering)d(of)h(t)n(w)n(o)h(v)n(ertices)e(of)523
3647 y(di\013eren)n(t)e(colors)f(\(called)h(\\)p Fq(x)p
Fr(-ev)n(en)n(ts"\).)33 b(In)20 b(the)h(3-dimensional)d(setting,)k(a)e
(blue)g(en)n(v)n(elop)r(e)523 3747 y(v)n(ertex)28 b(b)r(ecomes)h(an)g
(edge)g(of)g(the)g(blue)h(surface)e(upp)r(er)h(en)n(v)n(elop)r(e.)41
b(Hence,)30 b(an)f Fq(x)p Fr(-ev)n(en)n(t)523 3847 y(corresp)r(onds)37
b(to)h(a)g(p)r(oin)n(t)h(\()p Fq(x;)14 b(t)p Fr(\))40
b(ab)r(o)n(v)n(e)d(whic)n(h)h(there)h(is)f(an)g(edge)g(in)h(b)r(oth)g
(the)g(blue)523 3946 y(and)28 b(the)g(red)g(upp)r(er)g(en)n(v)n(elop)r
(es.)36 b(In)28 b(other)g(w)n(ords,)e(eac)n(h)h Fq(x)p
Fr(-ev)n(en)n(t)h(is)g(asso)r(ciated)e(with)j(a)523 4046
y(bic)n(hromatic)g(v)n(ertex)h(in)h(the)g(o)n(v)n(erla)n(y)c(of)k(the)g
(pro)5 b(jections)29 b(of)h(the)h(red)f(and)g(blue)h(upp)r(er)523
4146 y(en)n(v)n(elop)r(es)c(on)g(the)h Fq(xt)p Fr(-plane)g(\()p
Fq(y)f Fr(=)c(0\).)37 b(If)28 b(there)g(are)f Fq(n)h
Fr(biv)-5 b(ariate)27 b(algebraic)f(surfaces)g(of)523
4245 y(b)r(ounded)j(degree)f(in)g(total,)h(the)g(complexit)n(y)f(of)h
(this)g(o)n(v)n(erla)n(y)c(is)k(also)e Fq(O)r Fr(\()p
Fq(n)2952 4215 y Fo(2+)p Fl(\017)3069 4245 y Fr(\))i(for)f(an)n(y)523
4345 y Fq(\017)23 b(>)f Fr(0)28 b([4)o(].)37 b(Hence,)28
b(there)f(are)g(at)h(most)f(that)h(man)n(y)f Fq(x)p Fr(-ev)n(en)n(ts.)
648 4480 y(Finally)-7 b(,)33 b(eac)n(h)e(pair)g(of)h(lines)f(b)r
(ecomes)h(parallel)f(a)g(constan)n(t)g(n)n(um)n(b)r(er)h(of)g(times,)h
(so)523 4580 y(there)26 b(are)f Fq(O)r Fr(\()p Fq(n)1018
4549 y Fo(2)1056 4580 y Fr(\))i(slop)r(e)f(ev)n(en)n(ts)g(attac)n(hed)f
(to)h(the)h(no)r(de)f(w)n(e)g(ha)n(v)n(e)f(b)r(een)i(fo)r(cusing)f(on)g
(up)523 4679 y(to)i(no)n(w.)p 523 4732 1146 4 v 615 4786
a Fn(3)650 4809 y Fm(The)23 b(b)r(est)h(kno)n(wn)f(b)r(ound)h(for)e
(this)h(sp)r(eci\014c)h(problem)d(is)i(tigh)n(ter)g([2],)f(but)i(this)f
(b)r(ound)g(is)f(su\016cien)n(t)523 4888 y(for)h(our)g(purp)r(oses.)
1914 5147 y Fr(15)p eop
%%Page: 16 16
16 15 bop 648 614 a Fr(Getting)21 b(bac)n(k)e(to)i(the)g(full)g
(computation)g(tree,)h(w)n(e)e(conclude)g(that)h(the)g(total)g(n)n(um)n
(b)r(er)523 714 y(of)h(ev)n(en)n(ts)f Fq(C)6 b Fr(\()p
Fq(n)p Fr(\))23 b(satis\014es)e(the)i(recurrence)d Fq(C)6
b Fr(\()p Fq(n)p Fr(\))24 b(=)f(2)p Fq(C)6 b Fr(\()p
Fq(n=)p Fr(2\))h(+)g Fq(O)r Fr(\()p Fq(n)2716 684 y Fo(2+)p
Fl(\017)2832 714 y Fr(\),)23 b(and)f(therefore)523 814
y Fq(C)6 b Fr(\()p Fq(n)p Fr(\))24 b(=)e Fq(O)r Fr(\()p
Fq(n)960 783 y Fo(2+)p Fl(\017)1077 814 y Fr(\).)35 b(In)19
b(the)h(w)n(orst)e(case,)i(the)g(con)n(v)n(ex)e(h)n(ull)h(of)h
Fq(n)f Fr(p)r(oin)n(ts)g(in)h(linear)f(or)f(higher)523
913 y(order)26 b(motion)i(c)n(hanges)e(\012\()p Fq(n)1471
883 y Fo(2)1508 913 y Fr(\))i(times)g([2].)37 b(Hence)27
b(our)g(KDS)h(is)f(e\016cien)n(t.)406 b Ff(2)523 1248
y Fs(3)135 b(Closest)46 b(pair)f(in)g(2-D)523 1465 y
Fr(Not)35 b(all)g(static)g(algorithms)e(lend)i(themselv)n(es)g(to)g(an)
f(e\016cien)n(t)h(kinetization.)59 b(F)-7 b(or)34 b(in-)523
1565 y(stance,)g(consider)e(the)i(follo)n(wing)e(classic)g(algorithm)g
(of)h(Shamos)f([31)o(])h(for)g(\014nding)g(the)523 1665
y(closest)e(pair)g(within)i(a)e(set)h(of)f(p)r(oin)n(ts)h(in)g(the)g
(plane:)45 b(divide)32 b(the)g(p)r(oin)n(ts)g(in)n(to)g(the)g(left)523
1764 y(half)27 b(and)g(the)g(righ)n(t)f(half)h(and)f(recursiv)n(ely)f
(compute)i(the)h(closest)e(distances)g Fq(\016)3059 1776
y Fl(L)3135 1764 y Fr(and)h Fq(\016)3333 1776 y Fl(R)523
1864 y Fr(within)h(eac)n(h)e(half.)37 b(Then)27 b(c)n(hec)n(k)g(all)f
(pairs)h(that)g(are)f(within)i(distance)f Fq(\016)f Fr(=)c(min)q(\()p
Fq(\016)3177 1876 y Fl(L)3227 1864 y Fq(;)14 b(\016)3301
1876 y Fl(R)3355 1864 y Fr(\))523 1964 y(of)30 b(a)g(v)n(ertical)f
(median)i(line)f Fq(y)g Fr(=)d Fq(y)1647 1976 y Fo(0)1684
1964 y Fr(.)45 b(A)31 b(kinetic)g(v)n(ersion)d(of)j(this)f(algorithm)f
(w)n(ould)h(re-)523 2063 y(quire,)23 b(for)e(eac)n(h)h(p)r(oin)n(t)g
Fq(p)g Fr(on)f(the)i(left)g(side,)g(a)e(certi\014cate)h(of)g(the)g
(form)g Fq(x)2807 2075 y Fl(p)2869 2063 y Fq(<)g(y)2997
2075 y Fo(0)3042 2063 y Fi(\000)7 b Fq(\016)25 b Fr(or)c(the)523
2163 y(con)n(v)n(erse.)40 b(The)29 b(resulting)g(KDS)h(w)n(ould)e(not)i
(ev)n(en)f(b)r(e)g(resp)r(onsiv)n(e:)39 b(when)30 b(the)f(iden)n(tit)n
(y)523 2262 y(of)f(the)g(pair)g(that)g(realizes)f Fq(\016)k
Fr(c)n(hanges,)26 b(all)i(certi\014cates)f(of)h(the)h(form)e(ab)r(o)n
(v)n(e)g(need)h(to)g(b)r(e)523 2362 y(up)r(dated,)35
b(and)f(there)f(migh)n(t)g(b)r(e)h(a)f(linear)f(n)n(um)n(b)r(er)i(of)f
(them.)55 b(Surprisingly)-7 b(,)33 b(w)n(e)g(w)n(ere)523
2462 y(not)28 b(able)f(to)g(\014nd)h(a)g(go)r(o)r(d)f(kinetization)g
(of)g(an)n(y)g(kno)n(wn)g(closest)g(pair)g(algorithm.)648
2597 y(In)f(this)g(section,)g(w)n(e)f(describ)r(e)h(a)f(new)h(static)g
(algorithm)e(for)h(the)i(closest)e(pair)g(based)523 2696
y(on)c(the)h(plane)f(sw)n(eep)g(paradigm.)33 b(W)-7 b(e)22
b(then)g(add)f(data)g(structures)f(to)i(record)d(the)j(history)523
2796 y(of)k(the)g(algorithm,)e(and)i(sho)n(w)e(that)i(these)g(data)f
(structures)g(can)g(b)r(e)h(main)n(tained)f(as)g(the)523
2896 y(p)r(oin)n(ts)h(mo)n(v)n(e.)35 b(The)26 b(data)f(structures)g
(alw)n(a)n(ys)f(re\015ect)i(the)g(history)f(that)h(w)n(ould)f(result)h
(if)523 2995 y(the)k(plane)g(sw)n(eep)f(algorithm)g(w)n(ere)g(applied)h
(to)g(the)g(curren)n(t)f(con\014guration)g(of)g(p)r(oin)n(ts.)523
3095 y(This)f(resulting)f(kinetic)g(data)h(structure)f(has)g(the)h
(qualities)f(describ)r(ed)g(in)h(Section)g(1.)523 3363
y Fk(3.1)112 b(The)38 b(static)e(plane)i(sw)m(eep)g(algorithm)523
3551 y Fr(The)i(static)h(closest-pair)d(algorithm)i(is)g(based)g(on)g
(the)h(idea)f(of)g(dividing)g(the)h(space)523 3651 y(around)f(eac)n(h)g
(p)r(oin)n(t)h(in)n(to)f(six)g(60)1653 3621 y Fg(\016)1731
3651 y Fr(w)n(edges.)76 b(It)41 b(is)f(a)h(trivial)f(observ)-5
b(ation)39 b(that)i(the)523 3751 y(nearest)27 b(neigh)n(b)r(or)h(of)g
(eac)n(h)f(p)r(oin)n(t)i(is)f(the)h(closest)e(of)h(the)h(nearest)e
(neigh)n(b)r(ors)g(in)i(the)g(six)523 3850 y(w)n(edges.)55
b(W)-7 b(e)34 b(sho)n(w)f(that)h(an)f(appro)n(ximate)f(de\014nition)j
(of)e(nearest)g(neigh)n(b)r(or)g(in)h(eac)n(h)523 3950
y(w)n(edge)21 b(\(using)g(the)h Fq(L)1201 3962 y Fg(1)1292
3950 y Fr(norm\))f(is)h(still)g(su\016cien)n(t)f(to)g(\014nd)h(the)g
(closest)f(pair.)34 b(The)21 b(relaxed)523 4050 y(de\014nition)32
b(lets)f(us)g(compute)h(neigh)n(b)r(ors)e(e\016cien)n(tly)-7
b(,)32 b(and)f(aids)g(in)h(the)f(kinetization)g(of)523
4149 y(the)d(algorithm.)648 4284 y(W)-7 b(e)24 b(de\014ne)h(the)g
Fp(dominanc)l(e)j(we)l(dge)j Fr(of)25 b(a)e(p)r(oin)n(t)i
Fq(p)p Fr(,)g(call)f(it)h Fp(Dom)6 b Fr(\()p Fq(p)p Fr(\),)26
b(to)e(b)r(e)h(the)f(righ)n(t-)523 4384 y(extending)c(w)n(edge)f(b)r
(ounded)i(b)n(y)f(the)g(lines)g(through)g Fq(p)g Fr(that)g(mak)n(e)f
Fi(\006)p Fr(30)2791 4354 y Fg(\016)2848 4384 y Fr(angles)g(with)i(the)
523 4483 y Fq(x)p Fr(-axis.)44 b(The)31 b(dominance)f(w)n(edge)f(is)h
(de\014ned)h(to)f(b)r(e)h(op)r(en)f(on)h(the)f(b)r(ottom)h(and)f
(closed)523 4583 y(on)d(top)h(\(it)g(includes)f(its)h(upp)r(er)f(b)r
(oundary)-7 b(,)27 b(but)h(not)g(its)f(lo)n(w)n(er)f(b)r(oundary\).)36
b(W)-7 b(e)28 b(de\014ne)523 4683 y Fp(Cir)l(c)6 b Fr(\()p
Fq(p;)14 b(r)r Fr(\))31 b(to)e(b)r(e)i(the)f(circle)g(with)g(radius)f
Fq(r)k Fr(cen)n(tered)d(on)f(p)r(oin)n(t)h Fq(p)p Fr(.)44
b(In)31 b(this)f(section)f(of)523 4782 y(the)f(pap)r(er,)f(the)h
(distance)g(b)r(et)n(w)n(een)f(t)n(w)n(o)g(p)r(oin)n(ts)g
Fq(p)h Fr(and)f Fq(q)k Fr(is)d(denoted)f(b)n(y)g Fq(pq)s
Fr(.)1914 5147 y(16)p eop
%%Page: 17 17
17 16 bop 648 614 a Fr(Our)23 b(algorithm)f(uses)h(all)h(three)f(righ)n
(t-extending)g(w)n(edges)f(b)r(ounded)i(b)n(y)g(the)g(v)n(ertical)523
714 y(line)29 b(through)g Fq(p)g Fr(and)g(b)n(y)g(the)g
Fi(\006)p Fr(30)1641 684 y Fg(\016)1707 714 y Fr(lines,)h(but)f(w)n(e)g
(frame)g(our)f(argumen)n(ts)g(in)i(terms)e(of)523 814
y(the)20 b(single)g(dominance)g(w)n(edge)f(that)h(con)n(tains)f(the)i
(p)r(oin)n(t)f(\()p Fi(1)p Fq(;)14 b Fr(0\).)34 b(The)20
b(same)g(argumen)n(ts)523 913 y(apply)27 b(to)h(the)g(other)f(w)n
(edges)f(b)n(y)i(rotation.)648 1048 y(Let)f(the)h(closest)e(pair)h(of)g
(p)r(oin)n(ts)g(in)h Fq(S)k Fr(b)r(e)c(\()p Fq(a;)14
b(b)p Fr(\),)27 b(with)h Fq(a)f Fr(to)g(the)h(left)g(of)f
Fq(b)g Fr(\(or)g(b)r(elo)n(w)523 1148 y Fq(b)p Fr(,)e(if)h(their)f
Fq(x)p Fr(-co)r(ordinates)e(are)h(equal\).)36 b(F)-7
b(or)24 b(notational)g(con)n(v)n(enience,)h(w)n(e)f(write)h(this)g(as)
523 1248 y Fq(a)31 b Fi(\036)f Fq(b)p Fr(.)51 b(Without)33
b(loss)f(of)g(generalit)n(y)-7 b(,)32 b(assume)g(that)g
Fq(b)f Fi(2)g Fp(Dom)7 b Fr(\()p Fq(a)p Fr(\);)35 b(if)e(this)f(is)h
(not)f(the)523 1347 y(case,)27 b(then)h(consider)e(the)i
Fi(\006)p Fr(60)1526 1317 y Fg(\016)1591 1347 y Fr(rotated)f(plane)g
(that)h(puts)g Fq(b)f Fr(in)h Fp(Dom)6 b Fr(\()p Fq(a)p
Fr(\).)995 1468 y
 15156103 6971806 3617996 33614479 32890880 47099740 startTexFig
 995 1468 a
%%BeginDocument: kinetic-closest-proof2.ps
%AI5_FileFormat 1.2
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 0 0 552 728
%AI3_DocumentPreview: Header
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 0
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -78 876 1 695 581 18 0 1 3 40
%AI5_OpenViewLayers: 7
userdict /Adobe_level2_AI5 21 dict dup begin
       put
       /packedarray where not
       {
               userdict begin
               /packedarray
               {
                       array astore readonly
               } bind def
               /setpacking /pop load def
               /currentpacking false def
        end
               0
       } if
       pop
       userdict /defaultpacking currentpacking put true setpacking
       /initialize
       {
               Adobe_level2_AI5 begin
       } bind def
       /terminate
       {
               currentdict Adobe_level2_AI5 eq
               {
                end
               } if
       } bind def
       mark
       /setcustomcolor where not
       {
               /findcmykcustomcolor
               {
                       5 packedarray
               } bind def
               /setcustomcolor
               {
                       exch aload pop pop
                       4
                       {
                               4 index mul 4 1 roll
                       } repeat
                       5 -1 roll pop
                       setcmykcolor
               }
               def
       } if
       
       /gt38? mark {version cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
       userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
       userdict /level2?
       systemdict /languagelevel known dup
       {
               pop systemdict /languagelevel get 2 ge
       } if
       put
       level2? not
       {
               /setcmykcolor where not
               {
                       /setcmykcolor
                       {
                               exch .11 mul add exch .59 mul add exch .3 mul add
                               1 exch sub setgray
                       } def
               } if
               /currentcmykcolor where not
               {
                       /currentcmykcolor
                       {
                               0 0 0 1 currentgray sub
                       } def
               } if
               /setoverprint where not
               {
                       /setoverprint /pop load def
               } if
               /selectfont where not
               {
                       /selectfont
                       {
                               exch findfont exch
                               dup type /arraytype eq
                               {
                                       makefont
                               }
                               {
                                       scalefont
                               } ifelse
                               setfont
                       } bind def
               } if
               /cshow where not
               {
                       /cshow
                       {
                               [
                               0 0 5 -1 roll aload pop
                               ] cvx bind forall
                       } bind def
               } if
       } if
       cleartomark
       /anyColor?
       {
               add add add 0 ne
       } bind def
       /testColor
       {
               gsave
               setcmykcolor currentcmykcolor
               grestore
       } bind def
       /testCMYKColorThrough
       {
               testColor anyColor?
       } bind def
       userdict /composite?
       level2?
       {
               gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
               add add add 4 eq
       }
       {
               1 0 0 0 testCMYKColorThrough
               0 1 0 0 testCMYKColorThrough
               0 0 1 0 testCMYKColorThrough
               0 0 0 1 testCMYKColorThrough
               and and and
       } ifelse
       put
       composite? not
       {
               userdict begin
               gsave
               /cyan? 1 0 0 0 testCMYKColorThrough def
               /magenta? 0 1 0 0 testCMYKColorThrough def
               /yellow? 0 0 1 0 testCMYKColorThrough def
               /black? 0 0 0 1 testCMYKColorThrough def
               grestore
               /isCMYKSep? cyan? magenta? yellow? black? or or or def
               /customColor? isCMYKSep? not def
        end
       } if
 end defaultpacking setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
       Adobe_typography_AI5 begin
       Adobe_typography_AI5
       {
               dup xcheck
               {
                       bind
               } if
               pop pop
       } forall
 end
 end
 end
       Adobe_typography_AI5 begin
} def
/terminate
{
       currentdict Adobe_typography_AI5 eq
       {
        end
       } if
} def
/modifyEncoding
{
       /_tempEncode exch ddef
       /_pntr 0 ddef
       {
               counttomark -1 roll
               dup type dup /marktype eq
               {
                       pop pop exit
               }
               {
                       /nametype eq
                       {
                               _tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
                               put
                       }
                       {
                               /_pntr exch ddef
                       } ifelse
               } ifelse
       } loop
       _tempEncode
} def
/TE
{
       StandardEncoding 256 array copy modifyEncoding
       /_nativeEncoding exch def
} def
%
/TZ
{
       dup type /arraytype eq
       {
               /_wv exch def
       }
       {
               /_wv 0 def
       } ifelse
       /_useNativeEncoding exch def
       pop pop
       findfont _wv type /arraytype eq
       {
               _wv makeblendedfont
       } if
       dup length 2 add dict
 begin
       mark exch
       {
               1 index /FID ne
               {
                       def
               } if
               cleartomark mark
       } forall
       pop
       /FontName exch def
       counttomark 0 eq
       {
               1 _useNativeEncoding eq
               {
                       /Encoding _nativeEncoding def
               } if
               cleartomark
       }
       {
               /Encoding load 256 array copy
               modifyEncoding /Encoding exch def
       } ifelse
       FontName currentdict
 end
       definefont pop
} def
/tr
{
       _ax _ay 3 2 roll
} def
/trj
{
       _cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
       /Tx
       {
               dup
               currentpoint 3 2 roll
               tr _psf
               newpath moveto
               tr _ctm _pss
       } ddef
       /Tj
       {
               dup
               currentpoint 3 2 roll
               trj _pjsf
               newpath moveto
               trj _ctm _pjss
       } ddef
} def
/a1
{
       /Tx
       {
               dup currentpoint 4 2 roll gsave
               dup currentpoint 3 2 roll
               tr _psf
               newpath moveto
               tr _ctm _pss
               grestore 3 1 roll moveto tr sp
       } ddef
       /Tj
       {
               dup currentpoint 4 2 roll gsave
               dup currentpoint 3 2 roll
               trj _pjsf
               newpath moveto
               trj _ctm _pjss
               grestore 3 1 roll moveto tr jsp
       } ddef
} def
/e0
{
       /Tx
       {
               tr _psf
       } ddef
       /Tj
       {
               trj _pjsf
       } ddef
} def
/e1
{
       /Tx
       {
               dup currentpoint 4 2 roll gsave
               tr _psf
               grestore 3 1 roll moveto tr sp
       } ddef
       /Tj
       {
               dup currentpoint 4 2 roll gsave
               trj _pjsf
               grestore 3 1 roll moveto tr jsp
       } ddef
} def
/i0
{
       /Tx
       {
               tr sp
       } ddef
       /Tj
       {
               trj jsp
       } ddef
} def
/i1
{
       W N
} def
/o0
{
       /Tx
       {
               tr sw rmoveto
       } ddef
       /Tj
       {
               trj swj rmoveto
       } ddef
} def
/r0
{
       /Tx
       {
               tr _ctm _pss
       } ddef
       /Tj
       {
               trj _ctm _pjss
       } ddef
} def
/r1
{
       /Tx
       {
               dup currentpoint 4 2 roll currentpoint gsave newpath moveto
               tr _ctm _pss
               grestore 3 1 roll moveto tr sp
       } ddef
       /Tj
       {
               dup currentpoint 4 2 roll currentpoint gsave newpath moveto
               trj _ctm _pjss
               grestore 3 1 roll moveto tr jsp
       } ddef
} def
/To
{
       pop _ctm currentmatrix pop
} def
/TO
{
       iTe _ctm setmatrix newpath
} def
/Tp
{
       pop _tm astore pop _ctm setmatrix
       _tDict begin
       /W
       {
       } def
       /h
       {
       } def
} def
/TP
{
 end
       iTm 0 0 moveto
} def
/Tr
{
       _render 3 le
       {
               currentpoint newpath moveto
       } if
       dup 8 eq
       {
               pop 0
       }
       {
               dup 9 eq
               {
                       pop 1
               } if
       } ifelse
       dup /_render exch ddef
       _renderStart exch get load exec
} def
/iTm
{
       _ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
       _tm astore pop iTm 0 0 moveto
} def
/Td
{
       _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
       _render -1 eq
       {
       }
       {
               _renderEnd _render get dup null ne
               {
                       load exec
               }
               {
                       pop
               } ifelse
       } ifelse
       /_render -1 ddef
} def
/Ta
{
       pop
} def
/Tf
{
       dup 1000 div /_fScl exch ddef
%
       selectfont
} def
/Tl
{
       pop
       0 exch _leading astore pop
} def
/Tt
{
       pop
} def
/TW
{
       3 npop
} def
/Tw
{
       /_cx exch ddef
} def
/TC
{
       3 npop
} def
/Tc
{
       /_ax exch ddef
} def
/Ts
{
       /_rise exch ddef
       currentpoint
       iTm
       moveto
} def
/Ti
{
       3 npop
} def
/Tz
{
       100 div /_hs exch ddef
       iTm
} def
/TA
{
       pop
} def
/Tq
{
       pop
} def
/Th
{
       pop pop pop pop pop
} def
/TX
{
       pop
} def
/Tk
{
       exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
       2 npop
} def
/T*
{
       _leading aload pop neg Td
} def
/T*-
{
       _leading aload pop Td
} def
/T-
{
       _hyphen Tx
} def
/T+
{
} def
/TR
{
       _ctm currentmatrix pop
       _tm astore pop
       iTm 0 0 moveto
} def
/TS
{
       currentfont 3 1 roll
       /_Symbol_ _fScl 1000 mul selectfont
       
       0 eq
       {
               Tx
       }
       {
               Tj
       } ifelse
       setfont
} def
/Xb
{
       pop pop
} def
/Tb /Xb load def
/Xe
{
       pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI5_vars 70 dict dup begin
put
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_IllustratorA_AI5 74 dict dup begin
put
/initialize
{
       Adobe_IllustratorA_AI5 dup begin
       Adobe_IllustratorA_AI5_vars begin
       discardDict
       {
               bind pop pop
       } forall
       dup /nc get begin
       {
               dup xcheck 1 index type /operatortype ne and
               {
                       bind
               } if
               pop pop
       } forall
 end
       newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
       Adobe_IllustratorA_AI5_vars 3 1 roll put
} def
/xput
{
       dup load dup length exch maxlength eq
       {
               dup dup load dup
               length 2 mul dict copy def
       } if
       load begin
       def
 end
} def
/npop
{
       {
               pop
       } repeat
} def
/sw
{
       dup length exch stringwidth
       exch 5 -1 roll 3 index mul add
       4 1 roll 3 1 roll mul add
} def
/swj
{
       dup 4 1 roll
       dup length exch stringwidth
       exch 5 -1 roll 3 index mul add
       4 1 roll 3 1 roll mul add
       6 2 roll /_cnt 0 ddef
       {
               1 index eq
               {
                       /_cnt _cnt 1 add ddef
               } if
       } forall
       pop
       exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
       4 1 roll
       {
               2 npop
               (0) exch 2 copy 0 exch put pop
               gsave
               false charpath currentpoint
               4 index setmatrix
               stroke
               grestore
               moveto
               2 copy rmoveto
       } exch cshow
       3 npop
} def
/jss
{
       4 1 roll
       {
               2 npop
               (0) exch 2 copy 0 exch put
               gsave
               _sp eq
               {
                       exch 6 index 6 index 6 index 5 -1 roll widthshow
                       currentpoint
               }
               {
                       false charpath currentpoint
                       4 index setmatrix stroke
               } ifelse
               grestore
               moveto
               2 copy rmoveto
       } exch cshow
       6 npop
} def
/sp
{
       {
               2 npop (0) exch
               2 copy 0 exch put pop
               false charpath
               2 copy rmoveto
       } exch cshow
       2 npop
} def
/jsp
{
       {
               2 npop
               (0) exch 2 copy 0 exch put
               _sp eq
               {
                       exch 5 index 5 index 5 index 5 -1 roll widthshow
               }
               {
                       false charpath
               } ifelse
               2 copy rmoveto
       } exch cshow
       5 npop
} def
/pl
{
       transform
       0.25 sub round 0.25 add exch
       0.25 sub round 0.25 add exch
       itransform
} def
/setstrokeadjust where
{
       pop true setstrokeadjust
       /c
       {
               curveto
       } def
       /C
       /c load def
       /v
       {
               currentpoint 6 2 roll curveto
       } def
       /V
       /v load def
       /y
       {
               2 copy curveto
       } def
       /Y
       /y load def
       /l
       {
               lineto
       } def
       /L
       /l load def
       /m
       {
               moveto
       } def
}
{
       /c
       {
               pl curveto
       } def
       /C
       /c load def
       /v
       {
               currentpoint 6 2 roll pl curveto
       } def
       /V
       /v load def
       /y
       {
               pl 2 copy curveto
       } def
       /Y
       /y load def
       /l
       {
               pl lineto
       } def
       /L
       /l load def
       /m
       {
               pl moveto
       } def
} ifelse
/d
{
       setdash
} def
/cf
{
} def
/i
{
       dup 0 eq
       {
               pop cf
       } if
       setflat
} def
/j
{
       setlinejoin
} def
/J
{
       setlinecap
} def
/M
{
       setmiterlimit
} def
/w
{
       setlinewidth
} def
/H
{
} def
/h
{
       closepath
} def
/N
{
       _pola 0 eq
       {
               _doClip 1 eq
               {
                       clip /_doClip 0 ddef
               } if
               newpath
       }
       {
               /CRender
               {
                       N
               } ddef
       } ifelse
} def
/n
{
       N
} def
/F
{
       _pola 0 eq
       {
               _doClip 1 eq
               {
                       gsave _pf grestore clip newpath /_lp /none ddef _fc
                       /_doClip 0 ddef
               }
               {
                       _pf
               } ifelse
       }
       {
               /CRender
               {
                       F
               } ddef
       } ifelse
} def
/f
{
       closepath
       F
} def
/S
{
       _pola 0 eq
       {
               _doClip 1 eq
               {
                       gsave _ps grestore clip newpath /_lp /none ddef _sc
                       /_doClip 0 ddef
               }
               {
                       _ps
               } ifelse
       }
       {
               /CRender
               {
                       S
               } ddef
       } ifelse
} def
/s
{
       closepath
       S
} def
/B
{
       _pola 0 eq
       {
               _doClip 1 eq
               gsave F grestore
               {
                       gsave S grestore clip newpath /_lp /none ddef _sc
                       /_doClip 0 ddef
               }
               {
                       S
               } ifelse
       }
       {
               /CRender
               {
                       B
               } ddef
       } ifelse
} def
/b
{
       closepath
       B
} def
/W
{
       /_doClip 1 ddef
} def
/*
{
       count 0 ne
       {
               dup type /stringtype eq
               {
                       pop
               } if
       } if
       newpath
} def
/u
{
} def
/U
{
} def
/q
{
       _pola 0 eq
       {
               gsave
       } if
} def
/Q
{
       _pola 0 eq
       {
               grestore
       } if
} def
/*u
{
       _pola 1 add /_pola exch ddef
} def
/*U
{
       _pola 1 sub /_pola exch ddef
       _pola 0 eq
       {
               CRender
       } if
} def
/D
{
       pop
} def
/*w
{
} def
/*W
{
} def
/`
{
       /_i save ddef
       clipForward?
       {
               nulldevice
       } if
       6 1 roll 4 npop
       concat pop
       userdict begin
       /showpage
       {
       } def
       0 setgray
       0 setlinecap
       1 setlinewidth
       0 setlinejoin
       10 setmiterlimit
       [] 0 setdash
       /setstrokeadjust where {pop false setstrokeadjust} if
       newpath
       0 setgray
       false setoverprint
} def
/~
{
 end
       _i restore
} def
/O
{
       0 ne
       /_of exch ddef
       /_lp /none ddef
} def
/R
{
       0 ne
       /_os exch ddef
       /_lp /none ddef
} def
/g
{
       /_gf exch ddef
       /_fc
       {
               _lp /fill ne
               {
                       _of setoverprint
                       _gf setgray
                       /_lp /fill ddef
               } if
       } ddef
       /_pf
       {
               _fc
               fill
       } ddef
       /_psf
       {
               _fc
               ashow
       } ddef
       /_pjsf
       {
               _fc
               awidthshow
       } ddef
       /_lp /none ddef
} def
/G
{
       /_gs exch ddef
       /_sc
       {
               _lp /stroke ne
               {
                       _os setoverprint
                       _gs setgray
                       /_lp /stroke ddef
               } if
       } ddef
       /_ps
       {
               _sc
               stroke
       } ddef
       /_pss
       {
               _sc
               ss
       } ddef
       /_pjss
       {
               _sc
               jss
       } ddef
       /_lp /none ddef
} def
/k
{
       _cf astore pop
       /_fc
       {
               _lp /fill ne
               {
                       _of setoverprint
                       _cf aload pop setcmykcolor
                       /_lp /fill ddef
               } if
       } ddef
       /_pf
       {
               _fc
               fill
       } ddef
       /_psf
       {
               _fc
               ashow
       } ddef
       /_pjsf
       {
               _fc
               awidthshow
       } ddef
       /_lp /none ddef
} def
/K
{
       _cs astore pop
       /_sc
       {
               _lp /stroke ne
               {
                       _os setoverprint
                       _cs aload pop setcmykcolor
                       /_lp /stroke ddef
               } if
       } ddef
       /_ps
       {
               _sc
               stroke
       } ddef
       /_pss
       {
               _sc
               ss
       } ddef
       /_pjss
       {
               _sc
               jss
       } ddef
       /_lp /none ddef
} def
/x
{
       /_gf exch ddef
       findcmykcustomcolor
       /_if exch ddef
       /_fc
       {
               _lp /fill ne
               {
                       _of setoverprint
                       _if _gf 1 exch sub setcustomcolor
                       /_lp /fill ddef
               } if
       } ddef
       /_pf
       {
               _fc
               fill
       } ddef
       /_psf
       {
               _fc
               ashow
       } ddef
       /_pjsf
       {
               _fc
               awidthshow
       } ddef
       /_lp /none ddef
} def
/X
{
       /_gs exch ddef
       findcmykcustomcolor
       /_is exch ddef
       /_sc
       {
               _lp /stroke ne
               {
                       _os setoverprint
                       _is _gs 1 exch sub setcustomcolor
                       /_lp /stroke ddef
               } if
       } ddef
       /_ps
       {
               _sc
               stroke
       } ddef
       /_pss
       {
               _sc
               ss
       } ddef
       /_pjss
       {
               _sc
               jss
       } ddef
       /_lp /none ddef
} def
/A
{
       pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/discard
{
       save /discardSave exch store
       discardDict begin
       /endString exch store
       gt38?
       {
               2 add
       } if
       load
       stopped
       pop
 end
       discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
       /endStringLength endString length store
       /newBuff buffer 0 endStringLength getinterval store
       /newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
       /newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
       newBuff 0 newBuffButFirst putinterval
       newBuffLast 0
       currentfile read not
       {
       stop
       } if
       put
} def
0
{
       pre38Initialize
       mark
       currentfile newBuff readstring exch pop
       {
               {
                       newBuff endString eq
                       {
                               cleartomark stop
                       } if
                       shiftBuffer
               } loop
       }
       {
       stop
       } ifelse
} def
1
{
       pre38Initialize
       /beginString exch store
       mark
       currentfile newBuff readstring exch pop
       {
               {
                       newBuff beginString eq
                       {
                               /layerCount dup load 1 add store
                       }
                       {
                               newBuff endString eq
                               {
                                       /layerCount dup load 1 sub store
                                       layerCount 0 eq
                                       {
                                               cleartomark stop
                                       } if
                               } if
                       } ifelse
                       shiftBuffer
               } loop
       }
       {
       stop
       } ifelse
} def
2
{
       mark
       {
               currentfile buffer readline not
               {
               stop
               } if
               endString eq
               {
                       cleartomark stop
               } if
       } loop
} def
3
{
       /beginString exch store
       /layerCnt 1 store
       mark
       {
               currentfile buffer readline not
               {
               stop
               } if
               dup beginString eq
               {
                       pop /layerCnt dup load 1 add store
               }
               {
                       endString eq
                       {
                               layerCnt 1 eq
                               {
                                       cleartomark stop
                               }
                               {
                                       /layerCnt dup load 1 sub store
                               } ifelse
                       } if
               } ifelse
       } loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
       /n /N /s /S /f /F /b /B
}
{
       {
               _doClip 1 eq
               {
                       /_doClip 0 ddef clip
               } if
               newpath
       } def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
       4 npop
       6 1 roll
       pop
       4 1 roll
       pop pop pop
       0 eq
       {
               0 eq
               {
                       (%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
               }
               {
                       /clipForward? true def
                       
                       /Tx /pop load def
                       /Tj /pop load def
                       currentdict end clipRenderOff begin begin
               } ifelse
       }
       {
               0 eq
               {
                       save /discardSave exch store
               } if
       } ifelse
} bind def
/LB
{
       discardSave dup null ne
       {
               restore
       }
       {
               pop
               clipForward?
               {
                       currentdict
                end
                end
                begin
                       
                       /clipForward? false ddef
               } if
       } ifelse
} bind def
/Pb
{
       pop pop
       0 (%AI5_EndPalette) discard
} bind def
/Np
{
       0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
       72 exch div
       0 dtransform dup mul exch dup mul add sqrt
       dup 1 lt
       {
               pop 1
       } if
       setflat
} def
/Mb
{
       q
} def
/Md
{
} def
/MB
{
       Q
} def
/nc 3 dict def
nc begin
/setgray
{
       pop
} bind def
/setcmykcolor
{
       4 npop
} bind def
/setcustomcolor
{
       2 npop
} bind def
currentdict readonly pop
end
currentdict readonly pop
end
setpacking
Adobe_level2_AI5 /initialize get exec
Adobe_IllustratorA_AI5_vars Adobe_IllustratorA_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_IllustratorA_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Times-Italic Times-Italic
[/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding TrueType
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Confetti)
(Confetti) 4.85 3.617 76.85 75.617 [
(0 O 0 R 1 g 1 G) @
_ &
(0 O 0 R 0 g 0 G) @
(
800 Ar
0 J 0 j 0.3 w 4 M []0 d
%AI3_Note:
0 D
10.6 64.867 m
7.85 62.867 l
S
9.1 8.617 m
6.85 6.867 l
S
78.1 68.617 m
74.85 67.867 l
S
76.85 56.867 m
74.35 55.117 l
S
79.6 51.617 m
76.6 51.617 l
S
76.35 44.117 m
73.6 45.867 l
S
78.6 35.867 m
76.6 34.367 l
S
76.1 23.867 m
73.35 26.117 l
S
78.1 12.867 m
73.85 13.617 l
S
68.35 14.617 m
66.1 12.867 l
S
76.6 30.617 m
73.6 30.617 l
S
62.85 58.117 m
60.956 60.941 l
S
32.85 59.617 m
31.196 62.181 l
S
47.891 64.061 m
49.744 66.742 l
S
72.814 2.769 m
73.928 5.729 l
S
67.976 2.633 m
67.35 5.909 l
S
61.85 27.617 m
59.956 30.441 l
S
53.504 56.053 m
51.85 58.617 l
S
52.762 1.779 m
52.876 4.776 l
S
45.391 5.311 m
47.244 7.992 l
S
37.062 3.375 m
35.639 5.43 l
S
55.165 34.828 m
57.518 37.491 l
S
20.795 3.242 m
22.12 5.193 l
S
14.097 4.747 m
15.008 8.965 l
S
9.736 1.91 m
8.073 4.225 l
S
31.891 5.573 m
32.005 8.571 l
S
12.1 70.367 m
15.6 68.867 l
S
9.35 54.867 m
9.6 58.117 l
S
12.85 31.867 m
14.35 28.117 l
S
10.1 37.367 m
12.35 41.117 l
S
34.1 71.117 m
31.85 68.617 l
S
38.35 71.117 m
41.6 68.367 l
S
55.1 71.117 m
58.35 69.117 l
S
57.35 65.117 m
55.35 61.867 l
S
64.35 66.367 m
69.35 68.617 l
S
71.85 62.867 m
69.35 61.117 l
S
23.6 70.867 m
23.6 67.867 l
S
20.6 65.867 m
17.35 65.367 l
S
24.85 61.367 m
25.35 58.117 l
S
25.85 65.867 m
29.35 66.617 l
S
14.1 54.117 m
16.85 56.117 l
S
12.35 11.617 m
12.6 15.617 l
S
12.1 19.867 m
14.35 22.367 l
S
26.1 9.867 m
23.6 13.367 l
S
34.6 47.117 m
32.1 45.367 l
S
62.6 41.867 m
59.85 43.367 l
S
31.6 35.617 m
27.85 36.367 l
S
36.35 26.117 m
34.35 24.617 l
S
33.85 14.117 m
31.1 16.367 l
S
37.1 9.867 m
35.1 11.117 l
S
34.35 20.867 m
31.35 20.867 l
S
44.6 56.617 m
42.1 54.867 l
S
47.35 51.367 m
44.35 51.367 l
S
44.1 43.867 m
41.35 45.617 l
S
43.35 33.117 m
42.6 30.617 l
S
43.85 23.617 m
41.1 25.867 l
S
44.35 15.617 m
42.35 16.867 l
S
67.823 31.1 m
64.823 31.1 l
S
27.1 32.617 m
29.6 30.867 l
S
31.85 55.117 m
34.85 55.117 l
S
19.6 40.867 m
22.1 39.117 l
S
16.85 35.617 m
19.85 35.617 l
S
20.1 28.117 m
22.85 29.867 l
S
52.1 42.617 m
54.484 44.178 l
S
52.437 50.146 m
54.821 48.325 l
S
59.572 54.133 m
59.35 51.117 l
S
50.185 10.055 m
53.234 9.928 l
S
51.187 15.896 m
53.571 14.075 l
S
58.322 19.883 m
59.445 16.823 l
S
53.1 32.117 m
50.6 30.367 l
S
52.85 24.617 m
49.6 25.617 l
S
61.85 9.117 m
59.1 10.867 l
S
69.35 34.617 m
66.6 36.367 l
S
67.1 23.617 m
65.1 22.117 l
S
24.435 46.055 m
27.484 45.928 l
S
25.437 51.896 m
27.821 50.075 l
S
62.6 47.117 m
65.321 46.575 l
S
19.85 19.867 m
20.35 16.617 l
S
21.85 21.867 m
25.35 22.617 l
S
37.6 62.867 m
41.6 62.117 l
S
38.323 42.1 m
38.823 38.6 l
S
69.35 52.617 m
66.85 53.867 l
S
14.85 62.117 m
18.1 59.367 l
S
9.6 46.117 m
7.1 44.367 l
S
20.6 51.617 m
18.6 50.117 l
S
46.141 70.811 m
47.994 73.492 l
S
69.391 40.561 m
71.244 43.242 l
S
38.641 49.311 m
39.35 52.117 l
S
25.141 16.811 m
25.85 19.617 l
S
36.6 32.867 m
34.6 31.367 l
S
6.1 68.617 m
2.85 67.867 l
S
4.85 56.867 m
2.35 55.117 l
S
7.6 51.617 m
4.6 51.617 l
S
6.6 35.867 m
4.6 34.367 l
S
6.1 12.867 m
1.85 13.617 l
S
4.6 30.617 m
1.6 30.617 l
S
72.814 74.769 m
73.928 77.729 l
S
67.976 74.633 m
67.35 77.909 l
S
52.762 73.779 m
52.876 76.776 l
S
37.062 75.375 m
35.639 77.43 l
S
20.795 75.242 m
22.12 77.193 l
S
9.736 73.91 m
8.073 76.225 l
S
10.1 23.617 m
6.35 24.367 l
S
73.217 18.276 m
71.323 21.1 l
S
28.823 39.6 m
29.505 42.389 l
S
49.6 38.617 m
47.6 37.117 l
S
60.323 73.6 m
62.323 76.6 l
S
60.323 1.6 m
62.323 4.6 l
S
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @
(
800 Ar
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
3 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Red & Yellow)
(Red & Yellow) 0 2 Bd
[
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
FFFFFEFEFDFDFDFCFCFBFBFBFAFAF9F9F9F8F8F7F7F7F6F6F5F5F5F4F4F3F3F3F2F2F1F1F1F0F0EF
EFEFEEEEEDEDEDECECEBEBEBEAEAE9E9E9E8E8E7E7E7E6E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DF
DFDFDEDEDDDDDDDCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D5D5D5D4D4D3D3D3D2D2D1D1D1D0D0CF
CFCFCECECDCDCDCCCCCBCBCBCACAC9C9C9C8C8C7C7C7C6C6C5C5C5C4C4C3C3C3C2C2C1C1C1C0C0BF
BFBFBEBEBDBDBDBCBCBBBBBBBABAB9B9B9B8B8B7B7B7B6B6B5B5B5B4B4B3B3B3B2B2B1B1B1B0B0AF
AFAFAEAEADADADACACABABABAAAAA9A9A9A8A8A7A7A7A6A6A5A5A5A4A4A3A3A3A2A2A1A1A1A0A09F
9F9F9E9E9D9D9D9C9C9B9B9B9A9A9999
>
0
1 %_Br
[
0 1 0.6 0 1 50 100 %_Bs
0 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Blue Radial)
(Yellow & Blue Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 2 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Blue Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
(Yellow Stripe) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
0 0 0 0 k
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
0 0 0 0 k
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
0 0 0 0 k
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
u
u
0 R
0 G
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
270.89 188.5611 m
S
270.89 188.5611 m
S
U
u
0 O
0.85 g
1 D
143.3784 558.5394 m
201.1763 591.909 L
206.8219 601.666 210.0547 612.9936 210.0547 625.0767 c
210.0547 637.1598 206.8219 648.4873 201.1764 658.2443 C
143.3784 691.6142 L
143.3784 558.5394 L
F
1 Ap
0 R
0 G
0 D
143.3784 559.0129 m
180.0089 559.0129 209.7047 588.7087 209.7047 625.3392 c
209.7047 661.9697 180.0089 691.6655 143.3784 691.6655 c
106.7479 691.6655 77.0521 661.9697 77.0521 625.3392 c
77.0521 588.7087 106.7479 559.0129 143.3784 559.0129 c
s
0 Ap
143.3784 625.3392 m
215.4781 668.039 l
S
143.3784 625.3392 m
216.1781 583.3394 l
S
[4 ]0 d
143.3784 691.6655 m
201.1764 658.2443 l
S
3 w []0 d
201.1763 591.909 m
206.8219 601.666 210.0547 612.9936 210.0547 625.0767 c
210.0547 637.1598 206.4117 649.1322 200.7662 658.8892 C
S
1 Ap
0 O
0 g
1 w
206.8281 641.1825 m
209.1859 641.1825 211.0973 643.0939 211.0973 645.4516 c
211.0973 647.8094 209.1859 649.7208 206.8281 649.7208 c
204.4704 649.7208 202.559 647.8094 202.559 645.4516 c
202.559 643.0939 204.4704 641.1825 206.8281 641.1825 c
f
143.3784 621.0701 m
145.7362 621.0701 147.6475 622.9815 147.6475 625.3392 c
147.6475 627.6969 145.7362 629.6083 143.3784 629.6083 c
141.0207 629.6083 139.1093 627.6969 139.1093 625.3392 c
139.1093 622.9815 141.0207 621.0701 143.3784 621.0701 c
f
0 To
1 0 0 1 212.8739 644.0516 0 Tp
TP
0 Tr
/_Times-Italic 16 Tf
0 Ts
100 Tz
0 Tt
0 TA
%_ 0 XL
25.1999 0 Xb
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 0 2 2 3 Th
0 Tq
0 0 Tl
0 Tc
0 Tw
(b) Tx 
(\r) TX 
TO
0 To
1 0 0 1 127.4785 620.8392 0 Tp
TP
0 Tr
(a) Tx 
(\r) TX 
TO
0 Ap
0 R
0 G
[4 ]0 d
201.1763 591.909 m
143.3784 558.5394 L
S
[]0 d
143.3784 701.9889 m
143.3784 550.7895 L
S
U
u
u
0 O
0.85 g
452.4223 575.4249 m
462.5521 569.0904 L
462.3021 600.5904 L
460.3392 594.9545 455.3626 580.5196 452.4223 575.4249 C
F
u
452.3711 670.0978 m
455.3343 664.9764 460.5776 651.7598 462.5521 646.0904 C
462.5521 677.8404 L
451.3362 671.3775 L
452.3711 670.0978 L
f
U
U
0 R
0 G
451.3362 671.3775 m
459.7296 657.2359 464.5544 640.7277 464.5544 623.0904 c
464.5544 605.8396 459.9421 589.6667 451.8865 575.734 C
S
451.3362 671.3775 m
472.8021 684.0904 L
S
451.3362 671.3775 m
369.8021 623.0904 L
S
473.8021 563.0904 m
451.8865 575.734 L
S
369.8021 623.0904 m
451.8865 575.734 L
S
1 Ap
0 O
0 g
462.3646 639.541 m
464.0487 639.541 465.414 640.9063 465.414 642.5904 c
465.414 644.2745 464.0487 645.6398 462.3646 645.6398 c
460.6805 645.6398 459.3152 644.2745 459.3152 642.5904 c
459.3152 640.9063 460.6805 639.541 462.3646 639.541 c
f
458.3021 576.4558 m
459.481 576.4558 460.4367 577.4115 460.4367 578.5904 c
460.4367 579.7692 459.481 580.7249 458.3021 580.7249 c
457.1232 580.7249 456.1675 579.7692 456.1675 578.5904 c
456.1675 577.4115 457.1232 576.4558 458.3021 576.4558 c
f
369.8021 620.041 m
371.4862 620.041 372.8515 621.4063 372.8515 623.0904 c
372.8515 624.7745 371.4862 626.1398 369.8021 626.1398 c
368.118 626.1398 366.7527 624.7745 366.7527 623.0904 c
366.7527 621.4063 368.118 620.041 369.8021 620.041 c
f

gsave
4.3 -9 translate
458.3021 576.4558 m
459.481 576.4558 460.4367 577.4115 460.4367 578.5904 c
460.4367 579.7692 459.481 580.7249 458.3021 580.7249 c
457.1232 580.7249 456.1675 579.7692 456.1675 578.5904 c
456.1675 577.4115 457.1232 576.4558 458.3021 576.4558 c
f
0 108.5 translate
458.3021 576.4558 m
459.481 576.4558 460.4367 577.4115 460.4367 578.5904 c
460.4367 579.7692 459.481 580.7249 458.3021 580.7249 c
457.1232 580.7249 456.1675 579.7692 456.1675 578.5904 c
456.1675 577.4115 457.1232 576.4558 458.3021 576.4558 c
f
0 To
1 0 0 1 445 581 0 Tp
TP
0 Tr
36 0 Xb
XB
(q) Tx 
(\r) TX 
TO
0 To
1 0 0 1 445 461 0 Tp
TP
0 Tr
(p) Tx 
(\r) TX 
TO
grestore

0 To
1 0 0 1 470.3021 646.5904 0 Tp
TP
0 Tr
36 0 Xb
XB
(b) Tx 
(\r) TX 
TO
0 To
1 0 0 1 466.5521 580.5904 0 Tp
TP
0 Tr
(b') Tx 
(\r) TX 
TO
0 To
1 0 0 1 352.8021 618.0904 0 Tp
TP
0 Tr
(a) Tx 
(\r) TX 
TO
0 Ap
0 R
0 G
462.5521 688.3404 m
462.5521 558.5904 l
S
0.25 w
369.8021 623.0904 m
462.3646 642.5904 l
S
U
0 To
1 0 0 1 139.3888 528.9898 0 Tp
TP
0 Tr
0 O
0 g
1 w
25.1999 0 Xb
XB
(\(a\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 406.2279 528.9898 0 Tp
TP
0 Tr
(\(b\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 146.7233 662.9898 0 Tp
TP
0 Tr
36 0 Xb
XB
(p) Tx 
(\r) TX 
TO
1 Ap
157.1151 656.095 m
158.6241 656.095 159.8474 657.3183 159.8474 658.8273 c
159.8474 660.3363 158.6241 661.5596 157.1151 661.5596 c
155.6061 661.5596 154.3828 660.3363 154.3828 658.8273 c
154.3828 657.3183 155.6061 656.095 157.1151 656.095 c
f
0 Ap
0 R
0 G
0.25 w
143.3784 625.3392 m
206.8282 645.4516 l
S
143.3784 625.3392 m
157.1151 658.8273 l
S
u
[3 ]0 d
199.5015 683.9299 m
S
199.5015 683.9299 m
157.1152 658.8273 L
S
229.9148 616.8275 m
157.1152 658.8273 L
S
U
[]0 d
458.3021 578.5904 m
462.3646 642.5904 l
S
U
1 Ap
1 w
498.7439 511.9994 m
498.7439 714.948 L
56.1102 714.948 L
56.1102 511.9994 L
498.7439 511.9994 L
s
LB
%AI5_EndLayer--
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI5 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EndDocument

 endTexFig
 523 2533 a Fr(Figure)21 b(4:)68 b(If)22 b(\()p Fq(a;)14
b(b)p Fr(\))22 b(is)g(the)g(closest)f(pair)h(and)f Fq(b)i
Fi(2)g Fp(Dom)7 b Fr(\()p Fq(a)p Fr(\),)23 b(then:)35
b(\(a\))22 b(there)g(is)g(no)f(p)r(oin)n(t)523 2633 y
Fq(p)h Fr(to)h(the)g(righ)n(t)e(of)i Fq(a)f Fr(that)h(dominates)f
Fq(b)p Fr(,)h(as)f(suc)n(h)g Fq(p)g Fr(w)n(ould)g(lie)h(in)f(the)h
(shaded)f(region)g(and)523 2733 y(b)r(e)30 b(closer)f(to)h
Fq(a)f Fr(than)h Fq(b)g Fr(is;)h(\(b\))g(p)r(oin)n(t)f
Fq(b)f Fr(is)h(also)f(the)h(leftmost)g(p)r(oin)n(t)g(in)g
Fp(Dom)7 b Fr(\()p Fq(a)p Fr(\)|an)n(y)523 2832 y(p)r(oin)n(t)28
b Fq(b)776 2802 y Fg(0)826 2832 y Fr(left)h(of)e Fq(b)h
Fr(w)n(ould)f(b)r(e)h(closer)e(to)h Fq(b)h Fr(than)g
Fq(a)f Fr(is.)523 3110 y Fh(Lemma)j(3.1)40 b Fp(Point)g
Fq(b)g Fp(is)g(not)g(c)l(ontaine)l(d)g(in)g(Dom)7 b Fr(\()p
Fq(p)p Fr(\))40 b Fp(for)h(any)f(thir)l(d)h(p)l(oint)f
Fq(p)g Fp(with)523 3210 y Fq(a)23 b Fi(\036)g Fq(p)p
Fp(.)523 3428 y Fh(Pro)s(of:)61 b Fr(P)n(oin)n(t)21 b
Fq(b)i Fr(lies)g(on)g(the)g(arc)f Fp(Cir)l(c)5 b Fr(\()p
Fq(a;)14 b(ab)p Fr(\))9 b Fi(\\)g Fp(Dom)e Fr(\()p Fq(a)p
Fr(\),)25 b(sho)n(wn)d(dark)g(in)h(Figure)g(4\(a\).)523
3527 y(An)n(y)28 b(p)r(oin)n(t)g Fq(p)g Fr(to)f(the)i(righ)n(t)e(of)g
Fq(a)h Fr(that)g(con)n(tains)f Fq(b)h Fr(in)g Fp(Dom)6
b Fr(\()p Fq(p)p Fr(\))29 b(m)n(ust)e(lie)h(in)h(the)f(shaded)523
3627 y(region)c(b)r(ounded)i(b)n(y)f(the)h(arc,)f(the)h(v)n(ertical)f
(line)g(through)g Fq(a)p Fr(,)h(and)g(the)f Fi(\006)p
Fr(30)2964 3597 y Fg(\016)3027 3627 y Fr(op)r(en)g(lines)523
3727 y(through)h(the)i(top)f(and)g(b)r(ottom)g(of)g(the)g(arc.)36
b(But)27 b(this)h(region)d(is)i(en)n(tirely)g(con)n(tained)f(in)523
3826 y Fp(Cir)l(c)6 b Fr(\()p Fq(a;)14 b(ab)p Fr(\),)27
b(whic)n(h)h(implies)g(that)f Fq(ap)c(<)g(ab)p Fr(,)k(a)g(con)n
(tradiction.)771 b Ff(2)523 4069 y Fh(Lemma)30 b(3.2)40
b Fp(The)31 b(leftmost)f(p)l(oint)g(of)g Fq(S)35 b Fp(in)30
b(Dom)6 b Fr(\()p Fq(a)p Fr(\))30 b Fp(is)g Fq(b)p Fp(.)523
4287 y Fh(Pro)s(of:)84 b Fr(Let)32 b Fq(r)i Fr(=)d Fq(ab)p
Fr(,)i(the)g(separation)e(of)i(the)f(closest)g(pair.)51
b(Consider)31 b(the)i(triangle)523 4387 y(formed)20 b(b)n(y)f(the)i(in)
n(tersection)e(of)h Fp(Dom)6 b Fr(\()p Fq(a)p Fr(\))21
b(with)f(the)h(half-plane)e(left)i(of)f Fq(b)p Fr(.)34
b(If)21 b(the)f(leftmost)523 4486 y(p)r(oin)n(t)27 b
Fq(b)775 4456 y Fg(0)824 4486 y Fr(is)f(not)g(equal)g(to)g
Fq(b)p Fr(,)h(then)f Fq(b)1679 4456 y Fg(0)1729 4486
y Fr(m)n(ust)g(lie)g(in)h(the)g(p)r(ortion)e(of)i(this)f(triangle)g
(outside)523 4586 y Fp(Cir)l(c)6 b Fr(\()p Fq(a;)14 b(r)r
Fr(\).)37 b(See)25 b(Figure)f(4\(b\).)37 b(The)25 b(p)r(oin)n(ts)g(of)g
(this)g(region)f(farthest)h(from)f Fq(b)h Fr(are)f(the)h(in-)523
4686 y(tersections)e Fq(p)h Fr(and)g Fq(q)j Fr(of)d(the)g(v)n(ertical)f
(line)h(through)g Fq(b)f Fr(with)i(the)f(b)r(oundaries)f(of)h
Fp(Dom)7 b Fr(\()p Fq(a)p Fr(\))523 4785 y(\(b)r(ecause)43
b(the)g(p)r(erp)r(endiculars)f(from)h Fq(b)f Fr(to)h(the)g(b)r
(oundaries)f(of)h Fp(Dom)6 b Fr(\()p Fq(a)p Fr(\))43
b(lie)g(inside)523 4885 y Fp(Cir)l(c)6 b Fr(\()p Fq(a;)14
b(r)r Fr(\)\).)38 b(Without)29 b(loss)e(of)h(generalit)n(y)e(let)i
Fq(pb)22 b Fi(\025)h Fq(q)s(b)p Fr(.)37 b(Consider)27
b(the)h(triangle)f Fi(4)p Fq(abp)p Fr(.)1914 5147 y(17)p
eop
%%Page: 18 18
18 17 bop 523 614 a Fr(By)30 b(the)h(la)n(w)f(of)g(sines,)h
Fq(pb=ab)26 b Fr(=)h Fq(pb=r)i Fr(=)f(sin)o(\()2008 600
y Fg(6)p 2017 614 35 3 v 2062 614 a Fq(pab)p Fr(\))p
Fq(=)14 b Fr(sin)o(\()2405 600 y Fg(6)p 2414 614 V 2458
614 a Fq(apb)p Fr(\))27 b(=)g(sin\()2865 600 y Fg(6)p
2874 614 V 2918 614 a Fq(pab)p Fr(\))p Fq(=)14 b Fr(sin)f(60)3327
584 y Fg(\016)3364 614 y Fr(.)523 714 y(Because)854 700
y Fg(6)p 864 714 V 907 714 a Fq(pab)46 b Fi(\024)g Fr(60)1270
684 y Fg(\016)1307 714 y Fr(,)f Fq(pb)h Fi(\024)f Fq(r)r
Fr(.)80 b(That)41 b(is,)k Fq(bb)2168 684 y Fg(0)2237
714 y Fi(\024)h Fq(r)r Fr(.)79 b(F)-7 b(urthermore,)44
b(the)e(partly)523 814 y(op)r(en/partly)33 b(closed)g(de\014nition)h
(of)g Fp(Dom)7 b Fr(\()p Fq(a)p Fr(\))34 b(means)f(that)i
Fq(bb)2559 783 y Fg(0)2615 814 y Fq(<)e(r)r Fr(,)j(a)e(con)n
(tradiction.)523 913 y Ff(2)648 1073 y Fr(F)-7 b(or)29
b(an)n(y)g(p)r(oin)n(t)h Fq(p)p Fr(,)g(let)g Fp(Maxima)7
b Fr(\()p Fq(p)p Fr(\))31 b(consist)e(of)h(the)g(p)r(oin)n(ts)f(of)h
Fq(S)35 b Fr(on)29 b(the)h(b)r(oundary)523 1173 y(of)1749
1194 y Fe([)1742 1360 y Fd(q)q Fc(2)p Fd(S)1742 1408
y(p)p Fc(\036)p Fd(q)1871 1272 y Fp(Dom)7 b Fr(\()p Fq(q)s
Fr(\))p Fq(:)523 1540 y Fr(In)33 b(w)n(ords,)f(this)h(set)g(con)n
(tains)f(all)g(the)h(p)r(oin)n(ts)g(to)f(the)h(righ)n(t)f(of)g
Fq(p)h Fr(that)g(are)e(not)i(in)g(the)523 1639 y(dominance)j(w)n(edge)g
(of)h(an)n(y)e(other)h(p)r(oin)n(t)h(to)g(the)g(righ)n(t)f(of)g
Fq(p)p Fr(.)64 b(W)-7 b(e)37 b(de\014ne)g(the)g(set)f(of)523
1739 y Fp(c)l(andidates)25 b Fr(asso)r(ciated)e(with)h
Fq(p)p Fr(,)h Fp(Cands)8 b Fr(\()p Fq(p)p Fr(\),)25 b(to)e(b)r(e)h(the)
h(set)f Fp(Maxima)7 b Fr(\()p Fq(p)p Fr(\))k Fi(\\)g
Fp(Dom)c Fr(\()p Fq(p)p Fr(\).)36 b(W)-7 b(e)523 1839
y(denote)24 b(the)g(leftmost)h(of)f(these)g(b)n(y)f Fp(lc)l(and)9
b Fr(\()p Fq(p)p Fr(\).)37 b(See)24 b(Figure)f(5.)35
b(By)24 b(Lemmas)f(3.1)g(and)h(3.2,)523 1938 y(w)n(e)j(ha)n(v)n(e)g
Fq(b)22 b Fr(=)h Fp(lc)l(and)9 b Fr(\()p Fq(a)p Fr(\))28
b(for)f(the)h(closest)f(pair)g(\()p Fq(a;)14 b(b)p Fr(\).)995
2059 y
 15156103 8184294 6972866 32364625 30917427 45323632 startTexFig
 995 2059 a
%%BeginDocument: kinetic-cands.ps
%AI5_FileFormat 1.2
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 0 0 552 728
%AI3_DocumentPreview: Header
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 0
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -54 876 1 641 566 18 0 1 2 40
%AI5_OpenViewLayers: 7
userdict /Adobe_level2_AI5 21 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	
	/gt38? mark {version cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
	level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
currentpacking true setpacking
userdict /Adobe_pattern_AI5 16 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					break
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	clip
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/patternashow
{
	3 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 4 1 roll
	} if
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		6 index 6 index 6 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	{
		2 npop (0) exch
		2 copy 0 exch put
		gsave
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} exch cshow
	8 npop
} def
/patternashowstroke
{
	4 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 5 1 roll
	} if
	4 1 roll
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		gsave
		false charpath
		currentpoint
		4 index setmatrix
		7 index 7 index 7 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	7 1 roll
	{
		2 npop (0) exch
		2 copy 0 exch put
		gsave
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} exch cshow
	9 npop
} def
currentdict readonly pop
end
setpacking
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 79 dict dup begin
put
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 82 dict dup begin
put
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			clip /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore clip newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore clip newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore clip newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/@
{
} def
/&
{
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c _d _x get _ ne def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop ashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop awidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	}
	{
		stop
	} ifelse
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef clip
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
currentdict readonly pop
end
setpacking
Adobe_level2_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Times-Italic Times-Italic
[/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding TrueType
%AI3_BeginPattern: (Confetti)
(Confetti) 4.85 3.617 76.85 75.617 [
(0 O 0 R 1 g 1 G) @
_ &
(0 O 0 R 0 g 0 G) @
(
800 Ar
0 J 0 j 0.3 w 4 M []0 d
%AI3_Note:
0 D
10.6 64.867 m
7.85 62.867 l
S
9.1 8.617 m
6.85 6.867 l
S
78.1 68.617 m
74.85 67.867 l
S
76.85 56.867 m
74.35 55.117 l
S
79.6 51.617 m
76.6 51.617 l
S
76.35 44.117 m
73.6 45.867 l
S
78.6 35.867 m
76.6 34.367 l
S
76.1 23.867 m
73.35 26.117 l
S
78.1 12.867 m
73.85 13.617 l
S
68.35 14.617 m
66.1 12.867 l
S
76.6 30.617 m
73.6 30.617 l
S
62.85 58.117 m
60.956 60.941 l
S
32.85 59.617 m
31.196 62.181 l
S
47.891 64.061 m
49.744 66.742 l
S
72.814 2.769 m
73.928 5.729 l
S
67.976 2.633 m
67.35 5.909 l
S
61.85 27.617 m
59.956 30.441 l
S
53.504 56.053 m
51.85 58.617 l
S
52.762 1.779 m
52.876 4.776 l
S
45.391 5.311 m
47.244 7.992 l
S
37.062 3.375 m
35.639 5.43 l
S
55.165 34.828 m
57.518 37.491 l
S
20.795 3.242 m
22.12 5.193 l
S
14.097 4.747 m
15.008 8.965 l
S
9.736 1.91 m
8.073 4.225 l
S
31.891 5.573 m
32.005 8.571 l
S
12.1 70.367 m
15.6 68.867 l
S
9.35 54.867 m
9.6 58.117 l
S
12.85 31.867 m
14.35 28.117 l
S
10.1 37.367 m
12.35 41.117 l
S
34.1 71.117 m
31.85 68.617 l
S
38.35 71.117 m
41.6 68.367 l
S
55.1 71.117 m
58.35 69.117 l
S
57.35 65.117 m
55.35 61.867 l
S
64.35 66.367 m
69.35 68.617 l
S
71.85 62.867 m
69.35 61.117 l
S
23.6 70.867 m
23.6 67.867 l
S
20.6 65.867 m
17.35 65.367 l
S
24.85 61.367 m
25.35 58.117 l
S
25.85 65.867 m
29.35 66.617 l
S
14.1 54.117 m
16.85 56.117 l
S
12.35 11.617 m
12.6 15.617 l
S
12.1 19.867 m
14.35 22.367 l
S
26.1 9.867 m
23.6 13.367 l
S
34.6 47.117 m
32.1 45.367 l
S
62.6 41.867 m
59.85 43.367 l
S
31.6 35.617 m
27.85 36.367 l
S
36.35 26.117 m
34.35 24.617 l
S
33.85 14.117 m
31.1 16.367 l
S
37.1 9.867 m
35.1 11.117 l
S
34.35 20.867 m
31.35 20.867 l
S
44.6 56.617 m
42.1 54.867 l
S
47.35 51.367 m
44.35 51.367 l
S
44.1 43.867 m
41.35 45.617 l
S
43.35 33.117 m
42.6 30.617 l
S
43.85 23.617 m
41.1 25.867 l
S
44.35 15.617 m
42.35 16.867 l
S
67.823 31.1 m
64.823 31.1 l
S
27.1 32.617 m
29.6 30.867 l
S
31.85 55.117 m
34.85 55.117 l
S
19.6 40.867 m
22.1 39.117 l
S
16.85 35.617 m
19.85 35.617 l
S
20.1 28.117 m
22.85 29.867 l
S
52.1 42.617 m
54.484 44.178 l
S
52.437 50.146 m
54.821 48.325 l
S
59.572 54.133 m
59.35 51.117 l
S
50.185 10.055 m
53.234 9.928 l
S
51.187 15.896 m
53.571 14.075 l
S
58.322 19.883 m
59.445 16.823 l
S
53.1 32.117 m
50.6 30.367 l
S
52.85 24.617 m
49.6 25.617 l
S
61.85 9.117 m
59.1 10.867 l
S
69.35 34.617 m
66.6 36.367 l
S
67.1 23.617 m
65.1 22.117 l
S
24.435 46.055 m
27.484 45.928 l
S
25.437 51.896 m
27.821 50.075 l
S
62.6 47.117 m
65.321 46.575 l
S
19.85 19.867 m
20.35 16.617 l
S
21.85 21.867 m
25.35 22.617 l
S
37.6 62.867 m
41.6 62.117 l
S
38.323 42.1 m
38.823 38.6 l
S
69.35 52.617 m
66.85 53.867 l
S
14.85 62.117 m
18.1 59.367 l
S
9.6 46.117 m
7.1 44.367 l
S
20.6 51.617 m
18.6 50.117 l
S
46.141 70.811 m
47.994 73.492 l
S
69.391 40.561 m
71.244 43.242 l
S
38.641 49.311 m
39.35 52.117 l
S
25.141 16.811 m
25.85 19.617 l
S
36.6 32.867 m
34.6 31.367 l
S
6.1 68.617 m
2.85 67.867 l
S
4.85 56.867 m
2.35 55.117 l
S
7.6 51.617 m
4.6 51.617 l
S
6.6 35.867 m
4.6 34.367 l
S
6.1 12.867 m
1.85 13.617 l
S
4.6 30.617 m
1.6 30.617 l
S
72.814 74.769 m
73.928 77.729 l
S
67.976 74.633 m
67.35 77.909 l
S
52.762 73.779 m
52.876 76.776 l
S
37.062 75.375 m
35.639 77.43 l
S
20.795 75.242 m
22.12 77.193 l
S
9.736 73.91 m
8.073 76.225 l
S
10.1 23.617 m
6.35 24.367 l
S
73.217 18.276 m
71.323 21.1 l
S
28.823 39.6 m
29.505 42.389 l
S
49.6 38.617 m
47.6 37.117 l
S
60.323 73.6 m
62.323 76.6 l
S
60.323 1.6 m
62.323 4.6 l
S
) &
] E
%AI3_EndPattern
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @
(
800 Ar
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
3 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Red & Yellow)
(Red & Yellow) 0 2 Bd
[
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
FFFFFEFEFDFDFDFCFCFBFBFBFAFAF9F9F9F8F8F7F7F7F6F6F5F5F5F4F4F3F3F3F2F2F1F1F1F0F0EF
EFEFEEEEEDEDEDECECEBEBEBEAEAE9E9E9E8E8E7E7E7E6E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DF
DFDFDEDEDDDDDDDCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D5D5D5D4D4D3D3D3D2D2D1D1D1D0D0CF
CFCFCECECDCDCDCCCCCBCBCBCACAC9C9C9C8C8C7C7C7C6C6C5C5C5C4C4C3C3C3C2C2C1C1C1C0C0BF
BFBFBEBEBDBDBDBCBCBBBBBBBABAB9B9B9B8B8B7B7B7B6B6B5B5B5B4B4B3B3B3B2B2B1B1B1B0B0AF
AFAFAEAEADADADACACABABABAAAAA9A9A9A8A8A7A7A7A6A6A5A5A5A4A4A3A3A3A2A2A1A1A1A0A09F
9F9F9E9E9D9D9D9C9C9B9B9B9A9A9999
>
0
1 %_Br
[
0 1 0.6 0 1 50 100 %_Bs
0 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Blue Radial)
(Yellow & Blue Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 2 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Blue Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
(Yellow Stripe) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
0 0 0 0 k
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
0 0 0 0 k
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
0 0 0 0 k
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
1 Ap
0 R
0 G
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
468.6992 493.2083 m
468.6992 688.2083 L
106.6992 688.2083 L
106.6992 493.2083 L
468.6992 493.2083 L
s
u
0 To
1 0 0 1 131.1667 570.4166 0 Tp
TP
0 Tr
0 O
0 g
/_Times-Italic 16 Tf
0 Ts
100 Tz
0 Tt
0 TA
%_ 0 XL
25.1999 0 Xb
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 0 2 2 3 Th
0 Tq
0 0 Tl
0 Tc
0 Tw
(p) Tx 
(\r) TX 
TO
q
278.9296 514.2825 m
278.9296 661.884 L
122.328 661.884 L
122.328 514.2825 L
278.9296 514.2825 L
h
W
n
0 Ap
0 O
(Confetti) 0 0 1 1 0 0 0 0 0 [0.6 0 0 0.6 -1545.4922 1897.9944] p
222.0347 531.3385 m
229.1692 535.4576 L
216.7413 542.6328 L
222.7299 546.0903 L
197.5411 560.633 L
226.1692 577.1614 L
221.5414 579.8332 L
233.3017 586.623 L
215.0538 597.1584 L
232.0117 606.949 L
216.8225 615.7185 L
146.3531 575.0331 L
222.0347 531.3385 L
f
1 Ap
0 g
198.3661 558.6533 m
199.3766 558.6533 200.1958 559.4725 200.1958 560.483 c
200.1958 561.4935 199.3766 562.3127 198.3661 562.3127 c
197.3556 562.3127 196.5365 561.4935 196.5365 560.483 c
196.5365 559.4725 197.3556 558.6533 198.3661 558.6533 c
f
208.6667 521.3333 m
209.6772 521.3333 210.4964 522.1525 210.4964 523.163 c
210.4964 524.1735 209.6772 524.9927 208.6667 524.9927 c
207.6562 524.9927 206.8371 524.1735 206.8371 523.163 c
206.8371 522.1525 207.6562 521.3333 208.6667 521.3333 c
f
217.9583 540.7292 m
218.9688 540.7292 219.788 541.5484 219.788 542.5589 c
219.788 543.5693 218.9688 544.3885 217.9583 544.3885 c
216.9478 544.3885 216.1287 543.5693 216.1287 542.5589 c
216.1287 541.5484 216.9478 540.7292 217.9583 540.7292 c
f
222.3333 577.6666 m
223.3438 577.6666 224.163 578.4858 224.163 579.4963 c
224.163 580.5068 223.3438 581.326 222.3333 581.326 c
221.3228 581.326 220.5037 580.5068 220.5037 579.4963 c
220.5037 578.4858 221.3228 577.6666 222.3333 577.6666 c
f
216.2083 594.7916 m
217.2188 594.7916 218.038 595.6108 218.038 596.6213 c
218.038 597.6318 217.2188 598.451 216.2083 598.451 c
215.1978 598.451 214.3787 597.6318 214.3787 596.6213 c
214.3787 595.6108 215.1978 594.7916 216.2083 594.7916 c
f
202.8958 656.1666 m
203.9063 656.1666 204.7255 656.9858 204.7255 657.9963 c
204.7255 659.0068 203.9063 659.826 202.8958 659.826 c
201.8853 659.826 201.0662 659.0068 201.0662 657.9963 c
201.0662 656.9858 201.8853 656.1666 202.8958 656.1666 c
f
146.3332 571.7554 m
147.849 571.7554 149.0778 572.9842 149.0778 574.5 c
149.0778 576.0157 147.849 577.2445 146.3332 577.2445 c
144.8175 577.2445 143.5888 576.0157 143.5888 574.5 c
143.5888 572.9842 144.8175 571.7554 146.3332 571.7554 c
f
186.2917 631.7291 m
187.3022 631.7291 188.1214 632.5483 188.1214 633.5588 c
188.1214 634.5693 187.3022 635.3885 186.2917 635.3885 c
185.2812 635.3885 184.4621 634.5693 184.4621 633.5588 c
184.4621 632.5483 185.2812 631.7291 186.2917 631.7291 c
f
0 Ap
0 R
0 G
3 w
217.6475 615.5685 m
147.1781 574.8831 L
222.8597 531.1885 L
S
1 w
217.6475 615.5685 m
232.8367 606.799 L
S
217.6475 615.5685 m
186.141 633.7587 L
215.5007 650.7095 L
S
215.5007 650.7095 m
202.6412 658.134 L
337.7429 736.1348 L
S
215.5007 650.7095 m
247.0072 632.5193 L
S
262.1965 623.7498 m
247.0072 632.5193 L
S
232.8367 606.799 m
262.1965 623.7498 L
S
232.8367 606.799 m
215.8788 597.0084 L
234.1267 586.473 L
S
262.1965 623.7498 m
350.9805 675.0092 L
S
234.1267 586.473 m
222.3664 579.6832 L
226.9942 577.0114 L
S
251.0846 596.2636 m
234.1267 586.473 L
S
252.1829 562.4686 m
226.9942 577.0114 L
S
280.4444 613.2144 m
251.0846 596.2636 L
S
264.6108 555.2934 m
252.1829 562.4686 L
S
264.6108 555.2934 m
357.4681 501.6824 L
S
226.9942 577.0114 m
198.3661 560.483 L
223.5549 545.9403 L
S
229.9942 535.3076 m
352.668 464.482 L
S
229.9942 535.3076 m
217.5663 542.4828 L
223.5549 545.9403 L
S
223.5549 545.9403 m
252.1829 562.4686 L
S
222.8597 531.1885 m
229.9942 535.3076 L
S
222.8597 531.1885 m
209.1662 523.2826 L
344.268 445.2818 L
S
Q
0 A
*u
0 O
0 g
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
371.6076 588.4511 m
371.6076 582.0351 l
371.0184 580.6865 370.5848 579.0468 370.307 577.1131 c
369.8231 573.6551 369.5812 568.5574 369.5812 561.82 C
369.5669 534.7522 l
369.5669 525.2599 369.2795 518.4785 368.7046 514.4053 c
368.1298 510.3348 367.3537 508.2968 366.3765 508.2968 C
366.3765 512.2519 l
366.9801 513.7186 367.4184 515.4765 367.6914 517.5254 c
368.18 521.1592 368.4244 526.6085 368.4244 533.8733 C
368.4387 558.6559 l
368.4387 566.6238 368.6709 572.7186 369.1357 576.9373 c
369.6003 581.1561 370.283 583.7325 371.1836 584.6718 C
371.1836 585.1113 l
370.144 587.6299 369.471 590.1485 369.1645 592.6699 c
368.6806 596.6525 368.4387 603.5685 368.4387 613.4123 C
368.4387 634.9458 l
368.4387 643.3229 368.1536 649.5357 367.5837 653.5787 c
367.2626 655.8639 366.8601 657.3581 366.3765 658.0612 C
366.3765 662.0163 l
367.6074 662.0163 368.447 659.5993 368.895 654.7653 c
369.3428 649.9313 369.5669 643.441 369.5669 635.2973 C
369.5812 611.1271 l
369.5812 602.6291 369.8327 596.5372 370.3357 592.8457 c
370.6232 590.6759 371.0471 589.212 371.6076 588.4511 c
f
*U
*u
293.3333 578.4398 m
293.3333 574.6472 l
292.7441 573.8501 292.3105 572.8808 292.0327 571.7378 c
291.5488 569.6938 291.307 566.6805 291.307 562.6979 C
291.2926 546.6978 l
291.2926 541.0869 291.0052 537.0783 290.4303 534.6706 c
289.8555 532.2645 289.0794 531.0599 288.1022 531.0599 C
288.1022 533.3977 l
288.7058 534.2647 289.1441 535.3038 289.4172 536.515 c
289.9058 538.6629 290.1501 541.884 290.1501 546.1783 C
290.1645 560.8276 l
290.1645 565.5375 290.3967 569.1402 290.8615 571.6339 c
291.3261 574.1277 292.0087 575.6506 292.9094 576.2058 C
292.9094 576.4656 l
291.8697 577.9544 291.1967 579.4432 290.8902 580.9336 c
290.4063 583.2877 290.1645 587.3759 290.1645 593.1946 C
290.1645 605.9232 l
290.1645 610.8751 289.8793 614.5475 289.3094 616.9374 c
288.9883 618.2882 288.5859 619.1714 288.1022 619.587 C
288.1022 621.9249 l
289.3332 621.9249 290.1728 620.4962 290.6208 617.6388 c
291.0685 614.7813 291.2926 610.9449 291.2926 606.1311 C
291.307 591.8438 l
291.307 586.8206 291.5585 583.2195 292.0615 581.0375 c
292.3489 579.7549 292.7729 578.8896 293.3333 578.4398 c
f
*U
0 To
1 0 0 1 382 580 0 Tp
TP
0 Tr
/_Times-Italic 16 Tf
0 Ts
100 Tz
0 Tt
0 TA
%_ 0 XL
25.1999 0 Xb
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 0 2 2 3 Th
0 Tq
0 0 Tl
0 Tc
0 Tw
(Maxima\(p\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 132.3333 519.3333 0 Tp
TP
0 Tr
(lcand\(p\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 301.3333 570.3333 0 Tp
TP
0 Tr
(Cands\(p\)) Tx 
(\r) TX 
TO
u
0 R
0 G
153.4167 531.9166 m
160.0833 545.9166 174.75 557.9166 188.0833 559.9166 c
S
0 O
0 g
194.0518 560.8119 m
191.3999 559.3488 188.182 557.0477 186.3049 554.8416 c
187.3004 559.7992 l
184.8942 564.246 l
187.336 562.6879 191.0873 561.4323 194.0518 560.8119 c
f
U
U
LB
%AI5_EndLayer--
gsave annotatepage grestore showpage
Adobe_Illustrator_AI5 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EndDocument

 endTexFig
 523 3278 a Fr(Figure)27 b(5:)36 b(The)27 b(sets)g(of)g(p)r(oin)n(ts)g
Fp(Maxima)8 b Fr(\()p Fq(p)p Fr(\))27 b(and)g Fp(Cands)8
b Fr(\()p Fq(p)p Fr(\),)28 b(and)f(the)g(leftmost)h(candi-)523
3378 y(date)g Fp(lc)l(and)9 b Fr(\()p Fq(p)p Fr(\).)648
3577 y(The)22 b(plane)h(sw)n(eep)f(algorithm)g(p)r(erforms)g(the)h
(follo)n(wing)f(steps)h(three)f(times,)i(once)f(on)523
3677 y(the)32 b(un)n(transformed)f(p)r(oin)n(ts)g(of)h
Fq(S)5 b Fr(,)32 b(once)f(on)h Fq(S)k Fr(rotated)31 b(around)g(the)h
(origin)e(b)n(y)h(+60)3327 3647 y Fg(\016)3364 3677 y
Fr(,)523 3776 y(and)26 b(once)f(on)g Fq(S)31 b Fr(rotated)25
b(b)n(y)h Fi(\000)p Fr(60)1617 3746 y Fg(\016)1653 3776
y Fr(.)37 b(Eac)n(h)24 b(of)i(these)g(rotations)e(brings)h(one)h(of)f
(the)i(three)523 3876 y(families)32 b(of)f(righ)n(t-extending)f(w)n
(edges)h(in)n(to)g(the)h(cen)n(tral)f(p)r(osition,)h(b)r(ounded)g(b)n
(y)g Fi(\006)p Fr(30)3351 3846 y Fg(\016)523 3976 y Fr(lines.)625
4177 y(1.)41 b(Initialize)j(a)h Fq(y)s Fr(-ordered)d(list)j(of)g(p)r
(oin)n(ts)g Fp(Maxima)52 b Fr(to)45 b Fi(;)p Fr(.)88
b(\()p Fp(Maxima)52 b Fr(con)n(tains)731 4277 y Fp(Maxima)7
b Fr(\()p Fq(p)p Fr(\))28 b(at)g(the)g(top)f(of)h(eac)n(h)f(iteration)f
(of)i(the)g(lo)r(op)f(b)r(elo)n(w.\))625 4376 y(2.)41
b(F)-7 b(or)27 b(eac)n(h)f(p)r(oin)n(t)i Fq(p)23 b Fi(2)g
Fq(S)33 b Fr(from)27 b(righ)n(t)g(to)g(left,)766 4509
y(\(a\))41 b(Set)28 b Fp(Cands)8 b Fr(\()p Fq(p)p Fr(\))23
b(=)g Fp(Maxima)j Fi(\\)19 b Fp(Dom)6 b Fr(\()p Fq(p)p
Fr(\).)761 4625 y(\(b\))42 b(Set)28 b Fp(lc)l(and)10
b Fr(\()p Fq(p)p Fr(\))28 b(to)f(b)r(e)h(the)g(leftmost)g(elemen)n(t)g
(of)f Fp(Cands)8 b Fr(\()p Fq(p)p Fr(\).)770 4742 y(\(c\))42
b(Delete)28 b(the)g(p)r(oin)n(ts)g(of)f Fp(Cands)8 b
Fr(\()p Fq(p)p Fr(\))28 b(from)f Fp(Maxima)8 b Fr(.)761
4858 y(\(d\))42 b(Insert)27 b Fq(p)h Fr(in)n(to)f Fp(Maxima)35
b Fr(at)28 b(its)g(prop)r(er)e(place)i(in)f Fq(y)s Fr(-order.)1914
5147 y(18)p eop
%%Page: 19 19
19 18 bop 648 614 a Fr(A)n(t)35 b(the)g(end)g(of)g(this)g(pro)r
(cedure,)g(rep)r(eated)g(for)f(all)g(three)h(directions,)h(one)e(of)h
(the)523 714 y(three)27 b(sets)h(of)f(\()p Fq(p;)14 b
Fp(lc)l(and)c Fr(\()p Fq(p)p Fr(\)\))28 b(pairs)f(it)h(pro)r(duces)e
(con)n(tains)h(the)h(closest)f(pair)g(\()p Fq(a;)14 b(b)p
Fr(\).)648 849 y(It)37 b(is)h(clear)e(that)i(the)f(plane)h(sw)n(eep)e
(algorithm)h(can)g(b)r(e)h(implemen)n(ted)g(to)f(run)g(in)523
949 y Fq(O)r Fr(\()p Fq(n)14 b Fr(log)h Fq(n)p Fr(\))42
b(time.)79 b(Sorting)41 b(the)h(p)r(oin)n(ts)g(of)g Fq(S)k
Fr(in)c(preparation)e(for)i(sw)n(eeping)e(tak)n(es)523
1048 y Fq(O)r Fr(\()p Fq(n)14 b Fr(log)h Fq(n)p Fr(\))38
b(time.)67 b(W)-7 b(e)38 b(store)f Fp(Maxima)45 b Fr(in)38
b(a)g(balanced)f(binary)g(tree)g(structure)g(that)523
1148 y(supp)r(orts)31 b(logarithmic-time)f(searc)n(hes,)h(insertions,)g
(deletions,)h(splits,)h(and)e(joins)g([17)o(].)523 1248
y(Computing)40 b Fp(Cands)8 b Fr(\()p Fq(p)p Fr(\))41
b(requires)e(t)n(w)n(o)g Fq(O)r Fr(\(log)15 b Fq(n)p
Fr(\))40 b(time)h(searc)n(hes)e(on)g Fp(Maxima)8 b Fr(,)44
b(since)523 1347 y Fp(Cands)8 b Fr(\()p Fq(p)p Fr(\))30
b(is)f(a)g(consecutiv)n(e)f(subsequence)h(of)g Fp(Maxima)8
b Fr(.)42 b(Finding)30 b Fp(lc)l(and)9 b Fr(\()p Fq(p)p
Fr(\))30 b(tak)n(es)e(ad-)523 1447 y(ditional)g(time)g
Fi(j)p Fp(Cands)8 b Fr(\()p Fq(p)p Fr(\))p Fi(j)p Fr(,)29
b(but)f(since)g(those)f(p)r(oin)n(ts)h(are)f(immediately)h(remo)n(v)n
(ed)f(from)523 1546 y Fp(Maxima)8 b Fr(,)34 b(the)g(total)f(time)h(sp)r
(en)n(t)g(\014nding)f(the)h(leftmost)g(p)r(oin)n(ts)f(of)g(all)g(the)h
(candidate)523 1646 y(sets)24 b(is)g(only)f Fq(O)r Fr(\()p
Fq(n)p Fr(\).)37 b(Splitting)25 b Fp(Cands)7 b Fr(\()p
Fq(p)p Fr(\))25 b(out)f(of)g Fp(Maxima)31 b Fr(and)24
b(inserting)g Fq(p)f Fr(in)i(its)f(place)523 1746 y(tak)n(es)j
Fq(O)r Fr(\(log)15 b Fq(n)p Fr(\))27 b(p)r(er)h(p)r(oin)n(t)g
Fq(p)p Fr(.)36 b(Th)n(us)28 b(the)g(total)f(running)g(time)h(is)g
Fq(O)r Fr(\()p Fq(n)14 b Fr(log)h Fq(n)p Fr(\).)523 2010
y Fk(3.2)112 b(Kinetization)523 2199 y Fr(T)-7 b(o)22
b(mak)n(e)g(the)i(plane)e(sw)n(eep)g(algorithm)g(kinetic,)i(w)n(e)e
(need)h(to)g(transform)e(it)j(in)n(to)e(a)h(static)523
2299 y(data)h(structure)g(that)h(represen)n(ts)e(the)i(action)g(of)f
(the)h(plane)g(sw)n(eep)f(algorithm.)34 b(W)-7 b(e)25
b(also)523 2398 y(need)h(a)f(set)h(of)f(certi\014cates)g(to)h(sho)n(w)f
(that)g(the)i(data)e(structure)g(is)g(v)-5 b(alid)26
b(for)f(the)h(curren)n(t)523 2498 y(set)i(of)f(p)r(oin)n(ts.)648
2633 y(W)-7 b(e)24 b(de\014ne)g(the)g Fp(maxima)j(diagr)l(am)f
Fr(to)d(b)r(e)i(the)f(union,)h(o)n(v)n(er)d(all)h(p)r(oin)n(ts)h
Fq(p)p Fr(,)h(of)f(the)g(part)523 2733 y(of)30 b(the)g(b)r(oundary)g
(of)f Fp(Dom)7 b Fr(\()p Fq(p)p Fr(\))30 b(that)h(lies)e(outside)h
Fi([)2226 2748 y Fl(q)r Fg(2)p Fb(Maxima)5 b Fo(\()p
Fl(p)p Fo(\))2638 2733 y Fp(Dom)i Fr(\()p Fq(q)s Fr(\).)44
b(Eac)n(h)29 b(p)r(oin)n(t)523 2832 y Fq(p)e Fr(of)g
Fq(S)32 b Fr(is)27 b(the)h(left)f(endp)r(oin)n(t)h(of)f(t)n(w)n(o)f
(segmen)n(ts)h(in)g(the)h(maxima)e(diagram)g(that)h(extend)523
2932 y(from)33 b Fq(p)g Fr(to)g(the)g(b)r(oundaries)f(of)h
Fp(Dom)6 b Fr(\()p Fq(q)s Fr(\))34 b(and)f Fp(Dom)6 b
Fr(\()p Fq(q)2318 2902 y Fg(0)2342 2932 y Fr(\),)35 b(for)d(t)n(w)n(o)h
(p)r(oin)n(ts)g Fq(q)j Fr(and)d Fq(q)3262 2902 y Fg(0)3318
2932 y Fr(in)523 3032 y Fp(Maxima)8 b Fr(\()p Fq(p)p
Fr(\).)37 b(W)-7 b(e)28 b(sa)n(y)e(that)i Fq(q)j Fr(and)c
Fq(q)1722 3001 y Fg(0)1773 3032 y Fr(are)g(the)h Fp(tar)l(gets)f
Fr(of)h Fq(p)f Fr(in)h(the)g(maxima)f(diagram.)648 3167
y(W)-7 b(e)26 b(use)g(as)f(certi\014cates)h(three)g(sorted)f(orders:)34
b(the)27 b(pro)5 b(jections)25 b(of)h(the)g(p)r(oin)n(ts)g(in)h
Fq(S)523 3266 y Fr(on)c(the)g Fq(x)p Fr(-axis)f(and)h(on)g(the)g(lines)
g(that)g(mak)n(e)g(an)f(angle)g(of)h Fi(\006)p Fr(60)2551
3236 y Fg(\016)2611 3266 y Fr(with)h(the)f Fq(x)p Fr(-axis.)35
b(Eac)n(h)523 3366 y(p)r(oin)n(t)25 b(b)r(elongs)g(to)g(up)g(to)g(six)g
(certi\014cates,)g(in)n(v)n(olving)e(its)i(t)n(w)n(o)g(neigh)n(b)r(ors)
e(in)j(eac)n(h)e(of)h(the)523 3466 y(three)g(sorted)f(orders.)34
b(W)-7 b(e)25 b(also)f(use)h(certi\014cates)f(for)g(a)h(kinetic)g
(tournamen)n(t,)g(describ)r(ed)523 3565 y(b)r(elo)n(w.)523
3766 y Fh(Lemma)30 b(3.3)40 b Fp(If)e(two)f(c)l(on\014gur)l(ations)f
(of)i Fq(S)k Fp(have)c(al)t(l)g(thr)l(e)l(e)f(or)l(ders)h(e)l
(quivalent,)h(then)523 3865 y(for)31 b(e)l(ach)g Fq(p)p
Fp(,)g(Maxima)7 b Fr(\()p Fq(p)p Fr(\))p Fp(,)31 b(Cands)8
b Fr(\()p Fq(p)p Fr(\))30 b Fp(and)h(lc)l(and)9 b Fr(\()p
Fq(p)p Fr(\))31 b Fp(ar)l(e)f(the)g(same)h(in)f(the)g(two)h(c)l
(on\014g-)523 3965 y(ur)l(ations.)523 4165 y Fh(Pro)s(of:)62
b Fr(By)23 b(induction)h(on)g(the)g(p)r(oin)n(ts)f(of)h
Fq(S)5 b Fr(,)24 b(from)g(righ)n(t)f(to)g(left)i(in)f
Fi(\036)f Fr(order.)34 b(F)-7 b(or)23 b(eac)n(h)523 4265
y(p)r(oin)n(t)i Fq(p)g Fr(in)g(turn,)g(w)n(e)g(assume)f(that)h
Fp(Maxima)7 b Fr(\()p Fq(p)p Fr(\))26 b(is)e(the)h(same)g(for)f(b)r
(oth)h(con\014gurations,)523 4365 y(with)f(the)g(same)g
Fq(y)s Fr(-order.)33 b(W)-7 b(e)24 b(pro)n(v)n(e)f(that)h
Fp(Cands)7 b Fr(\()p Fq(p)p Fr(\))25 b(and)e Fp(lc)l(and)9
b Fr(\()p Fq(p)p Fr(\))25 b(are)d(the)j(same,)f(and)523
4464 y(\014nally)h(sho)n(w)g(that)h Fp(Maxima)8 b Fr(\()p
Fq(p)1526 4434 y Fg(0)1549 4464 y Fr(\))26 b(is)f(the)h(same)f(for)g
Fq(p)2202 4434 y Fg(0)2251 4464 y Fr(the)h(predecessor)e(of)h
Fq(p)h Fr(in)f Fi(\036)h Fr(order.)648 4599 y(P)n(oin)n(t)35
b Fq(p)i Fr(has)f(the)h(same)g(targets)e(in)i(eac)n(h)f(v)n(ersion)f
(of)i Fp(Maxima)8 b Fr(\()p Fq(p)p Fr(\),)39 b(since)e
Fq(p)f Fr(is)h(in)523 4699 y(the)24 b(same)f Fi(\006)p
Fr(60)1015 4669 y Fg(\016)1052 4699 y Fr(-orders)f(with)i(resp)r(ect)f
(to)h Fp(Maxima)7 b Fr(\()p Fq(p)p Fr(\))24 b(in)g(b)r(oth)h
(con\014gurations.)33 b(Hence)523 4799 y Fp(Cands)8 b
Fr(\()p Fq(p)p Fr(\))33 b(is)f(the)h(same)f(in)h(the)g(t)n(w)n(o)f
(con\014gurations,)g(and)g(b)r(ecause)g(the)h Fq(x)p
Fr(-orders)e(are)523 4898 y(the)41 b(same,)h Fp(lc)l(and)10
b Fr(\()p Fq(p)p Fr(\))40 b(is)g(also)f(the)i(same.)74
b(The)40 b(set)g Fp(Maxima)8 b Fr(\()p Fq(p)2673 4868
y Fg(0)2696 4898 y Fr(\))41 b(is)f(obtained)g(from)1914
5147 y(19)p eop
%%Page: 20 20
20 19 bop 523 614 a Fp(Maxima)8 b Fr(\()p Fq(p)p Fr(\))34
b(b)n(y)g(remo)n(ving)e(the)j(p)r(oin)n(ts)f(of)g Fp(Cands)7
b Fr(\()p Fq(p)p Fr(\),)36 b(then)f(inserting)e Fq(p)h
Fr(b)r(et)n(w)n(een)g(its)523 714 y(t)n(w)n(o)27 b(targets;)f(hence)i
Fp(Maxima)8 b Fr(\()p Fq(p)1583 684 y Fg(0)1606 714 y
Fr(\))28 b(is)f(the)h(same)f(in)h(the)g(t)n(w)n(o)f(con\014gurations.)
295 b Ff(2)648 871 y Fr(The)29 b(maxima)h(diagram)e(can)h(undergo)g(a)g
(linear)g(n)n(um)n(b)r(er)h(of)f(c)n(hanges)g(when)h(a)f(pair)523
971 y(of)h(p)r(oin)n(ts)h(sw)n(aps)e(in)i(one)e(of)i(the)g(three)f
(linear)f(orders.)44 b(Ho)n(w)n(ev)n(er,)29 b(the)i(c)n(hanges)e(to)h
(the)523 1070 y(maxima)c(diagram)g(can)g(b)r(e)i(represen)n(ted)d(in)i
(an)g(implicit)h(data)e(structure)h(that)g(requires)523
1170 y(only)j Fq(O)r Fr(\(log)15 b Fq(n)p Fr(\))30 b(up)r(dates)g(p)r
(er)h(sw)n(ap.)43 b(F)-7 b(or)30 b(this)g(purp)r(ose,)g(w)n(e)g(k)n
(eep)g(t)n(w)n(o)f(auxiliary)g(data)523 1270 y(structures)h(for)g(eac)n
(h)g Fq(p)e Fi(2)g Fq(S)5 b Fr(,)32 b(called)e Fp(Cands)8
b Fr(\()p Fq(p)p Fr(\))31 b(and)f Fp(Par)l(ents)7 b Fr(\()p
Fq(p)p Fr(\),)32 b(that)f(represen)n(t)e(t)n(w)n(o)523
1369 y(separate)d(one-to-man)n(y)g(relations.)625 1559
y(1.)41 b Fp(Cands)7 b Fr(\()p Fq(p)p Fr(\))34 b(con)n(tains)e(the)h
(in)n(tersection)g(of)g Fp(Maxima)7 b Fr(\()p Fq(p)p
Fr(\))34 b(with)g Fp(Dom)6 b Fr(\()p Fq(p)p Fr(\),)35
b(as)d(a)h(se-)731 1659 y(quence)28 b(of)h(p)r(oin)n(ts)g(ordered)f(b)n
(y)h Fq(y)s Fr(-co)r(ordinate.)39 b(\(This)29 b(order)f(is)h(the)g
(same)g(as)f(the)731 1758 y(orders)j(induced)j(along)d(the)j
Fi(\006)p Fr(60)1825 1728 y Fg(\016)1895 1758 y Fr(directions.\))53
b(This)33 b(sequence)f(is)h(stored)f(in)i(a)731 1858
y(balanced)26 b(binary)f(tree)i(and)f(supp)r(orts)g(the)h(usual)f
(searc)n(hing)f(and)i(up)r(date)g(op)r(era-)731 1958
y(tions.)36 b(In)26 b(addition,)h(eac)n(h)e(no)r(de)i(of)f(the)h(tree)f
(has)f(a)h(p)r(oin)n(ter)g(to)g(its)h(paren)n(t)e(in)i(the)731
2057 y(tree,)k(and)f(the)h(ro)r(ot)f(of)h(the)g(tree)f(for)g
Fp(Cands)8 b Fr(\()p Fq(p)p Fr(\))31 b(p)r(oin)n(ts)g(to)f
Fq(p)p Fr(.)46 b(Th)n(us)30 b(eac)n(h)g(p)r(oin)n(t)731
2157 y(of)e Fq(q)g Fi(2)d Fq(S)33 b Fr(can)28 b(\014nd)h(the)g(p)r(oin)
n(t)g Fq(p)24 b Fi(2)h Fq(S)33 b Fr(whose)28 b(candidate)g(it)h(is,)g
Fq(q)e Fi(2)e Fp(Cands)8 b Fr(\()p Fq(p)p Fr(\),)29 b(in)731
2257 y Fq(O)r Fr(\(log)15 b Fq(n)p Fr(\))31 b(time.)50
b(Eac)n(h)30 b(no)r(de)i(in)f(a)h Fp(Cands)7 b Fr(\(\))33
b(tree)e(also)f(k)n(eeps)h(trac)n(k)g(of)g(the)h(left-)731
2356 y(most)23 b(\(in)i Fq(x)p Fr(-order\))e(p)r(oin)n(t)h(in)g(its)g
(subtree,)g(and)g(so)f(the)h(ro)r(ot)f(of)h Fp(Cands)8
b Fr(\()p Fq(p)p Fr(\))24 b(records)731 2456 y Fp(lc)l(and)9
b Fr(\()p Fq(p)p Fr(\).)39 b(The)29 b(paren)n(t)e(p)r(oin)n(ters)h(can)
g(b)r(e)h(main)n(tained)f(as)f(part)h(of)h(the)f(standard)731
2555 y(tree)k(up)r(date)h(op)r(erations,)g(within)g(the)g(same)f
(asymptotic)g(time)h(b)r(ound,)i(as)d(can)731 2655 y(the)24
b(\\leftmost")f(\014elds.)35 b(As)24 b(part)f(of)g(our)g(algorithm,)g
(w)n(e)h(will)f(mak)n(e)g(sure)g(that)h(the)731 2755
y(\\leftmost")k(\014elds)g(are)g(main)n(tained)g(correctly)g(whenev)n
(er)f(the)i Fq(x)p Fr(-order)f(of)g(p)r(oin)n(ts)731
2854 y(c)n(hanges.)625 3015 y(2.)41 b Fp(Par)l(ents)6
b Fr(\()p Fq(p)p Fr(\))35 b(records)d(all)i(the)h(p)r(oin)n(ts)f(for)g
(whic)n(h)g Fq(p)g Fr(is)g(a)g(target)f(in)h(the)h(maxima)731
3114 y(diagram.)k Fp(Par)l(ents)7 b Fr(\()p Fq(p)p Fr(\))30
b(is)f(an)f(ordered)g(sequence)h(of)g(\(the)g(p)r(oin)n(ts)g(corresp)r
(onding)731 3214 y(to\))e(the)h(edges)e(that)i(hit)g
Fp(Dom)6 b Fr(\()p Fq(p)p Fr(\))28 b(from)f(the)h(left)g(in)g(the)f
(maxima)g(diagram.)35 b(The)731 3314 y(sequence)23 b(is)h(ordered)e
(according)h(to)g(the)i(order)d(in)j(whic)n(h)e(the)i(edges)e(hit)i
Fp(Dom)6 b Fr(\()p Fq(p)p Fr(\).)731 3413 y(This)26 b(order)f(need)h
(not)h(corresp)r(ond)d(to)j(the)f Fq(y)s Fr(-order)f(of)h(the)h(p)r
(oin)n(ts;)f(ho)n(w)n(ev)n(er,)f(the)731 3513 y(sequence)36
b(can)h(b)r(e)h(divided)g(in)n(to)f(the)h(p)r(oin)n(ts)f(ab)r(o)n(v)n
(e)f Fq(p)p Fr(,)k(denoted)d Fp(Par)l(ents)3218 3525
y Fl(a)3258 3513 y Fr(\()p Fq(p)p Fr(\),)731 3612 y(and)d(the)h(p)r
(oin)n(ts)g(b)r(elo)n(w)f Fq(p)p Fr(,)j(denoted)e Fp(Par)l(ents)2253
3624 y Fl(b)2287 3612 y Fr(\()p Fq(p)p Fr(\).)59 b Fp(Dom)6
b Fr(\()p Fq(p)p Fr(\))35 b(is)g(the)g(target)f(for)731
3712 y(the)40 b(lo)n(w)n(er)f(edge)g(extending)h(from)g(all)g(elemen)n
(ts)g(of)g Fp(Par)l(ents)2789 3724 y Fl(a)2829 3712 y
Fr(\()p Fq(p)p Fr(\),)k(and)c(is)g(the)731 3812 y(target)32
b(for)h(the)h(upp)r(er)g(edge)f(of)g(all)g(elemen)n(ts)h(of)f
Fp(Par)l(ents)2652 3824 y Fl(b)2685 3812 y Fr(\()p Fq(p)p
Fr(\).)55 b(In)34 b(eac)n(h)f(of)g(the)731 3911 y(t)n(w)n(o)j
(subsequences)g Fp(Par)l(ents)1691 3923 y Fl(a)1731 3911
y Fr(\()p Fq(p)p Fr(\))h(and)g Fp(Par)l(ents)2328 3923
y Fl(b)2361 3911 y Fr(\()p Fq(p)p Fr(\),)j(the)d(order)f(of)h(the)g(p)r
(oin)n(ts)731 4011 y(\(the)29 b(order)e(in)i(whic)n(h)f(their)h(edges)e
(hit)i Fp(Dom)7 b Fr(\()p Fq(p)p Fr(\)\))29 b(is)f(the)h(same)f(as)g
(their)h Fq(x)p Fr(-order.)731 4111 y(The)h(sequence)g
Fp(Par)l(ents)7 b Fr(\()p Fq(p)p Fr(\))30 b(is)h(stored)e(in)i(a)f
(balanced)g(binary)f(tree)h(with)h(paren)n(t)731 4210
y(p)r(oin)n(ters,)39 b(so)e(for)g(eac)n(h)f(of)i(the)f(t)n(w)n(o)g
(edges)g(extending)g(from)g(a)g(p)r(oin)n(t)h Fq(q)i
Fr(in)e(the)731 4310 y(maxima)e(diagram,)h(w)n(e)g(can)f(\014nd)h(the)g
(p)r(oin)n(t)g Fq(p)g Fr(for)f(whic)n(h)g Fq(q)42 b Fi(2)c
Fp(Par)l(ents)7 b Fr(\()p Fq(p)p Fr(\))37 b(in)731 4409
y(logarithmic)26 b(time.)648 4599 y(These)21 b(are)g(the)i(only)e(data)
h(structures)f(needed)h(for)f(the)i(kinetization.)34
b(In)23 b(particular,)523 4699 y(w)n(e)d(don't)h(use)g(the)g
Fp(Maxima)29 b Fr(data)20 b(structure)g(describ)r(ed)h(in)g(the)g
(static)g(case.)34 b(The)20 b(follo)n(w-)523 4799 y(ing)k(algorithmic)f
(sk)n(etc)n(h)g(sho)n(ws)g(ho)n(w)g(to)h(up)r(date)h(all)e(the)i
(a\013ected)f Fp(Cands)7 b Fr(\(\),)26 b Fp(Par)l(ents)7
b Fr(\(\),)523 4898 y(and)33 b Fp(lc)l(and)9 b Fr(\(\))34
b(\014elds)f(when)h(t)n(w)n(o)e(p)r(oin)n(ts)h Fq(p)g
Fr(and)g Fq(q)j Fr(exc)n(hange)c(p)r(ositions)h(in)g(the)h
Fq(x)p Fr(-order)1914 5147 y(20)p eop
%%Page: 21 21
21 20 bop 523 614 a Fr(of)32 b Fq(S)5 b Fr(.)50 b(Without)33
b(loss)e(of)h(generalit)n(y)-7 b(,)32 b(assume)f(that)h
Fq(p)f Fi(\036)f Fq(q)35 b Fr(\()p Fq(p)d Fr(is)g(left)h(of)f
Fq(q)s Fr(\))g(b)r(efore)g(the)523 714 y(exc)n(hange.)57
b(F)-7 b(urthermore,)36 b(assume)e(that)h Fq(p)g Fr(is)g(b)r(elo)n(w)f
Fq(q)k Fr(at)d(the)g(instan)n(t)g(of)g(exc)n(hange)523
814 y(\(similar)27 b(pseudo-co)r(de)g(applies)g(if)h
Fq(p)g Fr(is)f(ab)r(o)n(v)n(e)f Fq(q)s Fr(\).)38 b(See)27
b(Figure)g(6.)625 1015 y(1.)41 b(If)28 b Fq(p)22 b Fi(2)i
Fp(Par)l(ents)7 b Fr(\()p Fq(q)s Fr(\),)28 b(sp)r(eci\014cally)f(in)h
Fp(Par)l(ents)2195 1027 y Fl(b)2228 1015 y Fr(\()p Fq(q)s
Fr(\),)g(then)766 1148 y(\(a\))41 b(Split)24 b(o\013)f(the)h(p)r
(ortion)e(of)h Fp(Cands)8 b Fr(\()p Fq(q)s Fr(\))24 b(inside)f
Fp(Dom)7 b Fr(\()p Fq(p)p Fr(\))23 b(and)g(join)g(it)h(to)f(the)g(top)
913 1248 y(of)28 b Fp(Cands)8 b Fr(\()p Fq(p)p Fr(\).)761
1364 y(\(b\))42 b(Let)32 b Fq(u)f Fr(b)r(e)h(the)g(p)r(oin)n(t)f(suc)n
(h)h(that)f Fq(q)i Fi(2)d Fp(Par)l(ents)2442 1376 y Fl(a)2482
1364 y Fr(\()p Fq(u)p Fr(\).)48 b(Delete)32 b(p)r(oin)n(t)g
Fq(q)j Fr(from)913 1463 y Fp(Par)l(ents)1196 1475 y Fl(a)1236
1463 y Fr(\()p Fq(u)p Fr(\))28 b(and)f(insert)h(it)g(in)n(to)f
Fp(Par)l(ents)2303 1475 y Fl(a)2343 1463 y Fr(\()p Fq(p)p
Fr(\).)770 1580 y(\(c\))42 b(Let)28 b Fq(v)i Fr(b)r(e)e(the)g(new)f(b)r
(ottom)h(p)r(oin)n(t)f(of)h Fp(Cands)7 b Fr(\()p Fq(q)s
Fr(\),)28 b(if)g(an)n(y)-7 b(,)27 b(or)f(else)h(the)h(p)r(oin)n(t)913
1679 y(suc)n(h)k(that)g Fq(q)h Fi(2)e Fp(Par)l(ents)1728
1691 y Fl(b)1761 1679 y Fr(\()p Fq(v)s Fr(\).)51 b(Delete)32
b Fq(p)g Fr(from)g Fp(Par)l(ents)2761 1691 y Fl(b)2794
1679 y Fr(\()p Fq(q)s Fr(\))h(and)e(insert)h(it)913 1779
y(in)n(to)c Fp(Par)l(ents)1364 1791 y Fl(b)1398 1779
y Fr(\()p Fq(v)s Fr(\).)625 1912 y(2.)41 b(Let)30 b Fq(p)924
1882 y Fg(0)978 1912 y Fr(and)g Fq(q)1182 1882 y Fg(0)1235
1912 y Fr(b)r(e)h(the)g(p)r(oin)n(ts)f(suc)n(h)g(that)h
Fq(p)c Fi(2)h Fp(Cands)8 b Fr(\()p Fq(p)2580 1882 y Fg(0)2603
1912 y Fr(\),)32 b(and)e Fq(q)h Fi(2)d Fp(Cands)7 b Fr(\()p
Fq(q)3308 1882 y Fg(0)3332 1912 y Fr(\).)731 2011 y(If)37
b Fq(p)865 1981 y Fg(0)926 2011 y Fr(=)h Fq(q)1069 1981
y Fg(0)1093 2011 y Fr(,)h(then)e(up)r(date)h Fp(lc)l(and)9
b Fr(\()p Fq(p)1911 1981 y Fg(0)1934 2011 y Fr(\))37
b(starting)f(from)h Fq(p)f Fr(and)h Fq(q)j Fr(in)d(the)g(tree)g(for)731
2111 y Fp(Cands)7 b Fr(\()p Fq(p)1036 2081 y Fg(0)1060
2111 y Fr(\).)995 2298 y
 15156103 6668684 7235993 20392345 34864332 32561971 startTexFig
 995 2298 a
%%BeginDocument: kinetic-closest-x-event.ps
%AI5_FileFormat 1.2
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 0 0 552 728
%AI3_DocumentPreview: Header
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 0
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -54 684 1 659 559 18 0 1 51 150
%AI5_OpenViewLayers: 7
userdict /Adobe_level2_AI5 21 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	
	/gt38? mark {version cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
	level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI5_vars 70 dict dup begin
put
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_IllustratorA_AI5 74 dict dup begin
put
/initialize
{
	Adobe_IllustratorA_AI5 dup begin
	Adobe_IllustratorA_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_IllustratorA_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			clip /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore clip newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore clip newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore clip newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef clip
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
			
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
currentdict readonly pop
end
setpacking
Adobe_level2_AI5 /initialize get exec
Adobe_IllustratorA_AI5_vars Adobe_IllustratorA_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_IllustratorA_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Times-Italic Times-Italic
[/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding TrueType
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Confetti)
(Confetti) 4.85 3.617 76.85 75.617 [
(0 O 0 R 1 g 1 G) @
_ &
(0 O 0 R 0 g 0 G) @
(
800 Ar
0 J 0 j 0.3 w 4 M []0 d
%AI3_Note:
0 D
10.6 64.867 m
7.85 62.867 l
S
9.1 8.617 m
6.85 6.867 l
S
78.1 68.617 m
74.85 67.867 l
S
76.85 56.867 m
74.35 55.117 l
S
79.6 51.617 m
76.6 51.617 l
S
76.35 44.117 m
73.6 45.867 l
S
78.6 35.867 m
76.6 34.367 l
S
76.1 23.867 m
73.35 26.117 l
S
78.1 12.867 m
73.85 13.617 l
S
68.35 14.617 m
66.1 12.867 l
S
76.6 30.617 m
73.6 30.617 l
S
62.85 58.117 m
60.956 60.941 l
S
32.85 59.617 m
31.196 62.181 l
S
47.891 64.061 m
49.744 66.742 l
S
72.814 2.769 m
73.928 5.729 l
S
67.976 2.633 m
67.35 5.909 l
S
61.85 27.617 m
59.956 30.441 l
S
53.504 56.053 m
51.85 58.617 l
S
52.762 1.779 m
52.876 4.776 l
S
45.391 5.311 m
47.244 7.992 l
S
37.062 3.375 m
35.639 5.43 l
S
55.165 34.828 m
57.518 37.491 l
S
20.795 3.242 m
22.12 5.193 l
S
14.097 4.747 m
15.008 8.965 l
S
9.736 1.91 m
8.073 4.225 l
S
31.891 5.573 m
32.005 8.571 l
S
12.1 70.367 m
15.6 68.867 l
S
9.35 54.867 m
9.6 58.117 l
S
12.85 31.867 m
14.35 28.117 l
S
10.1 37.367 m
12.35 41.117 l
S
34.1 71.117 m
31.85 68.617 l
S
38.35 71.117 m
41.6 68.367 l
S
55.1 71.117 m
58.35 69.117 l
S
57.35 65.117 m
55.35 61.867 l
S
64.35 66.367 m
69.35 68.617 l
S
71.85 62.867 m
69.35 61.117 l
S
23.6 70.867 m
23.6 67.867 l
S
20.6 65.867 m
17.35 65.367 l
S
24.85 61.367 m
25.35 58.117 l
S
25.85 65.867 m
29.35 66.617 l
S
14.1 54.117 m
16.85 56.117 l
S
12.35 11.617 m
12.6 15.617 l
S
12.1 19.867 m
14.35 22.367 l
S
26.1 9.867 m
23.6 13.367 l
S
34.6 47.117 m
32.1 45.367 l
S
62.6 41.867 m
59.85 43.367 l
S
31.6 35.617 m
27.85 36.367 l
S
36.35 26.117 m
34.35 24.617 l
S
33.85 14.117 m
31.1 16.367 l
S
37.1 9.867 m
35.1 11.117 l
S
34.35 20.867 m
31.35 20.867 l
S
44.6 56.617 m
42.1 54.867 l
S
47.35 51.367 m
44.35 51.367 l
S
44.1 43.867 m
41.35 45.617 l
S
43.35 33.117 m
42.6 30.617 l
S
43.85 23.617 m
41.1 25.867 l
S
44.35 15.617 m
42.35 16.867 l
S
67.823 31.1 m
64.823 31.1 l
S
27.1 32.617 m
29.6 30.867 l
S
31.85 55.117 m
34.85 55.117 l
S
19.6 40.867 m
22.1 39.117 l
S
16.85 35.617 m
19.85 35.617 l
S
20.1 28.117 m
22.85 29.867 l
S
52.1 42.617 m
54.484 44.178 l
S
52.437 50.146 m
54.821 48.325 l
S
59.572 54.133 m
59.35 51.117 l
S
50.185 10.055 m
53.234 9.928 l
S
51.187 15.896 m
53.571 14.075 l
S
58.322 19.883 m
59.445 16.823 l
S
53.1 32.117 m
50.6 30.367 l
S
52.85 24.617 m
49.6 25.617 l
S
61.85 9.117 m
59.1 10.867 l
S
69.35 34.617 m
66.6 36.367 l
S
67.1 23.617 m
65.1 22.117 l
S
24.435 46.055 m
27.484 45.928 l
S
25.437 51.896 m
27.821 50.075 l
S
62.6 47.117 m
65.321 46.575 l
S
19.85 19.867 m
20.35 16.617 l
S
21.85 21.867 m
25.35 22.617 l
S
37.6 62.867 m
41.6 62.117 l
S
38.323 42.1 m
38.823 38.6 l
S
69.35 52.617 m
66.85 53.867 l
S
14.85 62.117 m
18.1 59.367 l
S
9.6 46.117 m
7.1 44.367 l
S
20.6 51.617 m
18.6 50.117 l
S
46.141 70.811 m
47.994 73.492 l
S
69.391 40.561 m
71.244 43.242 l
S
38.641 49.311 m
39.35 52.117 l
S
25.141 16.811 m
25.85 19.617 l
S
36.6 32.867 m
34.6 31.367 l
S
6.1 68.617 m
2.85 67.867 l
S
4.85 56.867 m
2.35 55.117 l
S
7.6 51.617 m
4.6 51.617 l
S
6.6 35.867 m
4.6 34.367 l
S
6.1 12.867 m
1.85 13.617 l
S
4.6 30.617 m
1.6 30.617 l
S
72.814 74.769 m
73.928 77.729 l
S
67.976 74.633 m
67.35 77.909 l
S
52.762 73.779 m
52.876 76.776 l
S
37.062 75.375 m
35.639 77.43 l
S
20.795 75.242 m
22.12 77.193 l
S
9.736 73.91 m
8.073 76.225 l
S
10.1 23.617 m
6.35 24.367 l
S
73.217 18.276 m
71.323 21.1 l
S
28.823 39.6 m
29.505 42.389 l
S
49.6 38.617 m
47.6 37.117 l
S
60.323 73.6 m
62.323 76.6 l
S
60.323 1.6 m
62.323 4.6 l
S
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @
(
800 Ar
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
3 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Red & Yellow)
(Red & Yellow) 0 2 Bd
[
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
FFFFFEFEFDFDFDFCFCFBFBFBFAFAF9F9F9F8F8F7F7F7F6F6F5F5F5F4F4F3F3F3F2F2F1F1F1F0F0EF
EFEFEEEEEDEDEDECECEBEBEBEAEAE9E9E9E8E8E7E7E7E6E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DF
DFDFDEDEDDDDDDDCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D5D5D5D4D4D3D3D3D2D2D1D1D1D0D0CF
CFCFCECECDCDCDCCCCCBCBCBCACAC9C9C9C8C8C7C7C7C6C6C5C5C5C4C4C3C3C3C2C2C1C1C1C0C0BF
BFBFBEBEBDBDBDBCBCBBBBBBBABAB9B9B9B8B8B7B7B7B6B6B5B5B5B4B4B3B3B3B2B2B1B1B1B0B0AF
AFAFAEAEADADADACACABABABAAAAA9A9A9A8A8A7A7A7A6A6A5A5A5A4A4A3A3A3A2A2A1A1A1A0A09F
9F9F9E9E9D9D9D9C9C9B9B9B9A9A9999
>
0
1 %_Br
[
0 1 0.6 0 1 50 100 %_Bs
0 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Blue Radial)
(Yellow & Blue Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 2 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Blue Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
(Yellow Stripe) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
0 0 0 0 k
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
0 0 0 0 k
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
0 0 0 0 k
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
u
0 To
1 0 0 1 129.444 387.0416 0 Tp
TP
0 Tr
0 O
0 g
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
/_Times-Italic 16 Tf
0 Ts
100 Tz
0 Tt
0 TA
%_ 0 XL
25.1999 0 Xb
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 0 2 2 3 Th
0 Tq
0 0 Tl
0 Tc
0 Tw
(p) Tx 
(\r) TX 
TO
q
1 Ap
275.207 330.9075 m
275.207 478.509 L
118.6054 478.509 L
118.6054 330.9075 L
275.207 330.9075 L
h
W
n
0 Ap
0 R
0 G
2 j 3 w
172.5625 409 m
143.4555 391.5082 L
219.137 347.8135 L
S
189.5625 446 m
149.9763 422.7998 L
211.5625 387 L
S
0 j 1 w
213.9248 432.1936 m
229.1141 423.424 L
S
213.9248 432.1936 m
182.4184 450.3838 L
211.7781 467.3346 L
S
211.7781 467.3346 m
198.9185 474.759 L
334.0202 552.7598 L
S
211.7781 467.3346 m
243.2846 449.1443 L
S
258.4738 440.3748 m
243.2846 449.1443 L
S
229.1141 423.424 m
258.4738 440.3748 L
S
229.1141 423.424 m
212.1562 413.6334 L
230.404 403.098 L
S
258.4738 440.3748 m
347.2579 491.6342 L
S
230.404 403.098 m
218.6437 396.3082 L
223.2715 393.6364 L
S
247.362 412.8887 m
230.404 403.098 L
S
248.4603 379.0937 m
223.2715 393.6364 L
S
276.7217 429.8394 m
247.362 412.8887 L
S
260.8881 371.9185 m
248.4603 379.0937 L
S
260.8881 371.9185 m
353.7454 318.3074 L
S
223.2715 393.6364 m
194.6435 377.108 L
219.8322 362.5653 L
S
226.2715 351.9326 m
348.9454 281.107 L
S
226.2715 351.9326 m
213.8437 359.1078 L
219.8322 362.5653 L
S
219.8322 362.5653 m
248.4603 379.0937 L
S
219.137 347.8135 m
226.2715 351.9326 L
S
219.137 347.8135 m
205.4436 339.9076 L
340.5453 261.9068 L
S
Q
0 A
0 R
0 G
800 Ar
0 J 0 j 0.25 w 4 M [4 ]0 d
%AI3_Note:
0 D
149.6667 451.3958 m
149.6667 396.7917 l
S
143.625 424 m
143.625 372.6667 l
S
0 To
1 0 0 1 130.2292 419.6667 0 Tp
TP
0 Tr
0 O
0 g
1 w []0 d
/_Times-Italic 16 Tf
0 Ts
100 Tz
0 Tt
0 TA
%_ 0 XL
25.1999 0 Xb
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 0 2 2 3 Th
0 Tq
0 0 Tl
0 Tc
0 Tw
(q) Tx 
(\r) TX 
TO
u
0 R
0 G
150.0307 392 m
166.0307 392 l
S
0 O
0 g
163.2225 388.2961 m
164.7952 392 l
163.2225 395.7039 l
172 392 l
163.2225 388.2961 l
f
U
U
0.5 g
0 R
0.5 G
10 w
302 408.0368 m
326 408.0368 l
B
1 w
322.1976 420.9464 m
338.4606 408.0736 l
322.1976 395.2008 l
322.032 395.2008 l
322.032 420.9464 l
322.1976 420.9464 l
b
u
0 To
1 0 0 1 363.9648 387.0417 0 Tp
TP
0 Tr
0 g
(p) Tx 
(\r) TX 
TO
q
1 Ap
515.0611 329.5742 m
515.0611 477.1757 L
358.4595 477.1757 L
358.4595 329.5742 L
515.0611 329.5742 L
h
W
n
0 Ap
0 R
0 G
2 j 3 w
453.779 430.8602 m
383.3096 390.1748 L
458.9912 346.4802 L
S
425.4167 447.3333 m
377.5388 419.279 L
406.0833 402.6667 L
S
0 j 1 w
453.779 430.8602 m
468.9683 422.0907 L
S
453.779 430.8602 m
422.2725 449.0504 L
451.6322 466.0012 L
S
451.6322 466.0012 m
438.7727 473.4257 L
573.8744 551.4265 L
S
451.6322 466.0012 m
483.1387 447.811 L
S
498.328 439.0415 m
483.1387 447.811 L
S
468.9683 422.0907 m
498.328 439.0415 L
S
468.9683 422.0907 m
452.0103 412.3001 L
470.2582 401.7647 L
S
498.328 439.0415 m
587.112 490.3009 L
S
470.2582 401.7647 m
458.4979 394.9749 L
463.1257 392.3031 L
S
487.2162 411.5553 m
470.2582 401.7647 L
S
488.3144 377.7604 m
463.1257 392.3031 L
S
516.5759 428.5061 m
487.2162 411.5553 L
S
500.7423 370.5851 m
488.3144 377.7604 L
S
500.7423 370.5851 m
593.5996 316.9741 L
S
463.1257 392.3031 m
434.4976 375.7747 L
459.6864 361.232 L
S
466.1257 350.5993 m
588.7996 279.7737 L
S
466.1257 350.5993 m
453.6978 357.7745 L
459.6864 361.232 L
S
459.6864 361.232 m
488.3144 377.7604 L
S
458.9912 346.4802 m
466.1257 350.5993 L
S
458.9912 346.4802 m
445.2978 338.5743 L
580.3995 260.5735 L
S
Q
0 A
0 R
0 G
800 Ar
0 J 0 j 0.25 w 4 M [4 ]0 d
%AI3_Note:
0 D
376.7083 437.2916 m
376.7083 377.2916 l
S
382.7084 414.5833 m
382.7084 367.25 l
S
0 To
1 0 0 1 363.75 417 0 Tp
TP
0 Tr
0 O
0 g
1 w []0 d
/_Times-Italic 16 Tf
0 Ts
100 Tz
0 Tt
0 TA
%_ 0 XL
25.1999 0 Xb
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 0 2 2 3 Th
0 Tq
0 0 Tl
0 Tc
0 Tw
(q) Tx 
(\r) TX 
TO
U
u
1 Ap
194.3887 375.416 m
195.3992 375.416 196.2184 376.2352 196.2184 377.2457 c
196.2184 378.2562 195.3992 379.0754 194.3887 379.0754 c
193.3782 379.0754 192.5591 378.2562 192.5591 377.2457 c
192.5591 376.2352 193.3782 375.416 194.3887 375.416 c
f
213.9809 357.4919 m
214.9914 357.4919 215.8106 358.3111 215.8106 359.3216 c
215.8106 360.332 214.9914 361.1512 213.9809 361.1512 c
212.9704 361.1512 212.1513 360.332 212.1513 359.3216 c
212.1513 358.3111 212.9704 357.4919 213.9809 357.4919 c
f
218.3559 394.4293 m
219.3664 394.4293 220.1856 395.2485 220.1856 396.259 c
220.1856 397.2695 219.3664 398.0887 218.3559 398.0887 c
217.3454 398.0887 216.5263 397.2695 216.5263 396.259 c
216.5263 395.2485 217.3454 394.4293 218.3559 394.4293 c
f
212.2309 411.5543 m
213.2414 411.5543 214.0606 412.3735 214.0606 413.384 c
214.0606 414.3945 213.2414 415.2137 212.2309 415.2137 c
211.2204 415.2137 210.4013 414.3945 210.4013 413.384 c
210.4013 412.3735 211.2204 411.5543 212.2309 411.5543 c
f
198.9184 472.9293 m
199.9289 472.9293 200.7481 473.7485 200.7481 474.759 c
200.7481 475.7695 199.9289 476.5887 198.9184 476.5887 c
197.9079 476.5887 197.0888 475.7695 197.0888 474.759 c
197.0888 473.7485 197.9079 472.9293 198.9184 472.9293 c
f
182.3143 448.4918 m
183.3248 448.4918 184.144 449.311 184.144 450.3215 c
184.144 451.332 183.3248 452.1512 182.3143 452.1512 c
181.3038 452.1512 180.4847 451.332 180.4847 450.3215 c
180.4847 449.311 181.3038 448.4918 182.3143 448.4918 c
f
U
u
434.243 374.0827 m
435.2535 374.0827 436.0727 374.9019 436.0727 375.9124 c
436.0727 376.9229 435.2535 377.7421 434.243 377.7421 c
433.2325 377.7421 432.4134 376.9229 432.4134 375.9124 c
432.4134 374.9019 433.2325 374.0827 434.243 374.0827 c
f
453.8352 356.1586 m
454.8457 356.1586 455.6649 356.9778 455.6649 357.9883 c
455.6649 358.9987 454.8457 359.8179 453.8352 359.8179 c
452.8247 359.8179 452.0055 358.9987 452.0055 357.9883 c
452.0055 356.9778 452.8247 356.1586 453.8352 356.1586 c
f
458.2102 393.096 m
459.2207 393.096 460.0399 393.9152 460.0399 394.9257 c
460.0399 395.9362 459.2207 396.7554 458.2102 396.7554 c
457.1997 396.7554 456.3805 395.9362 456.3805 394.9257 c
456.3805 393.9152 457.1997 393.096 458.2102 393.096 c
f
452.0852 410.221 m
453.0957 410.221 453.9149 411.0402 453.9149 412.0507 c
453.9149 413.0612 453.0957 413.8804 452.0852 413.8804 c
451.0747 413.8804 450.2555 413.0612 450.2555 412.0507 c
450.2555 411.0402 451.0747 410.221 452.0852 410.221 c
f
438.7727 471.596 m
439.7832 471.596 440.6024 472.4152 440.6024 473.4257 c
440.6024 474.4362 439.7832 475.2554 438.7727 475.2554 c
437.7622 475.2554 436.943 474.4362 436.943 473.4257 c
436.943 472.4152 437.7622 471.596 438.7727 471.596 c
f
422.1686 447.1585 m
423.1791 447.1585 423.9983 447.9777 423.9983 448.9882 c
423.9983 449.9987 423.1791 450.8179 422.1686 450.8179 c
421.1581 450.8179 420.339 449.9987 420.339 448.9882 c
420.339 447.9777 421.1581 447.1585 422.1686 447.1585 c
f
U
149.9762 420.0553 m
151.492 420.0553 152.7208 421.2841 152.7208 422.7998 c
152.7208 424.3155 151.492 425.5444 149.9762 425.5444 c
148.4605 425.5444 147.2318 424.3155 147.2318 422.7998 c
147.2318 421.2841 148.4605 420.0553 149.9762 420.0553 c
f
376.8332 416.4221 m
378.349 416.4221 379.5778 417.6509 379.5778 419.1667 c
379.5778 420.6824 378.349 421.9112 376.8332 421.9112 c
375.3175 421.9112 374.0888 420.6824 374.0888 419.1667 c
374.0888 417.6509 375.3175 416.4221 376.8332 416.4221 c
f
382.8332 387.2554 m
384.349 387.2554 385.5778 388.4842 385.5778 390 c
385.5778 391.5157 384.349 392.7445 382.8332 392.7445 c
381.3175 392.7445 380.0888 391.5157 380.0888 390 c
380.0888 388.4842 381.3175 387.2554 382.8332 387.2554 c
f
143.4554 388.7637 m
144.9712 388.7637 146.2 389.9924 146.2 391.5082 c
146.2 393.0239 144.9712 394.2528 143.4554 394.2528 c
141.9397 394.2528 140.711 393.0239 140.711 391.5082 c
140.711 389.9924 141.9397 388.7637 143.4554 388.7637 c
f
0 R
0 G
529.4998 311.4997 m
529.4998 494.0001 L
110.9962 494.0001 L
110.9962 311.4997 L
529.4998 311.4997 L
s
LB
%AI5_EndLayer--
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI5 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EndDocument

 endTexFig
 903 3325 a Fr(Figure)27 b(6:)74 b(An)28 b Fq(x)g Fr(ev)n(en)n(t)f(and)
h(the)g(c)n(hange)e(in)i(the)g Fp(Cands)35 b Fr(sets.)523
3603 y Fh(Lemma)30 b(3.4)40 b Fp(After)24 b(the)g(pr)l(e)l(c)l(e)l
(ding)h(pr)l(o)l(c)l(e)l(dur)l(e)f(for)g(up)l(dating)h(the)f(Cands)7
b Fr(\(\))p Fp(,)27 b(Par)l(ents)6 b Fr(\(\))p Fp(,)523
3703 y(and)29 b(lc)l(and)10 b Fr(\(\))29 b Fp(\014elds)g(when)h(two)f
(p)l(oints)g(of)h Fq(S)j Fp(exchange)d(in)f Fq(x)p Fp(-or)l(der,)h(the)
f(data)h(structur)l(e)523 3802 y(c)l(orr)l(e)l(ctly)d(r)l(epr)l(esents)
g(the)g(maxima)h(diagr)l(am)g(for)g(the)f(curr)l(ent)f(c)l(on\014gur)l
(ation)h(of)h Fq(S)5 b Fp(,)28 b(and)523 3902 y(the)i(lc)l(and)9
b Fr(\(\))31 b Fp(\014elds)f(ar)l(e)g(c)l(orr)l(e)l(ct.)523
4120 y Fh(Pro)s(of:)53 b Fr(If)19 b Fq(q)i Fr(is)e(a)f(target)f(for)h
Fq(p)p Fr(,)i(then)f(their)f Fq(x)p Fr(-exc)n(hange)f(c)n(hanges)g(the)
i(maxima)f(diagram.)523 4219 y(Sp)r(eci\014cally)-7 b(,)27
b(the)f(p)r(oin)n(ts)g(of)g Fp(Maxima)8 b Fr(\()p Fq(q)s
Fr(\))26 b(in)h Fp(Dom)6 b Fr(\()p Fq(q)s Fr(\))16 b
Fi(\\)g Fp(Dom)6 b Fr(\()p Fq(p)p Fr(\))27 b(are)e(transferred)g(from)
523 4319 y Fp(Cands)8 b Fr(\()p Fq(q)s Fr(\))37 b(to)g
Fp(Cands)7 b Fr(\()p Fq(p)p Fr(\).)65 b(P)n(oin)n(t)35
b Fq(p)i Fr(gets)f(a)g(new)h(target;)j(the)d(new)g(p)r(oin)n(t)g(of)f
(con)n(tact)523 4419 y(b)r(et)n(w)n(een)29 b(the)h(segmen)n(t)e(from)h
Fq(p)g Fr(and)g(its)h(target)e(lies)h(inside)g Fp(Dom)7
b Fr(\()p Fq(q)s Fr(\).)42 b(Lik)n(ewise)29 b Fq(q)j
Fr(gets)523 4518 y Fq(p)27 b Fr(as)g(a)h(target.)36 b(Step)28
b(1)f(handles)g(these)h(c)n(hanges.)648 4653 y(The)c(only)f(edges)h(of)
g(the)g(maxima)g(diagram)f(that)h(c)n(hange)f(are)g(those)h(that)g
(extend)g(to)523 4753 y(the)f(righ)n(t)e(from)h Fq(p)g
Fr(and)g Fq(q)s Fr(|there)g(are)g(no)g(target)f(c)n(hanges)g(for)h(p)r
(oin)n(ts)g(either)g(righ)n(t)f(or)h(left)523 4853 y(of)28
b Fi(f)p Fq(p;)14 b(q)s Fi(g)p Fr(|so)25 b(the)j(op)r(erations)f(of)g
(Step)h(1)f(su\016ce)h(to)f(up)r(date)h(the)g(maxima)f(diagram.)1914
5147 y(21)p eop
%%Page: 22 22
22 21 bop 648 614 a Fr(If)31 b(neither)g Fq(p)g Fr(nor)f
Fq(q)k Fr(is)d(a)g(target)f(for)g(the)i(other,)f(then)g(the)h(maxima)e
(diagram)g(do)r(es)523 714 y(not)e(c)n(hange|the)e Fp(Cands)8
b Fr(\(\))28 b(and)g Fp(Par)l(ents)7 b Fr(\(\))28 b(\014elds)f(do)h
(not)f(need)h(to)f(b)r(e)h(up)r(dated.)648 849 y(Whether)c(or)g(not)g
(the)h(maxima)e(diagram)g(c)n(hanges,)h(one)g Fp(lc)l(and)9
b Fr(\(\))25 b(\014eld)g(ma)n(y)e(c)n(hange.)523 949
y(If)h Fq(p;)14 b(q)26 b Fi(2)d Fp(Cands)8 b Fr(\()p
Fq(u)p Fr(\))24 b(for)f(some)h(p)r(oin)n(t)g Fq(u)p Fr(,)g(w)n(e)f
(need)h(to)g(ensure)f(that)h(the)g(\\leftmost")f(\014elds)523
1048 y(are)28 b(up)r(dated)i(in)g(the)g(binary)e(tree)h(represen)n
(ting)f Fp(Cands)8 b Fr(\()p Fq(u)p Fr(\),)30 b(so)f(that)h(an)n(y)e
(comparison)523 1148 y(of)22 b Fq(p)g Fr(and)g Fq(q)j
Fr(in)d(that)g(tree)g(is)g(re-ev)-5 b(aluated;)22 b(this)h(ma)n(y)e
(cause)g Fp(lc)l(and)9 b Fr(\()p Fq(u)p Fr(\))23 b(to)e(c)n(hange.)34
b(Step)23 b(2)523 1248 y(tak)n(es)k(care)f(of)i(this.)2162
b Ff(2)648 1408 y Fr(The)28 b(follo)n(wing)g(pseudo-co)r(de)g(tells)h
(ho)n(w)f(to)g(up)r(date)i(the)f(a\013ected)f(\014elds)h(when)g(t)n(w)n
(o)523 1507 y(p)r(oin)n(ts)38 b Fq(p)f Fr(and)h Fq(q)i
Fr(exc)n(hange)c(p)r(ositions)i(in)f(the)h(+60)2244 1477
y Fg(\016)2281 1507 y Fr(-order)e(of)i Fq(S)k Fr(\(at)c(the)g(instan)n
(t)f(of)523 1607 y(exc)n(hange,)c(the)h(line)f(through)g
Fq(p)g Fr(and)g Fq(q)j Fr(mak)n(es)d(an)g(angle)f(of)h
Fi(\000)p Fr(30)2702 1577 y Fg(\016)2772 1607 y Fr(with)h(the)g
Fq(x)p Fr(-axis\).)523 1706 y(Without)39 b(loss)f(of)h(generalit)n(y)-7
b(,)40 b(assume)e(that)h Fq(p)f Fr(is)h(left)g(of)g Fq(q)s
Fr(.)70 b(There)38 b(are)g(t)n(w)n(o)f(cases,)523 1806
y(dep)r(ending)28 b(on)f(whether)h Fq(q)j Fr(en)n(ters)26
b(or)h(exits)h(from)f Fp(Dom)6 b Fr(\()p Fq(p)p Fr(\).)648
1941 y(In)24 b(the)i(\014rst)e(case,)h Fq(q)i Fr(en)n(ters)d
Fp(Dom)7 b Fr(\()p Fq(p)p Fr(\).)36 b(See)25 b(Figure)f(7.)35
b(Up)r(date)26 b(the)f(data)f(structures)523 2041 y(th)n(us:)625
2242 y(1.)41 b(If)28 b Fq(p)22 b Fi(2)i Fp(Par)l(ents)1240
2254 y Fl(a)1280 2242 y Fr(\()p Fq(q)s Fr(\))k(then)766
2408 y(\(a\))41 b(Let)29 b Fq(v)i Fr(b)r(e)e(the)g(p)r(oin)n(t)g(suc)n
(h)f(that)g Fq(q)g Fi(2)c Fp(Cands)8 b Fr(\()p Fq(v)s
Fr(\).)40 b(Delete)29 b Fq(q)j Fr(from)c Fp(Cands)8 b
Fr(\()p Fq(v)s Fr(\))913 2508 y(and)28 b(insert)f(it)h(in)n(to)f
Fp(Cands)8 b Fr(\()p Fq(p)p Fr(\).)761 2641 y(\(b\))42
b(Let)27 b Fq(t)g Fr(b)r(e)g(the)f(leftmost)h(p)r(oin)n(t)g(in)g
Fp(Par)l(ents)2286 2653 y Fl(b)2319 2641 y Fr(\()p Fq(q)s
Fr(\))g(that)g(is)g(to)f(the)h(righ)n(t)f(of)g Fq(p)p
Fr(,)h(if)913 2740 y(an)n(y)-7 b(,)25 b(or)e(else)h(the)g(p)r(oin)n(t)h
(suc)n(h)f(that)g Fq(q)i Fi(2)e Fp(Par)l(ents)2473 2752
y Fl(a)2514 2740 y Fr(\()p Fq(t)p Fr(\).)36 b(\(Recall)24
b(that)h Fq(x)p Fr(-order)913 2840 y(in)g Fp(Par)l(ents)1290
2852 y Fl(b)1323 2840 y Fr(\()p Fq(q)s Fr(\))g(is)f(equiv)-5
b(alen)n(t)24 b(to)h(the)f(order)f(in)i(whic)n(h)f(edges)g(hit)h
Fp(Dom)6 b Fr(\()p Fq(q)s Fr(\).\))913 2940 y(Delete)28
b Fq(p)g Fr(from)f Fp(Par)l(ents)1719 2952 y Fl(a)1759
2940 y Fr(\()p Fq(q)s Fr(\))h(and)g(insert)f Fq(p)g Fr(in)n(to)h
Fp(Par)l(ents)2805 2952 y Fl(a)2845 2940 y Fr(\()p Fq(t)p
Fr(\).)770 3072 y(\(c\))42 b(Split)29 b(o\013)g(the)f(subsequence)g(of)
g Fp(Par)l(ents)2222 3084 y Fl(b)2256 3072 y Fr(\()p
Fq(q)s Fr(\))h(whose)e(p)r(oin)n(ts)h(are)g(to)g(the)h(left)913
3172 y(of)e Fq(t)f Fr(\(and)h(hence)g(left)g(of)f Fq(p)p
Fr(\))h(and)f(join)h(it)g(on)n(to)f(the)h(b)r(ottom)f(of)h
Fp(Par)l(ents)3225 3184 y Fl(b)3258 3172 y Fr(\()p Fq(p)p
Fr(\).)995 3359 y
 15156103 5910879 1841889 33877606 36114186 47494430 startTexFig
 995 3359 a
%%BeginDocument: kinetic-closest-60-event.ps
%AI5_FileFormat 1.2
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 0 0 552 728
%AI3_DocumentPreview: Header
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 0
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -30 780 1 635 437 18 0 1 11 159
%AI5_OpenViewLayers: 7
userdict /Adobe_level2_AI5 21 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	
	/gt38? mark {version cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
	level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI5_vars 70 dict dup begin
put
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_IllustratorA_AI5 74 dict dup begin
put
/initialize
{
	Adobe_IllustratorA_AI5 dup begin
	Adobe_IllustratorA_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_IllustratorA_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			clip /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore clip newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore clip newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore clip newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef clip
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
			
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
currentdict readonly pop
end
setpacking
Adobe_level2_AI5 /initialize get exec
Adobe_IllustratorA_AI5_vars Adobe_IllustratorA_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_IllustratorA_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Times-Italic Times-Italic
[/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding TrueType
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @
(
800 Ar
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
3 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Red & Yellow)
(Red & Yellow) 0 2 Bd
[
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
FFFFFEFEFDFDFDFCFCFBFBFBFAFAF9F9F9F8F8F7F7F7F6F6F5F5F5F4F4F3F3F3F2F2F1F1F1F0F0EF
EFEFEEEEEDEDEDECECEBEBEBEAEAE9E9E9E8E8E7E7E7E6E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DF
DFDFDEDEDDDDDDDCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D5D5D5D4D4D3D3D3D2D2D1D1D1D0D0CF
CFCFCECECDCDCDCCCCCBCBCBCACAC9C9C9C8C8C7C7C7C6C6C5C5C5C4C4C3C3C3C2C2C1C1C1C0C0BF
BFBFBEBEBDBDBDBCBCBBBBBBBABAB9B9B9B8B8B7B7B7B6B6B5B5B5B4B4B3B3B3B2B2B1B1B1B0B0AF
AFAFAEAEADADADACACABABABAAAAA9A9A9A8A8A7A7A7A6A6A5A5A5A4A4A3A3A3A2A2A1A1A1A0A09F
9F9F9E9E9D9D9D9C9C9B9B9B9A9A9999
>
0
1 %_Br
[
0 1 0.6 0 1 50 100 %_Bs
0 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Blue Radial)
(Yellow & Blue Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 2 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Blue Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
(Yellow Stripe) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
0 0 0 0 k
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
0 0 0 0 k
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
0 0 0 0 k
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
u
q
1 Ap
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
257.6672 559.0926 m
257.6672 705.4931 L
39.2664 705.4931 L
39.2664 559.0926 L
257.6672 559.0926 L
h
W
n
0 To
1 0 0 1 124.0667 682.2931 0 Tp
TP
0 Tr
0 O
0 g
/_Times-Italic 16 Tf
0 Ts
100 Tz
0 Tt
0 TA
%_ 0 XL
20.16 0 Xb
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 0 2 2 3 Th
0 Tq
0 0 Tl
0 Tc
0 Tw
(p) Tx 
(\r) TX 
TO
0 To
1 0 0 1 164.8669 642.2929 0 Tp
TP
0 Tr
(q) Tx 
(\r) TX 
TO
0 Ap
0 R
0 G
3 w
151.7673 677.3751 m
138.3128 685.1431 L
263.0213 757.1433 L
S
192.9541 653.596 m
151.7673 677.3751 L
S
220.4106 620.8378 m
194.5388 635.775 L
S
192.9541 653.596 m
178.3129 645.1429 L
194.5388 635.775 L
S
220.4106 620.8378 m
303.0214 573.1426 L
S
192.9541 653.596 m
303.0214 717.1432 L
S
1 w
151.7673 677.3751 m
59.9125 624.3428 L
117.3251 591.1957 L
S
117.3251 591.1957 m
194.5388 635.775 L
S
117.3251 591.1957 m
99.9126 581.1427 L
224.6211 509.1424 L
S
220.4106 620.8378 m
165.5129 589.1427 L
290.2214 517.1424 L
S
0 To
1 0 0 1 155.6669 585.8927 0 Tp
TP
0 Tr
0 O
0 g
(t) Tx 
(\r) TX 
TO
0 To
1 0 0 1 47 622 0 Tp
TP
0 Tr
(v) Tx 
(\r) TX 
TO
1 Ap
138.3128 681.9752 m
140.0623 681.9752 141.4806 683.3936 141.4806 685.1431 c
141.4806 686.8926 140.0623 688.3109 138.3128 688.3109 c
136.5633 688.3109 135.1449 686.8926 135.1449 685.1431 c
135.1449 683.3936 136.5633 681.9752 138.3128 681.9752 c
f
59.9125 621.175 m
61.662 621.175 63.0803 622.5933 63.0803 624.3428 c
63.0803 626.0924 61.662 627.5107 59.9125 627.5107 c
58.163 627.5107 56.7446 626.0924 56.7446 624.3428 c
56.7446 622.5933 58.163 621.175 59.9125 621.175 c
f
178.3129 641.9751 m
180.0625 641.9751 181.4808 643.3934 181.4808 645.1429 c
181.4808 646.8924 180.0625 648.3108 178.3129 648.3108 c
176.5634 648.3108 175.1451 646.8924 175.1451 645.1429 c
175.1451 643.3934 176.5634 641.9751 178.3129 641.9751 c
f
165.5129 585.9749 m
167.2624 585.9749 168.6807 587.3932 168.6807 589.1427 c
168.6807 590.8922 167.2624 592.3105 165.5129 592.3105 c
163.7634 592.3105 162.345 590.8922 162.345 589.1427 c
162.345 587.3932 163.7634 585.9749 165.5129 585.9749 c
f
Q
0 A
q
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
532.4546 557.0426 m
532.4546 703.4431 L
314.0538 703.4431 L
314.0538 557.0426 L
532.4546 557.0426 L
h
W
n
0 To
1 0 0 1 398.8541 680.2431 0 Tp
TP
0 Tr
0 O
0 g
/_Times-Italic 16 Tf
0 Ts
100 Tz
0 Tt
0 TA
%_ 0 XL
20.16 0 Xb
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 0 2 2 3 Th
0 Tq
0 0 Tl
0 Tc
0 Tw
(p) Tx 
(\r) TX 
TO
0 To
1 0 0 1 453.4043 666.993 0 Tp
TP
0 Tr
(q) Tx 
(\r) TX 
TO
0 Ap
0 R
0 G
3 w
426.5547 675.3251 m
413.1001 683.0931 L
537.8086 755.0933 L
S
509.125 627.75 m
483.9673 642.178 L
S
467.7415 651.546 m
483.9673 642.178 L
S
467.7415 651.546 m
426.5547 675.3251 L
S
507.1981 642.7879 m
481.3262 657.725 L
S
479.7415 675.5461 m
465.1003 667.093 L
481.3262 657.725 L
S
507.1981 642.7879 m
589.8088 595.0927 L
S
479.7415 675.5461 m
589.8088 739.0933 L
S
1 w
426.5547 675.3251 m
334.6998 622.2928 L
392.1125 589.1457 L
S
392.1125 589.1457 m
482.6682 642.2929 L
S
392.1125 589.1457 m
374.7 579.0927 L
499.4085 507.0924 L
S
495.198 618.7878 m
S
521 635 m
440.3002 587.0927 L
565.0087 515.0924 L
S
0 To
1 0 0 1 430.4542 583.8427 0 Tp
TP
0 Tr
0 O
0 g
(t) Tx 
(\r) TX 
TO
0 To
1 0 0 1 321.6538 621.4428 0 Tp
TP
0 Tr
(v) Tx 
(\r) TX 
TO
1 Ap
413.1001 679.9252 m
414.8497 679.9252 416.268 681.3435 416.268 683.0931 c
416.268 684.8426 414.8497 686.2609 413.1001 686.2609 c
411.3506 686.2609 409.9323 684.8426 409.9323 683.0931 c
409.9323 681.3435 411.3506 679.9252 413.1001 679.9252 c
f
334.6998 619.125 m
336.4494 619.125 337.8677 620.5433 337.8677 622.2928 c
337.8677 624.0423 336.4494 625.4607 334.6998 625.4607 c
332.9503 625.4607 331.532 624.0423 331.532 622.2928 c
331.532 620.5433 332.9503 619.125 334.6998 619.125 c
f
465.1003 663.9252 m
466.8498 663.9252 468.2682 665.3435 468.2682 667.093 c
468.2682 668.8425 466.8498 670.2608 465.1003 670.2608 c
463.3508 670.2608 461.9325 668.8425 461.9325 667.093 c
461.9325 665.3435 463.3508 663.9252 465.1003 663.9252 c
f
440.3002 583.9249 m
442.0498 583.9249 443.4681 585.3432 443.4681 587.0927 c
443.4681 588.8422 442.0498 590.2605 440.3002 590.2605 c
438.5507 590.2605 437.1324 588.8422 437.1324 587.0927 c
437.1324 585.3432 438.5507 583.9249 440.3002 583.9249 c
f
Q
0 A
0 To
1 0 0 1 165 526.5 0 Tp
TP
0 Tr
0 O
0 g
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
/_Times-Italic 16 Tf
0 Ts
100 Tz
0 Tt
0 TA
%_ 0 XL
25.1999 0 Xb
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 0 2 2 3 Th
0 Tq
0 0 Tl
0 Tc
0 Tw
(\(a\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 415 526.5 0 Tp
TP
0 Tr
(\(b\)) Tx 
(\r) TX 
TO
u
0 Ap
0.5 g
0 R
0.5 G
10 w
274 628.0368 m
298 628.0368 l
B
1 w
294.1976 640.9464 m
310.4606 628.0736 l
294.1976 615.2008 l
294.032 615.2008 l
294.032 640.9464 l
294.1976 640.9464 l
b
285.3864 640.9464 m
269.1234 628.0736 l
285.3864 615.2008 l
285.552 615.2008 l
285.552 640.9464 l
285.3864 640.9464 l
b
U
U
1 Ap
0 G
547.9996 515.9995 m
547.9996 721 L
29 721 L
29 515.9995 L
547.9996 515.9995 L
s
LB
%AI5_EndLayer--
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI5 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EndDocument

 endTexFig
 637 4290 a Fr(Figure)g(7:)73 b(A)28 b(60)1211 4260 y
Fg(\016)1276 4290 y Fr(ev)n(en)n(t.)37 b(\(a)p Fi(!)p
Fr(b\))27 b Fq(q)k Fr(en)n(ters)c Fp(Dom)6 b Fr(\()p
Fq(p)p Fr(\);)28 b(\(b)p Fi(!)p Fr(a\))g Fq(q)j Fr(exits)d
Fp(Dom)6 b Fr(\()p Fq(p)p Fr(\).)648 4490 y(In)29 b(the)h(second)f
(case,)h Fq(q)i Fr(exits)e Fp(Dom)6 b Fr(\()p Fq(p)p
Fr(\).)44 b(See)29 b(Figure)g(7.)43 b(The)30 b(pseudo-co)r(de)e(in)i
(this)523 4589 y(case)d(just)h(in)n(v)n(erts)e(the)i(action)g(p)r
(erformed)f(in)h(the)f(\014rst)h(case:)625 4791 y(1.)41
b(If)28 b Fq(q)e Fi(2)d Fp(Cands)8 b Fr(\()p Fq(p)p Fr(\))28
b(then)1914 5147 y(22)p eop
%%Page: 23 23
23 22 bop 766 614 a Fr(\(a\))41 b(Let)19 b Fq(t)f Fr(b)r(e)h(the)g(p)r
(oin)n(t)f(suc)n(h)g(that)h Fq(p)k Fi(2)g Fp(Par)l(ents)2321
626 y Fl(a)2361 614 y Fr(\()p Fq(t)p Fr(\).)35 b(Delete)18
b Fq(p)h Fr(from)f Fp(Par)l(ents)3290 626 y Fl(a)3331
614 y Fr(\()p Fq(t)p Fr(\))913 714 y(and)28 b(insert)f
Fq(p)g Fr(in)n(to)h Fp(Par)l(ents)1827 726 y Fl(a)1867
714 y Fr(\()p Fq(q)s Fr(\).)761 833 y(\(b\))42 b(Split)f(o\013)f(from)g
Fp(Par)l(ents)1745 845 y Fl(b)1779 833 y Fr(\()p Fq(p)p
Fr(\))g(the)h(p)r(oin)n(ts)f(whose)f(edges)g(are)g(inciden)n(t)i(to)913
932 y Fp(Dom)7 b Fr(\()p Fq(p)p Fr(\))28 b(b)r(elo)n(w)f
Fq(q)s Fr(,)h(and)f(join)h(them)g(on)n(to)f(the)h(top)f(of)h
Fp(Par)l(ents)2945 944 y Fl(b)2978 932 y Fr(\()p Fq(q)s
Fr(\).)770 1051 y(\(c\))42 b(Let)31 b Fq(v)j Fr(b)r(e)e(the)f(new)g
(righ)n(tmost)e(p)r(oin)n(t)i(of)g Fp(Par)l(ents)2556
1063 y Fl(b)2589 1051 y Fr(\()p Fq(p)p Fr(\),)h(if)g(an)n(y)-7
b(,)31 b(or)e(else)i(the)913 1150 y(p)r(oin)n(t)f(suc)n(h)f(that)h
Fq(p)25 b Fi(2)i Fp(Cands)8 b Fr(\()p Fq(v)s Fr(\).)43
b(Delete)30 b Fq(q)i Fr(from)d Fp(Cands)8 b Fr(\()p Fq(p)p
Fr(\))30 b(and)f(insert)g Fq(q)913 1250 y Fr(in)n(to)f
Fp(Cands)7 b Fr(\()p Fq(v)s Fr(\).)523 1432 y Fh(Lemma)30
b(3.5)40 b Fp(After)24 b(the)g(pr)l(e)l(c)l(e)l(ding)h(pr)l(o)l(c)l(e)l
(dur)l(e)f(for)g(up)l(dating)h(the)f(Cands)7 b Fr(\(\))p
Fp(,)27 b(Par)l(ents)6 b Fr(\(\))p Fp(,)523 1532 y(and)35
b(lc)l(and)9 b Fr(\(\))35 b Fp(\014elds)g(when)g(two)g(p)l(oints)f(of)i
Fq(S)j Fp(exchange)c(in)g(the)f Fr(+60)2773 1502 y Fg(\016)2810
1532 y Fp(-or)l(der,)j(the)d(data)523 1632 y(structur)l(e)27
b(c)l(orr)l(e)l(ctly)i(r)l(epr)l(esents)f(the)h(maxima)g(diagr)l(am)i
(for)e(the)g(curr)l(ent)e(c)l(on\014gur)l(ation)523 1731
y(of)k Fq(S)5 b Fp(,)29 b(and)i(the)f(lc)l(and)9 b Fr(\(\))30
b Fp(\014elds)g(ar)l(e)g(c)l(orr)l(e)l(ct.)523 1914 y
Fh(Pro)s(of:)74 b Fr(Consider)28 b(\014rst)h(the)h(case)f(in)g(whic)n
(h)h Fq(q)i Fr(en)n(ters)d Fp(Dom)6 b Fr(\()p Fq(p)p
Fr(\).)43 b(If)30 b Fq(p)35 b(=)-52 b Fi(2)27 b Fp(Par)l(ents)3219
1926 y Fl(a)3260 1914 y Fr(\()p Fq(q)s Fr(\),)523 2013
y(then)33 b Fq(q)42 b(=)-51 b Fi(2)31 b Fp(Maxima)7 b
Fr(\()p Fq(p)p Fr(\))33 b(and)e(the)i(exc)n(hange)d(of)i
Fq(p)g Fr(and)g Fq(q)j Fr(in)d(the)h(+60)2790 1983 y
Fg(\016)2826 2013 y Fr(-order)e(do)r(es)g(not)523 2113
y(a\013ect)d(the)g(maxima)f(diagram)f(at)h(all.)37 b(No)27
b(data)g(structure)g(up)r(dates)h(are)f(necessary)-7
b(.)648 2248 y(If)26 b Fq(p)d Fi(2)g Fp(Par)l(ents)1155
2260 y Fl(a)1195 2248 y Fr(\()p Fq(q)s Fr(\),)k(the)g(maxima)e(diagram)
g(c)n(hanges,)g(but)i(only)f(in)g(the)g(vicinit)n(y)g(of)523
2348 y Fq(p)j Fr(and)f Fq(q)s Fr(.)41 b(The)29 b(exc)n(hange)f(of)g
Fq(p)h Fr(and)g Fq(q)j Fr(do)r(es)c(not)h(c)n(hange)f(the)h(targets)f
(of)g(p)r(oin)n(ts)h(to)g(the)523 2447 y(righ)n(t)g(of)h
Fq(p)p Fr(.)43 b(Only)29 b(the)h(lo)n(w)n(er)e(target)h(of)h
Fq(p)f Fr(needs)h(to)g(b)r(e)g(up)r(dated;)h(Step)f(1b)g(tak)n(es)e
(care)523 2547 y(of)k(this.)49 b(Of)31 b(the)h(p)r(oin)n(ts)g(to)f(the)
h(left)h(of)e Fq(p)p Fr(,)i(only)e(those)g(with)h Fq(q)j
Fr(as)c(their)h(upp)r(er)f(target)523 2647 y(\(i.e.,)d(mem)n(b)r(ers)f
(of)g Fp(Par)l(ents)1439 2659 y Fl(b)1473 2647 y Fr(\()p
Fq(q)s Fr(\)\))h(need)f(to)g(ha)n(v)n(e)f(their)h(targets)f(c)n(hanged)
h(to)g Fq(p)p Fr(.)36 b(Step)28 b(1c)523 2746 y(do)r(es)g(this.)37
b(The)28 b Fp(Cands)8 b Fr(\(\))28 b(set)g(c)n(hanges)f(only)g(for)g
Fq(p)h Fr(\(b)r(ecause)g Fq(q)i Fr(en)n(ters)e(it\))g(and)g(for)f(the)
523 2846 y(p)r(oin)n(t)22 b Fq(v)j Fr(whose)d Fp(Cands)7
b Fr(\()p Fq(v)s Fr(\))23 b(set)f Fq(q)j Fr(lea)n(v)n(es;)e(Step)f(1a)f
(do)r(es)h(this.)35 b(The)22 b(\\leftmost")f(\014elds)h(are)523
2946 y(up)r(dated)32 b(in)g(the)g Fp(Cands)7 b Fr(\(\))33
b(binary)d(trees)h(during)g(the)h(mo)r(di\014cation,)h(so)d
Fp(lc)l(and)10 b Fr(\()p Fq(p)p Fr(\))32 b(and)523 3045
y Fp(lc)l(and)9 b Fr(\()p Fq(v)s Fr(\))27 b(are)f(correctly)f(main)n
(tained.)36 b(The)26 b Fp(Cands)8 b Fr(\(\))27 b(and)f
Fp(Par)l(ents)7 b Fr(\(\))26 b(lists)h(are)e(enough)523
3145 y(to)33 b(sp)r(ecify)h(the)f(com)n(binatorial)e(structure)i(of)g
(the)h(maxima)e(diagram;)j(since)e(they)g(are)523 3244
y(correctly)26 b(main)n(tained,)h(so)g(is)h(the)g(maxima)f(diagram.)648
3379 y(In)c(the)g(case)f(in)i(whic)n(h)f Fq(q)j Fr(exits)d
Fp(Dom)6 b Fr(\()p Fq(p)p Fr(\),)25 b(the)e(c)n(hanges)f(to)h(the)g
(maxima)g(diagram)e(are)523 3479 y(the)26 b(in)n(v)n(erse)e(of)h(those)
h(in)f(the)h(\014rst)g(case.)35 b(The)26 b(up)r(date)f(pro)r(cedure)g
(for)g(this)h(case)e(in)n(v)n(erts)523 3579 y(the)k(action)f(of)h(the)g
(\014rst)f(up)r(date)h(pro)r(cedure,)f(and)g(hence)h(is)f(correct.)564
b Ff(2)648 3732 y Fr(The)26 b(pro)r(cedure)g(for)g(exc)n(hanging)f(t)n
(w)n(o)h(p)r(oin)n(ts)g(in)h(the)g Fi(\000)p Fr(60)2547
3701 y Fg(\016)2584 3732 y Fr(-order)e(is)h(symmetric)h(to)523
3831 y(the)34 b(one)g(for)f(+60)1113 3801 y Fg(\016)1150
3831 y Fr(-order)f(exc)n(hanges.)53 b(There)33 b(are)g
Fq(O)r Fr(\()p Fq(n)2377 3801 y Fo(2)2415 3831 y Fr(\))h(exc)n(hanges)e
(in)i(eac)n(h)f(of)h(the)523 3931 y(three)27 b(orders.)648
4066 y(It)34 b(is)f(clear)g(that)h(eac)n(h)f(of)h(the)g(up)r(date)g(op)
r(erations)f(needed)h(to)g(restore)e(the)i(auxil-)523
4165 y(iary)27 b(data)g(structures)g Fp(Cands)8 b Fr(\(\),)28
b Fp(Par)l(ents)7 b Fr(\(\),)28 b(and)g Fp(lc)l(and)9
b Fr(\(\))29 b(tak)n(es)e Fq(O)r Fr(\(log)15 b Fq(n)p
Fr(\))27 b(time:)38 b(eac)n(h)523 4265 y(in)n(v)n(olv)n(es)26
b(a)h(constan)n(t)g(n)n(um)n(b)r(er)g(of)h(standard)e(op)r(erations)h
(on)g(balanced)g(binary)g(trees.)648 4400 y(The)32 b(\014nal)h(elemen)n
(t)g(of)f(our)g(kinetic)h(data)f(structure)g(is)h(a)f(kinetic)h
(tournamen)n(t)f(on)523 4500 y(the)g(3)p Fq(n)f Fr(distances)g(corresp)
r(onding)f(to)h(\()p Fq(p;)14 b Fp(lc)l(and)9 b Fr(\()p
Fq(p)p Fr(\)\))32 b(pairs)f(\(this)h(adds)f(3)p Fq(n)g
Fr(certi\014cates)523 4599 y(to)d(our)g(KDS\).)40 b(The)28
b(ro)r(ot)g(of)g(the)h(tournamen)n(t)e(tree)h(con)n(tains)g(the)h
(closest)e(pair)h(at)g(an)n(y)523 4699 y(time)34 b(during)g(the)g
(running)g(of)g(the)g(algorithm.)55 b(Note)34 b(that)g(when)g
Fp(lc)l(and)9 b Fr(\()p Fq(p)p Fr(\))35 b(c)n(hanges,)523
4799 y(it)29 b(triggers)d(a)i(discon)n(tin)n(uit)n(y)f(of)h(the)h(asso)
r(ciated)e(distance)h(in)g(the)h(kinetic)f(tournamen)n(t,)523
4898 y(but)g(b)r(ounds)g(lik)n(e)f(those)g(in)h(Section)g(1)f(apply)g
(ev)n(en)g(in)h(this)g(case.)1914 5147 y(23)p eop
%%Page: 24 24
24 23 bop 523 614 a Fh(Theorem)30 b(3.6)41 b Fp(The)d(kinetic)g(data)g
(structur)l(e)d(for)j(the)g(closest)f(p)l(air)h(pr)l(oblem)h(is)e
(e\016-)523 714 y(cient,)30 b(r)l(esp)l(onsive,)h(c)l(omp)l(act,)g(and)
g(lo)l(c)l(al.)523 932 y Fh(Pro)s(of:)68 b Fr(When)28
b(the)g Fq(n)f Fr(p)r(oin)n(ts)h(of)f Fq(S)33 b Fr(mo)n(v)n(e)26
b(according)g(to)h(pseudo-algebraic)e(functions)523 1032
y(of)30 b(time,)h(the)f(total)f(n)n(um)n(b)r(er)h(of)g(external)f(ev)n
(en)n(ts)g(is)g(roughly)g(quadratic,)g(in)h(the)h(w)n(orst)523
1131 y(case)26 b(\(consider)h Fq(n)f Fr(p)r(oin)n(ts)h(mo)n(ving)f(on)h
(a)g(line;)g(the)h(n)n(um)n(b)r(er)f(of)g(closest)f(pairs)g(is)h(at)g
(least)523 1231 y(the)36 b(n)n(um)n(b)r(er)f(of)g(in)n(tersections)f(b)
r(et)n(w)n(een)h(tra)5 b(jectories\).)58 b(The)36 b(w)n(orst-case)c(n)n
(um)n(b)r(er)j(of)523 1331 y(in)n(ternal)c(ev)n(en)n(ts)h(is)g(only)f
(a)h(logarithmic)f(factor)g(more:)45 b(the)32 b(n)n(um)n(b)r(er)g(of)g
(exc)n(hanges)e(in)523 1430 y(eac)n(h)36 b(of)i(the)f(three)g(orders)f
(is)h Fq(O)r Fr(\()p Fq(n)1698 1400 y Fo(2)1736 1430
y Fr(\),)j(since)d(an)n(y)f(pair)h(of)g(p)r(oin)n(ts)g(undergo)r(es)f
(only)h(a)523 1530 y(constan)n(t)24 b(n)n(um)n(b)r(er)h(of)f(exc)n
(hanges)f(under)i(pseudo-algebraic)d(motions;)k(there)e(are)g
Fq(O)r Fr(\()p Fq(n)3317 1500 y Fo(2)3355 1530 y Fr(\))523
1629 y(c)n(hanges)j(to)i Fp(lc)l(and)9 b Fr(\(\))29 b(v)-5
b(alues)28 b(o)n(v)n(er)f(the)i(life)g(of)f(the)h(algorithm;)f(the)h(n)
n(um)n(b)r(er)f(of)g(v)n(ertices)523 1729 y(on)i(the)h(lo)n(w)n(er)f
(en)n(v)n(elop)r(e)f(of)i(the)g(\()p Fq(p;)14 b Fp(lc)l(and)9
b Fr(\()p Fq(p)p Fr(\)\))32 b(pairs)d(is)i Fq(O)r Fr(\()p
Fq(n)2507 1699 y Fo(2)2545 1729 y Fq(\014)t Fr(\()p Fq(n)p
Fr(\)\))h(where)e Fq(\014)t Fr(\()p Fq(n)p Fr(\))h(is)g(an)523
1829 y(extremely)i(slo)n(wly)g(gro)n(wing)f(function)i([34)o(];)k(and)
33 b(the)i(kinetic)f(tournamen)n(t)f(pro)r(cesses)523
1928 y(only)26 b(a)g(logarithmic)g(factor)g(more)f(ev)n(en)n(ts)h(than)
h(app)r(ear)e(on)i(the)g(lo)n(w)n(er)e(en)n(v)n(elop)r(e)g(of)i(the)523
2028 y(pairwise)g(distances.)36 b(Hence)28 b(the)g(KDS)f(is)h
(e\016cien)n(t.)648 2163 y(The)38 b(pro)r(cessing)f(of)h(an)h(ev)n(en)n
(t)f(in)n(v)n(olv)n(es)e Fq(O)r Fr(\(log)15 b Fq(n)p
Fr(\))39 b(op)r(erations)e(on)h(the)h(structure)523 2263
y(and)34 b(the)h(sc)n(heduling)f(of)h Fq(O)r Fr(\(log)15
b Fq(n)p Fr(\))35 b(ev)n(en)n(ts)e(in)i(the)g(ev)n(en)n(t)f(queue.)58
b(Hence)35 b(the)g(KDS)f(is)523 2362 y(resp)r(onsiv)n(e.)648
2497 y(There)27 b(are)h(only)f Fq(O)r Fr(\()p Fq(n)p
Fr(\))j(ev)n(en)n(ts)d(in)i(the)f(ev)n(en)n(t)g(queue)g(at)g(an)n(y)g
(time:)38 b(one)28 b(for)g(eac)n(h)f(of)523 2597 y(the)k(3)p
Fq(n)21 b Fi(\000)f Fr(3)30 b(order)g(certi\014cates,)h(and)g
Fq(O)r Fr(\()p Fq(n)p Fr(\))h(for)f(the)g(kinetic)g(tournamen)n(t.)47
b(Hence)31 b(the)523 2697 y(KDS)d(is)f(compact.)648 2832
y(A)h(p)r(oin)n(t)g(is)g(in)n(v)n(olv)n(ed)f(in)h Fq(O)r
Fr(\(log)15 b Fq(n)p Fr(\))28 b(certi\014cates.)38 b(Eac)n(h)26
b(p)r(oin)n(t)j Fq(p)e Fr(of)h Fq(S)33 b Fr(b)r(elongs)28
b(to)f(at)523 2931 y(most)c(six)f(order)g(certi\014cates)g(and)h(to)g
Fq(O)r Fr(\(log)15 b Fq(n)p Fr(\))23 b(comparison)e(certi\014cates)h
(that)i(main)n(tain)523 3031 y(the)31 b(\\leftmost")e(\014elds)i(in)f
Fp(lc)l(and)10 b Fr(\(\))30 b(trees.)45 b(It)30 b(b)r(elongs)g(to)g(at)
g(most)g(three)g(\()p Fq(p;)14 b Fp(lc)l(and)c Fr(\()p
Fq(p)p Fr(\)\))523 3131 y(pairs)31 b(\(one)h(for)f(eac)n(h)h(of)g(the)g
(three)g(rotations\).)49 b(Lik)n(ewise,)32 b(eac)n(h)f
Fq(p)h Fr(is)g Fp(lc)l(and)9 b Fr(\()p Fq(q)s Fr(\))33
b(for)f(at)523 3230 y(most)20 b(three)f(di\013eren)n(t)h
Fq(q)s Fr(s,)i(one)d(for)g(eac)n(h)h(rotation;)h(this)f(is)g(b)r
(ecause)f(for)h(a)f(single)g(rotation,)523 3330 y(the)31
b Fp(Cands)8 b Fr(\(\))31 b(sets)g(are)f(all)g(disjoin)n(t.)47
b(Eac)n(h)29 b(activ)n(e)h(\()p Fq(p;)14 b Fp(lc)l(and)c
Fr(\()p Fq(p)p Fr(\)\))31 b(pair)f(participates)g(in)523
3429 y Fq(O)r Fr(\(log)15 b Fq(n)p Fr(\))28 b(ev)n(en)n(ts)f(in)h(the)g
(kinetic)f(tournamen)n(t.)37 b(Hence)27 b(the)h(KDS)g(is)g(lo)r(cal.)
362 b Ff(2)523 3764 y Fs(4)135 b(Conclusion)45 b(and)g(further)g
(issues)523 3982 y Fr(W)-7 b(e)32 b(ha)n(v)n(e)e(presen)n(ted)g(a)h
(new)g(framew)n(ork)e(for)i(main)n(taining)g(attributes)g
(\(con\014guration)523 4081 y(functions\))g(of)g(ob)5
b(jects)31 b(in)g(con)n(tin)n(uous)e(motion.)47 b(This)30
b(framew)n(ork)f(in)n(tro)r(duces)h(an)h(on-)523 4181
y(line,)38 b(com)n(binatorial)c(approac)n(h)g(to)i(c)n(hanges)f(in)h
(the)g(con\014guration)e(function,)39 b(a)n(v)n(oids)523
4280 y(a)34 b(discretization)f(of)h(time,)j(and)d(sets)g(the)h(ground)e
(for)g(using)h(sophisticated)g(algorith-)523 4380 y(mic)i(tec)n
(hniques)g(to)g(main)n(tain)g(these)g(con\014gurations)e(in)i(what)g(w)
n(e)g(call)g(kinetic)g(data)523 4480 y(structures.)45
b(W)-7 b(e)31 b(measure)f(the)h(qualit)n(y)f(of)h(a)f(KDS)h(b)n(y)f
(its)h(resp)r(onsiv)n(eness,)e(e\016ciency)-7 b(,)523
4579 y(lo)r(calit)n(y)g(,)22 b(and)g(compactness.)34
b(By)22 b(w)n(orking)e(through)h(three)g(examples,)i(w)n(e)e(ha)n(v)n
(e)g(demon-)523 4679 y(strated)31 b(the)g(generalit)n(y)f(of)h(the)g
(kinetization)g(pro)r(cedure,)g(whic)n(h)g(transforms)f(a)h(static)523
4779 y(algorithm)i(in)n(to)g(its)h(kinetic)h(coun)n(terpart.)54
b(Moreo)n(v)n(er,)33 b(the)h(algorithms)e(describ)r(ed)i(in)523
4878 y(this)d(pap)r(er)e(ha)n(v)n(e)g(b)r(een)i(implemen)n(ted,)h(sho)n
(wing)d(that)h(the)h(framew)n(ork)d(as)h(w)n(ell)h(as)g(the)1914
5147 y(24)p eop
%%Page: 25 25
25 24 bop 523 614 a Fr(algorithms)26 b(are)h(v)-5 b(aluable)27
b(in)h(practice)f([11)o(].)648 799 y(In)34 b(conclusion,)g(w)n(e)g(men)
n(tion)g(a)f(few)i(of)f(the)g(n)n(umerous)f(issues)g(that)h(need)g
(further)523 899 y(w)n(ork.)648 1059 y(Although)21 b(in)h(the)f
(analyses)f(of)i(the)f(t)n(w)n(o)g(examples)f(discussed)h(in)h(this)g
(pap)r(er)f(\(con)n(v)n(ex)523 1158 y(h)n(ull)29 b(and)h(closest)e
(pair\))h(w)n(e)g(ha)n(v)n(e)f(assumed)h(that)h(eac)n(h)e(p)r(oin)n(t)i
(follo)n(ws)e(a)h(\014xed)g(pseudo-)523 1258 y(algebraic)34
b(\015igh)n(t)h(plan,)j(in)d(general)f(it)i(is)g(imp)r(ortan)n(t)f(to)g
(mak)n(e)g(the)h(n)n(um)n(b)r(er)f(of)g(\015igh)n(t)523
1358 y(plan)f(c)n(hanges)e(\(globally)-7 b(,)35 b(or)e(on)g(a)g(p)r(er)
h(ob)5 b(ject)34 b(basis\))f(a)g(parameter)g(of)g(the)i(analysis.)523
1457 y(This)25 b(will)g(b)r(ecome)g(necessary)-7 b(,)23
b(ev)n(en)i(if)g(our)f(actual)g(ob)5 b(jects)25 b(nev)n(er)e(c)n(hange)
h(\015igh)n(t)h(plans,)523 1557 y(whenev)n(er)e(w)n(e)h(w)n(an)n(t)g
(to)g(comp)r(ose)g(kinetizations.)35 b(F)-7 b(or)24 b(example,)g(the)h
(separation)e(of)h(the)523 1657 y(closest)e(pair)g(among)g(con)n(tin)n
(uously)g(mo)n(ving)f(p)r(oin)n(ts)i(c)n(hanges)f(con)n(tin)n(uously)-7
b(,)22 b(ev)n(en)h(if)g(the)523 1756 y(actual)34 b(pairs)f(realizing)f
(the)j(distance)e(c)n(hange)g(from)h(time)g(to)g(time.)57
b(If)34 b(this)h(distance)523 1856 y(itself)j(is)f(to)h(b)r(ecome)f(an)
g(input)i(to)e(another)g(kinetic)h(algorithm,)g(its)g(\015igh)n(t)g
(plan)f(has)523 1955 y(to)30 b(b)r(e)h(up)r(dated)g(whenev)n(er)e(the)i
(underlying)e(realizing)g(pair)h(c)n(hanges.)44 b(An)30
b(instance)g(of)523 2055 y(this)k(phenomenon)g(is)g(already)e(presen)n
(t)i(inside)g(our)f(kinetization)h(of)g(the)g(closest)f(pair)523
2155 y(algorithm)26 b(in)i(Section)g(3.)648 2290 y(Exp)r(erimen)n(ts)18
b(on)g(random)g(inputs)h(sho)n(w)n(ed)f(that)h(our)e(kinetic)i(con)n(v)
n(ex)f(h)n(ull)h(algorithm)523 2389 y(has)j(an)h(o)n(v)n(erhead)d(of)j
(in)n(ternal)f(ev)n(en)n(ts)g(that)h(is)g(of)g(the)g(same)f(order)f(as)
i(the)g(n)n(um)n(b)r(er)f(of)h(ex-)523 2489 y(ternal)g(ev)n(en)n(ts,)h
(whereas)f(our)g(kinetic)h(closest)f(pair)g(algorithm)g(alw)n(a)n(ys)f
(pro)r(cesses)g(\002\()p Fq(n)3318 2459 y Fo(2)3355 2489
y Fr(\))523 2589 y(in)n(ternal)34 b(ev)n(en)n(ts.)57
b(Hence,)37 b(ideally)-7 b(,)36 b(the)f(measure)f(of)g(e\016ciency)h
(should)f(not)h(compare)523 2688 y(the)c(w)n(orst-case)d(n)n(um)n(b)r
(er)i(of)g(in)n(ternal)g(ev)n(en)n(ts)g(to)g(the)h(w)n(orst-case)d(n)n
(um)n(b)r(er)i(of)g(external)523 2788 y(ev)n(en)n(ts,)g(but)h(the)g(w)n
(orst-case)d(ratio)h(of)i(the)f(actual)g(n)n(um)n(b)r(er)g(of)g(in)n
(ternal)g(ev)n(en)n(ts)g(to)g(the)523 2888 y(actual)c(n)n(um)n(b)r(er)f
(of)i(external)e(ev)n(en)n(ts)g(for)h(an)n(y)f(\015igh)n(t)h(plan.)36
b(It)27 b(app)r(ears)e(m)n(uc)n(h)h(more)f(dif-)523 2987
y(\014cult)f(to)g(dev)n(elop)f(go)r(o)r(d)g(algorithms)f(with)j(resp)r
(ect)e(to)h(this)g(measure.)34 b(Ev)n(en)23 b(if)h(an)g(exact)523
3087 y(analysis)i(is)h(di\016cult,)h(heuristics)f(that)h(prune)f
(unneeded)g(in)n(ternal)g(ev)n(en)n(ts)f(are)h(lik)n(ely)f(to)523
3186 y(pro)n(v)n(e)g(imp)r(ortan)n(t)h(in)h(practice.)648
3321 y(W)-7 b(e)18 b(can)g(view)h(our)e(kinetization)h(pro)r(cess)f(as)
h(starting)g(from)g(a)g(pro)r(of)g(of)g(correctness)e(of)523
3421 y(a)29 b(static)g(con\014guration)e(function,)j(and)f(then)g
(\\animating)f(this)i(pro)r(of)e(through)g(time.")523
3521 y(Not)35 b(all)g(pro)r(ofs)f(are)g(equally)h(go)r(o)r(d)f(for)h
(this)g(use.)59 b(Our)35 b(lo)r(calit)n(y)f(requiremen)n(t)g(fa)n(v)n
(ors)523 3620 y(pro)r(ofs)25 b(that)i(ha)n(v)n(e)e(a)g(small)h(n)n(um)n
(b)r(er)g(of)g(predicates)f(in)n(v)n(olving)g(eac)n(h)g(particular)g
(datum.)523 3720 y(Th)n(us)32 b(it)g(will)g(generally)e(b)r(e)i(adv)-5
b(an)n(tageous)30 b(to)i(start)f(with)h(\\shallo)n(w)f(pro)r(ofs"|pro)r
(ofs)523 3820 y(of)39 b(small)f(depth|for)g(the)h(static)g(problem,)i
(suc)n(h)d(as)g(one)g(gets,)j(for)d(example,)j(from)523
3919 y Fp(p)l(ar)l(al)t(lel)29 b Fr(algorithms)d(for)h(solving)f(the)i
(static)f(v)n(ersion.)35 b(T)-7 b(ec)n(hniques)27 b(already)f(dev)n
(elop)r(ed)523 4019 y(in)f(parallel)f(computational)h(geometry)f([6)o
(])h(or)g(in)g(parametric)f(searc)n(hing)f([5)o(])j(ma)n(y)e(pro)n(v)n
(e)523 4118 y(to)k(b)r(e)g(useful.)648 4254 y(In)22 b(a)f(real)g(time)h
(system,)h(it)f(is)g(p)r(ossible)f(that)h(there)g(is)g(not)g
(su\016cien)n(t)g(time)g(to)g(pro)r(cess)523 4353 y(an)37
b(ev)n(en)n(t)f(completely)h(b)r(efore)g(the)g(next)g(ev)n(en)n(t)g
(app)r(ears.)64 b(If)37 b(kinetic)g(structures)f(are)523
4453 y(to)41 b(b)r(e)h(used)f(in)g(suc)n(h)g(a)g(con)n(text,)k(it)c(is)
g(crucial)g(to)g(b)r(e)g(able)g(to)g(main)n(tain)g(partially)523
4552 y(correct)31 b(structures,)h(with)g(a)g(mec)n(hanism)f(for)g(pro)r
(cessing)g(m)n(ultiple)h(ev)n(en)n(ts)f(e\016cien)n(tly)523
4652 y(and)c(correctly)g(as)f(a)i(batc)n(h.)523 4858
y Fk(Ac)m(kno)m(wledgmen)m(ts.)36 b Fr(W)-7 b(e)27 b(wish)h(to)f(thank)
g(P)n(ank)-5 b(a)5 b(j)26 b(Agarw)n(al,)g(Ra)5 b(jeev)26
b(Mot)n(w)n(ani,)1914 5147 y(25)p eop
%%Page: 26 26
26 25 bop 523 614 a Fr(G.D.)37 b(Ramkumar,)h(Craig)d(Silv)n(erstein,)j
(and)e(Li)g(Zhang)g(for)f(useful)i(discussions,)h(and)523
714 y(Rob)r(ert-P)n(aul)29 b(Berrett)n(y)g(for)g(p)r(oin)n(ting)i(out)f
(an)g(error)e(in)j(a)e(\014rst)h(v)n(ersion)f(of)h(this)h(pap)r(er.)523
814 y(Julien)f(Basc)n(h,)g(Craig)f(Silv)n(erstein,)i(and)f(Li)g(Zhang)g
(implemen)n(ted)h(the)g(algorithms)e(de-)523 913 y(scrib)r(ed)i(in)g
(this)g(pap)r(er.)46 b(Leonidas)30 b(Guibas)h(ac)n(kno)n(wledges)d
(supp)r(ort)j(b)n(y)g(AR)n(O{MURI)523 1013 y(gran)n(t)26
b(5-23542,)f(and)i(NSF)i(gran)n(ts)d(CCR-9215219)e(and)j(IRI-9306544.)
523 1310 y Fs(References)561 1492 y Fu([1])43 b(P)-6
b(.)39 b(Agarw)n(al,)k(J.)c(Eric)n(kson,)k(and)38 b(L.)g(Guibas.)74
b(Kinetic)38 b(binary)g(space)h(partitions)g(for)684
1583 y(triangles.)34 b(In)24 b Ft(Pr)l(o)l(c.)j(9th)g(A)n(CM-SIAM)f
(Symp)l(os.)h(Discr)l(ete)h(A)n(lgorithms)p Fu(,)e(pages)f(107{116,)684
1674 y(Jan)n(uary)h(1998.)561 1799 y([2])43 b(P)-6 b(.)18
b(K.)h(Agarw)n(al,)i(L.)e(J.)g(Guibas,)h(J.)f(Hersh)n(b)r(erger,)h(and)
e(E.)h(V)-6 b(eac)n(h.)22 b(Main)n(taining)d(the)f(exten)n(t)684
1890 y(of)33 b(a)g(mo)n(ving)e(p)r(oin)n(t)h(set.)55
b(In)31 b Ft(Pr)l(o)l(c)l(e)l(e)l(dings)36 b(of)e(the)g(5th)h(Workshop)
g(on)e(A)n(lgorithms)i(and)684 1981 y(Data)26 b(Structur)l(es)p
Fu(,)i(pages)c(31{44.)i(Springer-V)-6 b(erlag,)24 b(1997.)33
b(Lecture)24 b(Notes)g(in)f(Computer)684 2073 y(Science)j(1272.)561
2197 y([3])43 b(P)-6 b(.)33 b(K.)h(Agarw)n(al,)j(L.)c(J.)h(Guibas,)i
(T.)e(Murali,)j(and)c(J.)h(Vitter.)57 b(Cylindrical)34
b(static)h(and)684 2288 y(kinetic)i(binary)g(space)h(partitions.)69
b(In)36 b Ft(Pr)l(o)l(c.)j(13th)g(A)n(nnu.)f(A)n(CM)g(Symp)l(os.)g
(Comput.)684 2379 y(Ge)l(om.)p Fu(,)26 b(pages)h(39{48,)h(1997.)561
2503 y([4])43 b(P)-6 b(.)30 b(K.)g(Agarw)n(al,)i(O.)e(Sc)n(h)n(w)n
(arzk)n(opf,)h(and)f(M.)g(Sharir.)47 b(The)30 b(o)n(v)n(erla)n(y)g(of)g
(lo)n(w)n(er)h(en)n(v)n(elop)r(es)684 2595 y(and)25 b(its)h
(applications.)36 b Ft(Discr)l(ete)29 b(Comput.)f(Ge)l(om.)p
Fu(,)e(15:1{13,)j(1996.)561 2719 y([5])43 b(P)-6 b(.)23
b(K.)h(Agarw)n(al,)h(M.)f(Sharir,)g(and)f(S.)g(T)-6 b(oledo.)31
b(Applications)24 b(of)g(parametric)f(searc)n(hing)h(in)684
2810 y(geometric)i(optimization.)35 b Ft(J.)27 b(A)n(lgorithms)p
Fu(,)g(17:292{318,)j(1994.)561 2934 y([6])43 b(S.)33
b(G.)g(Akl)f(and)g(K.)h(A.)f(Ly)n(ons.)55 b Ft(Par)l(al)t(lel)34
b(Computational)h(Ge)l(ometry)p Fu(.)57 b(Pren)n(tice)33
b(Hall,)684 3025 y(1993.)561 3149 y([7])43 b(M.)23 b(J.)h(A)n(tallah.)
30 b(Some)22 b(dynamic)g(computational)g(geometry)h(problems.)29
b Ft(Comput.)c(Math.)684 3241 y(Appl.)p Fu(,)g(11:1171{1181,)31
b(1985.)561 3365 y([8])43 b(J.)19 b(Basc)n(h,)i(J.)d(Eric)n(kson,)j(L.)
d(J.)h(Guibas,)i(J.)d(Hersh)n(b)r(erger,)i(and)e(L.)h(Zhang.)j(Kinetic)
c(collision)684 3456 y(detection)i(b)r(et)n(w)n(een)g(t)n(w)n(o)h
(simple)f(p)r(olygons.)26 b(T)-6 b(o)21 b(app)r(ear)f(in)g
Ft(Pr)l(o)l(c.)j(10th)h(Symp)l(os.)f(Discr)l(ete)684
3547 y(A)n(lgorithms)p Fu(,)k(1999.)561 3671 y([9])43
b(J.)35 b(Basc)n(h,)j(L.)c(J.)i(Guibas,)h(and)d(J.)h(Hersh)n(b)r
(erger.)61 b(Data)35 b(structures)f(for)h(mobile)g(data.)684
3763 y(In)29 b Ft(Pr)l(o)l(c.)j(8th)g(A)n(CM-SIAM)e(Symp)l(os.)i(Discr)
l(ete)g(A)n(lgorithms)p Fu(,)g(pages)f(747{756,)i(Jan)n(uary)684
3854 y(1997.)523 3978 y([10])43 b(J.)29 b(Basc)n(h,)h(L.)e(J.)h
(Guibas,)g(and)f(G.D.)h(Ramkumar.)39 b(Sw)n(eeping)28
b(lines)h(and)f(line)h(segmen)n(ts)684 4070 y(with)23
b(a)g(heap.)30 b(In)22 b Ft(Pr)l(o)l(c.)k(13th)g(A)n(nnu.)f(A)n(CM)f
(Symp)l(os.)i(Comput.)f(Ge)l(om.)p Fu(,)e(pages)h(469{471,)684
4161 y(1997.)523 4285 y([11])43 b(J.)30 b(Basc)n(h,)h(L.)f(J.)g
(Guibas,)h(C.)e(D.)h(Silv)n(erstein,)g(and)f(L.)h(Zhang.)45
b(A)28 b(practical)j(ev)l(aluation)684 4376 y(of)f(kinetic)f(data)g
(structures.)45 b(In)28 b Ft(Pr)l(o)l(c.)j(13th)h(A)n(nnu.)f(A)n(CM)f
(Symp)l(os.)h(Comput.)g(Ge)l(om.)p Fu(,)684 4468 y(pages)c(388{390,)h
(1997.)523 4592 y([12])43 b(J.)27 b(Basc)n(h,)g(L.)f(J.)g(Guibas,)h
(and)f(L.)g(Zhang.)35 b(Pro)n(ximit)n(y)25 b(problems)h(on)g(mo)n(ving)
f(p)r(oin)n(ts.)35 b(In)684 4683 y Ft(Pr)l(o)l(c.)28
b(13th)h(A)n(nnu.)e(A)n(CM)g(Symp)l(os.)h(Comput.)g(Ge)l(om.)p
Fu(,)e(pages)g(344{351,)j(1997.)523 4807 y([13])43 b(J.)31
b(L.)g(Ben)n(tley)g(and)f(T.)i(A.)f(Ottmann.)47 b(Algorithms)31
b(for)g(rep)r(orting)h(and)e(coun)n(ting)h(geo-)684 4898
y(metric)25 b(in)n(tersections.)36 b Ft(IEEE)27 b(T)-6
b(r)l(ans.)28 b(Comput.)p Fu(,)e(C-28:643{647,)k(1979.)1914
5147 y Fr(26)p eop
%%Page: 27 27
27 26 bop 523 614 a Fu([14])43 b(S.)34 b(N.)g(Bespam)n(y)n(atnikh.)57
b(An)33 b(optimal)h(algorithm)g(for)h(closest)g(pair)g(main)n(tenance.)
58 b(In)684 706 y Ft(Pr)l(o)l(c.)28 b(11th)h(A)n(nnu.)e(A)n(CM)g(Symp)l
(os.)h(Comput.)g(Ge)l(om.)p Fu(,)e(pages)g(152{161,)j(1995.)523
825 y([15])43 b(K.)30 b(Q.)f(Bro)n(wn.)48 b(Commen)n(ts)28
b(on)i(\\Algorithms)g(for)g(rep)r(orting)h(and)e(coun)n(ting)h
(geometric)684 916 y(in)n(tersections".)36 b Ft(IEEE)27
b(T)-6 b(r)l(ans.)28 b(Comput.)p Fu(,)e(C-30:147{148,)k(1981.)523
1036 y([16])43 b(P)-6 b(.)31 b(B.)i(Callahan)f(and)f(S.)h(Rao)f(Kosara)
t(ju.)53 b(Algorithms)32 b(for)g(dynamic)e(closest-pair)j(and)684
1127 y Fa(n)p Fu(-b)r(o)r(dy)e(p)r(oten)n(tial)h(\014elds.)52
b(In)31 b Ft(Pr)l(o)l(c.)i(6th)h(A)n(CM-SIAM)e(Symp)l(os.)h(Discr)l
(ete)i(A)n(lgorithms)684 1218 y(\(SOD)n(A)28 b('95\))p
Fu(,)e(pages)g(263{272,)j(1995.)523 1338 y([17])43 b(T.)33
b(H.)g(Cormen,)h(C.)g(E.)f(Leiserson,)j(and)c(R.)g(L.)h(Riv)n(est.)55
b Ft(Intr)l(o)l(duction)36 b(to)e(A)n(lgorithms)p Fu(.)684
1429 y(The)26 b(MIT)g(Press,)h(Cam)n(bridge,)f(Mass.,)i(1990.)523
1548 y([18])43 b(O.)21 b(Devillers,)h(M.)g(Golin,)h(K.)d(Kedem,)h(and)f
(S.)h(Sc)n(hirra.)26 b(Rev)n(enge)20 b(of)i(the)e(dog:)32
b(Queries)21 b(on)684 1640 y(V)-6 b(oronoi)27 b(diagrams)g(of)h(mo)n
(ving)d(p)r(oin)n(ts.)38 b(In)26 b Ft(Pr)l(o)l(c.)j(6th)g(Canad.)g
(Conf.)e(Comput.)i(Ge)l(om.)p Fu(,)684 1731 y(pages)e(122{127,)h(1994.)
523 1850 y([19])43 b(H.)31 b(Edelsbrunner)f(and)h(E.)g(W)-6
b(elzl.)51 b(Constructing)31 b(b)r(elts)h(in)e(t)n(w)n(o-dimensional)i
(arrange-)684 1942 y(men)n(ts)24 b(with)i(applications.)36
b Ft(SIAM)27 b(J.)g(Comput.)p Fu(,)f(15:271{284,)k(1986.)523
2061 y([20])43 b(J.)34 b(Eric)n(kson,)i(L.)e(J.)g(Guibas,)i(J.)f
(Sto\014,)g(and)e(L.)h(Zhang.)57 b(Separation-sensitiv)n(e)34
b(kinetic)684 2152 y(collision)29 b(detection)e(for)g(con)n(v)n(ex)f
(ob)t(jects.)38 b(T)-6 b(o)27 b(app)r(ear)g(in)g Ft(Pr)l(o)l(c.)i(10th)
g(Symp)l(os.)g(Discr)l(ete)684 2244 y(A)n(lgorithms)p
Fu(,)e(1999.)523 2363 y([21])43 b(J.-J.)37 b(F)-6 b(u)35
b(and)h(R.)g(C.)g(T.)h(Lee.)66 b(V)-6 b(oronoi)36 b(diagrams)g(of)h(mo)
n(ving)e(p)r(oin)n(ts)h(in)g(the)g(plane.)684 2454 y
Ft(Internat.)29 b(J.)e(Comput.)g(Ge)l(om.)h(Appl.)p Fu(,)e
(1\(1\):23{32,)i(1991.)523 2574 y([22])43 b(M.)34 b(Golin,)i(R.)d
(Raman,)h(C.)g(Sc)n(h)n(w)n(arz,)h(and)e(M.)h(Smid.)55
b(Randomized)32 b(data)h(structures)684 2665 y(for)25
b(the)e(dynamic)f(closest-pair)j(problem.)31 b(In)23
b Ft(Pr)l(o)l(c.)j(4th)g(A)n(CM-SIAM)g(Symp)l(os.)g(Discr)l(ete)684
2756 y(A)n(lgorithms)p Fu(,)h(pages)f(301{310,)j(1993.)523
2876 y([23])43 b(L.)25 b(Guibas,)h(J.)g(S.)f(B.)g(Mitc)n(hell,)i(and)d
(T.)i(Ro)r(os.)34 b(V)-6 b(oronoi)25 b(diagrams)g(of)h(mo)n(ving)e(p)r
(oin)n(ts)h(in)684 2967 y(the)j(plane.)44 b(In)28 b Ft(Pr)l(o)l(c.)j
(17th)g(Internat.)h(Workshop)f(Gr)l(aph-The)l(or)l(et.)j(Conc)l(epts)e
(Comput.)684 3058 y(Sci.)p Fu(,)23 b(v)n(olume)g(570)h(of)g
Ft(L)l(e)l(ctur)l(e)j(Notes)g(in)e(Computer)h(Scienc)l(e)p
Fu(,)f(pages)f(113{125.)j(Springer-)684 3150 y(V)-6 b(erlag,)26
b(1991.)523 3269 y([24])43 b(J.)23 b(Hersh)n(b)r(erger.)28
b(Finding)22 b(the)g(upp)r(er)f(en)n(v)n(elop)r(e)h(of)h
Fa(n)f Fu(line)g(segmen)n(ts)g(in)g Fa(O)r Fu(\()p Fa(n)14
b Fu(log)h Fa(n)p Fu(\))22 b(time.)684 3360 y Ft(Inform.)k(Pr)l(o)l(c)l
(ess.)k(L)l(ett.)p Fu(,)c(33:169{174,)k(1989.)523 3480
y([25])43 b(J.)20 b(Hersh)n(b)r(erger)f(and)g(S.)g(Suri.)24
b(Applications)c(of)g(a)f(semi-dynamic)e(con)n(v)n(ex)i(h)n(ull)g
(algorithm.)684 3571 y Ft(BIT)p Fu(,)25 b(32:249{267,)30
b(1992.)523 3690 y([26])43 b(S.)33 b(Kap)r(o)r(or)h(and)f(M.)h(Smid.)55
b(New)34 b(tec)n(hniques)e(for)i(exact)f(and)g(appro)n(ximate)g
(dynamic)684 3782 y(closest-p)r(oin)n(t)20 b(problems.)i(In)c
Ft(Pr)l(o)l(c.)k(10th)g(A)n(nnu.)f(A)n(CM)g(Symp)l(os.)h(Comput.)f(Ge)l
(om.)p Fu(,)f(pages)684 3873 y(165{174,)29 b(1994.)523
3992 y([27])43 b(M.)25 b(C.)g(Lin)g(and)f(J.)h(F.)g(Cann)n(y)-6
b(.)31 b(E\016cien)n(t)25 b(algorithms)g(for)g(incremen)n(tal)f
(distance)h(compu-)684 4084 y(tation.)h(In)20 b Ft(Pr)l(o)l(c.)j(IEEE)f
(Internat.)h(Conf.)f(R)l(ob)l(ot.)h(A)n(utom.)p Fu(,)f(v)n(olume)d(2,)j
(pages)f(1008{1014,)684 4175 y(1991.)523 4294 y([28])43
b(T.)33 b(Ottmann)c(and)j(D.)g(W)-6 b(o)r(o)r(d.)52 b(Dynamical)32
b(sets)g(of)g(p)r(oin)n(ts.)53 b Ft(Comput.)34 b(Vision)e(Gr)l(aph.)684
4386 y(Image)c(Pr)l(o)l(c)l(ess.)p Fu(,)f(27:157{166,)j(1984.)523
4505 y([29])43 b(M.)23 b(H.)e(Ov)n(ermars)g(and)h(J.)g(v)l(an)f(Leeu)n
(w)n(en.)29 b(Main)n(tenance)22 b(of)h(con\014gurations)f(in)g(the)g
(plane.)684 4596 y Ft(J.)27 b(Comput.)h(Syst.)g(Sci.)p
Fu(,)d(23:166{204,)30 b(1981.)523 4716 y([30])43 b(M.)27
b(K.)e(P)n(onamgi,)i(M.)f(C.)h(Lin,)f(and)g(D.)g(Mano)r(c)n(ha.)36
b(Incremen)n(tal)24 b(collision)k(detection)e(for)684
4807 y(p)r(olygonal)35 b(mo)r(dels.)59 b(In)33 b Ft(Pr)l(o)l(c.)j(11th)
g(A)n(nnu.)f(A)n(CM)f(Symp)l(os.)i(Comput.)f(Ge)l(om.)p
Fu(,)h(pages)684 4898 y(V7{V8,)26 b(1995.)1914 5147 y
Fr(27)p eop
%%Page: 28 28
28 27 bop 523 614 a Fu([31])43 b(F.)29 b(P)-6 b(.)30
b(Preparata)g(and)f(M.)g(I.)h(Shamos.)44 b Ft(Computational)31
b(Ge)l(ometry:)43 b(A)n(n)31 b(Intr)l(o)l(duction)p Fu(.)684
706 y(Springer-V)-6 b(erlag,)26 b(New)g(Y)-6 b(ork,)25
b(NY,)g(1985.)523 830 y([32])43 b(T.)28 b(Ro)r(os.)42
b(V)-6 b(oronoi)28 b(diagrams)g(o)n(v)n(er)g(dynamic)e(scenes.)41
b Ft(Discr)l(ete)31 b(Appl.)e(Math.)p Fu(,)g(43:243{)684
922 y(259,)e(1993.)523 1046 y([33])43 b(M.)27 b(Sharir.)38
b(Almost)26 b(tigh)n(t)g(upp)r(er)g(b)r(ounds)g(for)h(lo)n(w)n(er)h(en)
n(v)n(elop)r(es)f(in)f(higher)h(dimensions.)684 1137
y Ft(Discr)l(ete)i(Comput.)f(Ge)l(om.)p Fu(,)e(12:327{345,)k(1994.)523
1262 y([34])43 b(M.)21 b(Sharir)f(and)g(P)-6 b(.)20 b(K.)h(Agarw)n(al.)
27 b Ft(Davenp)l(ort-Schinzel)e(Se)l(quenc)l(es)g(and)e(Their)g(Ge)l
(ometric)684 1353 y(Applic)l(ations)p Fu(.)35 b(Cam)n(bridge)26
b(Univ)n(ersit)n(y)e(Press,)j(New)f(Y)-6 b(ork,)25 b(1995.)1914
5147 y Fr(28)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
